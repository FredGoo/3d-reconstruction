/* Generated by Cython 0.25.2 */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03020000)
    #error Cython requires Python 2.6+ or Python 3.2+.
#else
#define CYTHON_ABI "0_25_2"
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#ifndef HAVE_LONG_LONG
  #if PY_VERSION_HEX >= 0x03030000 || (PY_MAJOR_VERSION == 2 && PY_VERSION_HEX >= 0x02070000)
    #define HAVE_LONG_LONG
  #endif
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
#elif defined(PYSTON_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 0
  #elif !defined(CYTHON_USE_PYLONG_INTERNALS)
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
  #undef SHIFT
  #undef BASE
  #undef MASK
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef METH_FASTCALL
  #define METH_FASTCALL 0x80
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject **args,
                                              Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
#endif
#if CYTHON_FAST_PYCCALL
#define __Pyx_PyFastCFunction_Check(func)\
    ((PyCFunction_Check(func) && (METH_FASTCALL == (PyCFunction_GET_FLAGS(func) & ~(METH_CLASS | METH_STATIC | METH_COEXIST)))))
#else
#define __Pyx_PyFastCFunction_Check(func) 0
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535 : 1114111)
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyByteArray_Check)
  #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)
  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_PYSTON
  #define __Pyx_PyCode_HasFreeVars(co)  PyCode_HasFreeVars(co)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_MAYBE_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_MAYBE_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(U other) { return *ptr == other; }
    template<typename U> bool operator !=(U other) { return *ptr != other; }
  private:
    T *ptr;
};

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif


#define __PYX_ERR(f_index, lineno, Ln_error) \
{ \
  __pyx_filename = __pyx_f[f_index]; __pyx_lineno = lineno; __pyx_clineno = __LINE__; goto Ln_error; \
}

#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__pcl__pcl_visualization
#define __PYX_HAVE_API__pcl__pcl_visualization
#include <stddef.h>
#include <vector>
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include <string.h>
#include <string>
#include "boost/shared_ptr.hpp"
#include "boost_shared_ptr_assign.h"
#include "Eigen/Dense"
#include "Eigen/Eigen"
#include "Eigen/Geometry"
#include "pcl/point_cloud.h"
#include "pcl/point_types.h"
#include "pcl/ModelCoefficients.h"
#include "pcl/PointIndices.h"
#include "pcl/pcl_base.h"
#include "pcl/PolygonMesh.h"
#include "pcl/TextureMesh.h"
#include "pcl/Vertices.h"
#include "pcl/range_image/range_image.h"
#include "pcl/range_image/range_image_planar.h"
#include "pcl/visualization/point_cloud_handlers.h"
#include "pcl/visualization/pcl_visualizer.h"
#include "pcl/visualization/cloud_viewer.h"
#include "pcl/visualization/histogram_visualizer.h"
#include "pcl/visualization/image_viewer.h"
#include "pcl/visualization/range_image_visualizer.h"
#include "pcl/visualization/registration_visualizer.h"
#include "pcl/visualization/window.h"
#include "pcl/visualization/common/common.h"
#include <stdio.h>
#include <stdlib.h>
#include "numpy/arrayobject.h"
#include "numpy/ufuncobject.h"
#include "pcl/kdtree/kdtree.h"
#include "pcl/kdtree/kdtree_flann.h"
#include "pcl/features/feature.h"
#include "pcl/features/3dsc.h"
#include "pcl/features/boundary.h"
#include "pcl/features/esf.h"
#include "pcl/features/fpfh.h"
#include "pcl/features/fpfh_omp.h"
#include "pcl/features/integral_image_normal.h"
#include "pcl/features/intensity_gradient.h"
#include "pcl/features/intensity_spin.h"
#include "pcl/features/moment_invariants.h"
#include "pcl/features/multiscale_feature_persistence.h"
#include "pcl/features/normal_3d.h"
#include "pcl/features/normal_3d_omp.h"
#include "pcl/features/normal_based_signature.h"
#include "pcl/features/pfh.h"
#include "pcl/features/pfhrgb.h"
#include "pcl/features/ppf.h"
#include "pcl/features/ppfrgb.h"
#include "pcl/features/principal_curvatures.h"
#include "pcl/features/range_image_border_extractor.h"
#include "pcl/features/rift.h"
#include "pcl/features/shot.h"
#include "pcl/features/shot_lrf.h"
#include "pcl/features/shot_lrf_omp.h"
#include "pcl/features/shot_omp.h"
#include "pcl/features/spin_image.h"
#include "pcl/features/statistical_multiscale_interest_region_extraction.h"
#include "pcl/features/vfh.h"
#include "pcl/sample_consensus/sac_model.h"
#include "pcl/sample_consensus/sac.h"
#include "pcl/sample_consensus/rransac.h"
#include "pcl/sample_consensus/sac_model_plane.h"
#include "pcl/sample_consensus/sac_model_sphere.h"
#include "pcl/sample_consensus/lmeds.h"
#include "pcl/sample_consensus/mlesac.h"
#include "pcl/sample_consensus/msac.h"
#include "pcl/sample_consensus/prosac.h"
#include "pcl/sample_consensus/ransac.h"
#include "pcl/sample_consensus/rmsac.h"
#include "pcl/sample_consensus/sac_model_circle.h"
#include "pcl/sample_consensus/sac_model_cone.h"
#include "pcl/sample_consensus/sac_model_cylinder.h"
#include "pcl/sample_consensus/sac_model_line.h"
#include "pcl/sample_consensus/sac_model_normal_parallel_plane.h"
#include "pcl/sample_consensus/sac_model_normal_plane.h"
#include "pcl/sample_consensus/sac_model_normal_sphere.h"
#include "pcl/sample_consensus/sac_model_parallel_line.h"
#include "pcl/sample_consensus/sac_model_parallel_plane.h"
#include "pcl/sample_consensus/sac_model_perpendicular_plane.h"
#include "pcl/sample_consensus/sac_model_registration.h"
#include "pcl/sample_consensus/sac_model_stick.h"
#include "pcl/sample_consensus/method_types.h"
#include "pcl/sample_consensus/model_types.h"
#include "pythread.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER) && defined (_M_X64)
    #define __Pyx_sst_abs(value) _abs64(value)
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyObject_AsSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
#if PY_MAJOR_VERSION < 3
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#else
#define __Pyx_Py_UNICODE_strlen Py_UNICODE_strlen
#endif
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
#define __Pyx_PyBool_FromLong(b) ((b) ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c));
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */

static PyObject *__pyx_m;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;

/* Header.proto */
#if !defined(CYTHON_CCOMPLEX)
  #if defined(__cplusplus)
    #define CYTHON_CCOMPLEX 1
  #elif defined(_Complex_I)
    #define CYTHON_CCOMPLEX 1
  #else
    #define CYTHON_CCOMPLEX 0
  #endif
#endif
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #include <complex>
  #else
    #include <complex.h>
  #endif
#endif
#if CYTHON_CCOMPLEX && !defined(__cplusplus) && defined(__sun__) && defined(__GNUC__)
  #undef _Complex_I
  #define _Complex_I 1.0fj
#endif


static const char *__pyx_f[] = {
  "pcl/pxi/Visualization/Handler/PointCloudColorHandleringCustom.pxi",
  "pcl/pxi/Visualization/Handler/PointCloudColorHandleringGenericField.pxi",
  "pcl/pxi/Visualization/Handler/PointCloudColorHandleringHSVField.pxi",
  "pcl/pxi/Visualization/Handler/PointCloudColorHandleringRandom.pxi",
  "pcl/pxi/Visualization/Handler/PointCloudColorHandleringRGBField.pxi",
  "pcl/pxi/Visualization/Handler/PointCloudGeometryHandleringCustom.pxi",
  "pcl/pxi/Visualization/Handler/PointCloudGeometryHandleringSurfaceNormal.pxi",
  "pcl/pxi/Visualization/Handler/PointCloudGeometryHandleringXYZ.pxi",
  "pcl/pxi/Visualization/CloudViewing.pxi",
  "pcl/pxi/Visualization/PCLVisualizering.pxi",
  "pcl/pxi/Visualization/PCLHistogramViewing.pxi",
  "__init__.pxd",
  "stringsource",
  "pcl/pcl_visualization.pyx",
  "pcl/pcl_visualization.pxd",
  "type.pxd",
  "bool.pxd",
  "complex.pxd",
  "pcl/_pcl.pxd",
};

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":725
 * # in Cython to enable them only on the right systems.
 * 
 * ctypedef npy_int8       int8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 */
typedef npy_int8 __pyx_t_5numpy_int8_t;

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":726
 * 
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t
 */
typedef npy_int16 __pyx_t_5numpy_int16_t;

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":727
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int64      int64_t
 * #ctypedef npy_int96      int96_t
 */
typedef npy_int32 __pyx_t_5numpy_int32_t;

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":728
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_int96      int96_t
 * #ctypedef npy_int128     int128_t
 */
typedef npy_int64 __pyx_t_5numpy_int64_t;

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":732
 * #ctypedef npy_int128     int128_t
 * 
 * ctypedef npy_uint8      uint8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 */
typedef npy_uint8 __pyx_t_5numpy_uint8_t;

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":733
 * 
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t
 */
typedef npy_uint16 __pyx_t_5numpy_uint16_t;

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":734
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint64     uint64_t
 * #ctypedef npy_uint96     uint96_t
 */
typedef npy_uint32 __pyx_t_5numpy_uint32_t;

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":735
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_uint96     uint96_t
 * #ctypedef npy_uint128    uint128_t
 */
typedef npy_uint64 __pyx_t_5numpy_uint64_t;

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":739
 * #ctypedef npy_uint128    uint128_t
 * 
 * ctypedef npy_float32    float32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_float64    float64_t
 * #ctypedef npy_float80    float80_t
 */
typedef npy_float32 __pyx_t_5numpy_float32_t;

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":740
 * 
 * ctypedef npy_float32    float32_t
 * ctypedef npy_float64    float64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_float80    float80_t
 * #ctypedef npy_float128   float128_t
 */
typedef npy_float64 __pyx_t_5numpy_float64_t;

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":749
 * # The int types are mapped a bit surprising --
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t
 */
typedef npy_long __pyx_t_5numpy_int_t;

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":750
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   longlong_t
 * 
 */
typedef npy_longlong __pyx_t_5numpy_long_t;

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":751
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_ulong      uint_t
 */
typedef npy_longlong __pyx_t_5numpy_longlong_t;

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":753
 * ctypedef npy_longlong   longlong_t
 * 
 * ctypedef npy_ulong      uint_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t
 */
typedef npy_ulong __pyx_t_5numpy_uint_t;

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":754
 * 
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 */
typedef npy_ulonglong __pyx_t_5numpy_ulong_t;

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":755
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_intp       intp_t
 */
typedef npy_ulonglong __pyx_t_5numpy_ulonglong_t;

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":757
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 * ctypedef npy_intp       intp_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uintp      uintp_t
 * 
 */
typedef npy_intp __pyx_t_5numpy_intp_t;

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":758
 * 
 * ctypedef npy_intp       intp_t
 * ctypedef npy_uintp      uintp_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_double     float_t
 */
typedef npy_uintp __pyx_t_5numpy_uintp_t;

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":760
 * ctypedef npy_uintp      uintp_t
 * 
 * ctypedef npy_double     float_t             # <<<<<<<<<<<<<<
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t
 */
typedef npy_double __pyx_t_5numpy_float_t;

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":761
 * 
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longdouble longdouble_t
 * 
 */
typedef npy_double __pyx_t_5numpy_double_t;

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":762
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cfloat      cfloat_t
 */
typedef npy_longdouble __pyx_t_5numpy_longdouble_t;
/* Declarations.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< float > __pyx_t_float_complex;
  #else
    typedef float _Complex __pyx_t_float_complex;
  #endif
#else
    typedef struct { float real, imag; } __pyx_t_float_complex;
#endif
static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float, float);

/* Declarations.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< double > __pyx_t_double_complex;
  #else
    typedef double _Complex __pyx_t_double_complex;
  #endif
#else
    typedef struct { double real, imag; } __pyx_t_double_complex;
#endif
static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double, double);


/*--- Type declarations ---*/
struct __pyx_obj_3pcl_4_pcl_PointCloud;
struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZI;
struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZRGB;
struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZRGBA;
struct __pyx_obj_3pcl_4_pcl_Vertices;
struct __pyx_obj_3pcl_4_pcl_PointCloud_PointWithViewpoint;
struct __pyx_obj_3pcl_4_pcl_PointCloud_Normal;
struct __pyx_obj_3pcl_4_pcl_PointCloud_PointNormal;
struct __pyx_obj_3pcl_4_pcl_KdTree;
struct __pyx_obj_3pcl_4_pcl_RangeImages;
struct __pyx_obj_3pcl_4_pcl_SampleConsensusModel;
struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelPlane;
struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelSphere;
struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelCylinder;
struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelLine;
struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelRegistration;
struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelStick;
struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringCustom;
struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom;
struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringGenericField;
struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringHSVField;
struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringRandom;
struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringRGBField;
struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandlerCustom;
struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandleringSurfaceNormal;
struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandleringXYZ;
struct __pyx_obj_3pcl_17pcl_visualization_CloudViewing;
struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering;
struct __pyx_obj_3pcl_17pcl_visualization_PCLHistogramViewing;

/* "eigen.pxd":96
 * # VectorXf
 * 
 * ctypedef aligned_allocator[cpp.PointXYZ] aligned_allocator_t             # <<<<<<<<<<<<<<
 * ctypedef aligned_allocator[cpp.PointXYZI] aligned_allocator_PointXYZI_t
 * ctypedef aligned_allocator[cpp.PointXYZRGB] aligned_allocator_PointXYZRGB_t
 */
typedef Eigen::aligned_allocator<struct pcl::PointXYZ>  __pyx_t_3pcl_5eigen_aligned_allocator_t;

/* "eigen.pxd":97
 * 
 * ctypedef aligned_allocator[cpp.PointXYZ] aligned_allocator_t
 * ctypedef aligned_allocator[cpp.PointXYZI] aligned_allocator_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef aligned_allocator[cpp.PointXYZRGB] aligned_allocator_PointXYZRGB_t
 * ctypedef aligned_allocator[cpp.PointXYZRGBA] aligned_allocator_PointXYZRGBA_t
 */
typedef Eigen::aligned_allocator<struct pcl::PointXYZI>  __pyx_t_3pcl_5eigen_aligned_allocator_PointXYZI_t;

/* "eigen.pxd":98
 * ctypedef aligned_allocator[cpp.PointXYZ] aligned_allocator_t
 * ctypedef aligned_allocator[cpp.PointXYZI] aligned_allocator_PointXYZI_t
 * ctypedef aligned_allocator[cpp.PointXYZRGB] aligned_allocator_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef aligned_allocator[cpp.PointXYZRGBA] aligned_allocator_PointXYZRGBA_t
 * ctypedef vector2[cpp.PointXYZ, aligned_allocator_t] AlignedPointTVector_t
 */
typedef Eigen::aligned_allocator<struct pcl::PointXYZRGB>  __pyx_t_3pcl_5eigen_aligned_allocator_PointXYZRGB_t;

/* "eigen.pxd":99
 * ctypedef aligned_allocator[cpp.PointXYZI] aligned_allocator_PointXYZI_t
 * ctypedef aligned_allocator[cpp.PointXYZRGB] aligned_allocator_PointXYZRGB_t
 * ctypedef aligned_allocator[cpp.PointXYZRGBA] aligned_allocator_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef vector2[cpp.PointXYZ, aligned_allocator_t] AlignedPointTVector_t
 * ctypedef vector2[cpp.PointXYZI, aligned_allocator_PointXYZI_t] AlignedPointTVector_PointXYZI_t
 */
typedef Eigen::aligned_allocator<struct pcl::PointXYZRGBA>  __pyx_t_3pcl_5eigen_aligned_allocator_PointXYZRGBA_t;

/* "eigen.pxd":100
 * ctypedef aligned_allocator[cpp.PointXYZRGB] aligned_allocator_PointXYZRGB_t
 * ctypedef aligned_allocator[cpp.PointXYZRGBA] aligned_allocator_PointXYZRGBA_t
 * ctypedef vector2[cpp.PointXYZ, aligned_allocator_t] AlignedPointTVector_t             # <<<<<<<<<<<<<<
 * ctypedef vector2[cpp.PointXYZI, aligned_allocator_PointXYZI_t] AlignedPointTVector_PointXYZI_t
 * ctypedef vector2[cpp.PointXYZRGB, aligned_allocator_PointXYZRGB_t] AlignedPointTVector_PointXYZRGB_t
 */
typedef std::vector<struct pcl::PointXYZ,__pyx_t_3pcl_5eigen_aligned_allocator_t>  __pyx_t_3pcl_5eigen_AlignedPointTVector_t;

/* "eigen.pxd":101
 * ctypedef aligned_allocator[cpp.PointXYZRGBA] aligned_allocator_PointXYZRGBA_t
 * ctypedef vector2[cpp.PointXYZ, aligned_allocator_t] AlignedPointTVector_t
 * ctypedef vector2[cpp.PointXYZI, aligned_allocator_PointXYZI_t] AlignedPointTVector_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef vector2[cpp.PointXYZRGB, aligned_allocator_PointXYZRGB_t] AlignedPointTVector_PointXYZRGB_t
 * ctypedef vector2[cpp.PointXYZRGBA, aligned_allocator_PointXYZRGBA_t] AlignedPointTVector_PointXYZRGBA_t
 */
typedef std::vector<struct pcl::PointXYZI,__pyx_t_3pcl_5eigen_aligned_allocator_PointXYZI_t>  __pyx_t_3pcl_5eigen_AlignedPointTVector_PointXYZI_t;

/* "eigen.pxd":102
 * ctypedef vector2[cpp.PointXYZ, aligned_allocator_t] AlignedPointTVector_t
 * ctypedef vector2[cpp.PointXYZI, aligned_allocator_PointXYZI_t] AlignedPointTVector_PointXYZI_t
 * ctypedef vector2[cpp.PointXYZRGB, aligned_allocator_PointXYZRGB_t] AlignedPointTVector_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef vector2[cpp.PointXYZRGBA, aligned_allocator_PointXYZRGBA_t] AlignedPointTVector_PointXYZRGBA_t
 * 
 */
typedef std::vector<struct pcl::PointXYZRGB,__pyx_t_3pcl_5eigen_aligned_allocator_PointXYZRGB_t>  __pyx_t_3pcl_5eigen_AlignedPointTVector_PointXYZRGB_t;

/* "eigen.pxd":103
 * ctypedef vector2[cpp.PointXYZI, aligned_allocator_PointXYZI_t] AlignedPointTVector_PointXYZI_t
 * ctypedef vector2[cpp.PointXYZRGB, aligned_allocator_PointXYZRGB_t] AlignedPointTVector_PointXYZRGB_t
 * ctypedef vector2[cpp.PointXYZRGBA, aligned_allocator_PointXYZRGBA_t] AlignedPointTVector_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * 
 * # Eigen2Support?
 */
typedef std::vector<struct pcl::PointXYZRGBA,__pyx_t_3pcl_5eigen_aligned_allocator_PointXYZRGBA_t>  __pyx_t_3pcl_5eigen_AlignedPointTVector_PointXYZRGBA_t;

/* "pcl_defs.pxd":463
 *         vector[float] values
 * 
 * ctypedef ModelCoefficients ModelCoefficients_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[ModelCoefficients] ModelCoefficientsPtr_t
 * 
 */
typedef struct pcl::ModelCoefficients __pyx_t_3pcl_8pcl_defs_ModelCoefficients_t;

/* "pcl_defs.pxd":464
 * 
 * ctypedef ModelCoefficients ModelCoefficients_t
 * ctypedef shared_ptr[ModelCoefficients] ModelCoefficientsPtr_t             # <<<<<<<<<<<<<<
 * 
 * ###
 */
typedef boost::shared_ptr<struct pcl::ModelCoefficients>  __pyx_t_3pcl_8pcl_defs_ModelCoefficientsPtr_t;

/* "pcl_defs.pxd":480
 *         vector[int] indices
 * 
 * ctypedef PointIndices PointIndices_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointIndices] PointIndicesPtr_t
 * ###
 */
typedef pcl::PointIndices __pyx_t_3pcl_8pcl_defs_PointIndices_t;

/* "pcl_defs.pxd":481
 * 
 * ctypedef PointIndices PointIndices_t
 * ctypedef shared_ptr[PointIndices] PointIndicesPtr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::PointIndices>  __pyx_t_3pcl_8pcl_defs_PointIndicesPtr_t;

/* "pcl_defs.pxd":484
 * ###
 * 
 * ctypedef PointCloud[PointXYZ] PointCloud_t             # <<<<<<<<<<<<<<
 * ctypedef PointCloud[PointXYZI] PointCloud_PointXYZI_t
 * ctypedef PointCloud[PointXYZRGB] PointCloud_PointXYZRGB_t
 */
typedef pcl::PointCloud<struct pcl::PointXYZ>  __pyx_t_3pcl_8pcl_defs_PointCloud_t;

/* "pcl_defs.pxd":485
 * 
 * ctypedef PointCloud[PointXYZ] PointCloud_t
 * ctypedef PointCloud[PointXYZI] PointCloud_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef PointCloud[PointXYZRGB] PointCloud_PointXYZRGB_t
 * ctypedef PointCloud[PointXYZRGBA] PointCloud_PointXYZRGBA_t
 */
typedef pcl::PointCloud<struct pcl::PointXYZI>  __pyx_t_3pcl_8pcl_defs_PointCloud_PointXYZI_t;

/* "pcl_defs.pxd":486
 * ctypedef PointCloud[PointXYZ] PointCloud_t
 * ctypedef PointCloud[PointXYZI] PointCloud_PointXYZI_t
 * ctypedef PointCloud[PointXYZRGB] PointCloud_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef PointCloud[PointXYZRGBA] PointCloud_PointXYZRGBA_t
 * ctypedef PointCloud[VFHSignature308] PointCloud_VFHSignature308_t
 */
typedef pcl::PointCloud<struct pcl::PointXYZRGB>  __pyx_t_3pcl_8pcl_defs_PointCloud_PointXYZRGB_t;

/* "pcl_defs.pxd":487
 * ctypedef PointCloud[PointXYZI] PointCloud_PointXYZI_t
 * ctypedef PointCloud[PointXYZRGB] PointCloud_PointXYZRGB_t
 * ctypedef PointCloud[PointXYZRGBA] PointCloud_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef PointCloud[VFHSignature308] PointCloud_VFHSignature308_t
 * ctypedef PointCloud[PointWithViewpoint] PointCloud_PointWithViewpoint_t
 */
typedef pcl::PointCloud<struct pcl::PointXYZRGBA>  __pyx_t_3pcl_8pcl_defs_PointCloud_PointXYZRGBA_t;

/* "pcl_defs.pxd":488
 * ctypedef PointCloud[PointXYZRGB] PointCloud_PointXYZRGB_t
 * ctypedef PointCloud[PointXYZRGBA] PointCloud_PointXYZRGBA_t
 * ctypedef PointCloud[VFHSignature308] PointCloud_VFHSignature308_t             # <<<<<<<<<<<<<<
 * ctypedef PointCloud[PointWithViewpoint] PointCloud_PointWithViewpoint_t
 * 
 */
typedef pcl::PointCloud<struct pcl::VFHSignature308>  __pyx_t_3pcl_8pcl_defs_PointCloud_VFHSignature308_t;

/* "pcl_defs.pxd":489
 * ctypedef PointCloud[PointXYZRGBA] PointCloud_PointXYZRGBA_t
 * ctypedef PointCloud[VFHSignature308] PointCloud_VFHSignature308_t
 * ctypedef PointCloud[PointWithViewpoint] PointCloud_PointWithViewpoint_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef shared_ptr[PointCloud[PointXYZ]] PointCloudPtr_t
 */
typedef pcl::PointCloud<struct pcl::PointWithViewpoint>  __pyx_t_3pcl_8pcl_defs_PointCloud_PointWithViewpoint_t;

/* "pcl_defs.pxd":491
 * ctypedef PointCloud[PointWithViewpoint] PointCloud_PointWithViewpoint_t
 * 
 * ctypedef shared_ptr[PointCloud[PointXYZ]] PointCloudPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloud[PointXYZI]] PointCloud_PointXYZI_Ptr_t
 * ctypedef shared_ptr[PointCloud[PointXYZRGB]] PointCloud_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::PointCloud<struct pcl::PointXYZ> >  __pyx_t_3pcl_8pcl_defs_PointCloudPtr_t;

/* "pcl_defs.pxd":492
 * 
 * ctypedef shared_ptr[PointCloud[PointXYZ]] PointCloudPtr_t
 * ctypedef shared_ptr[PointCloud[PointXYZI]] PointCloud_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloud[PointXYZRGB]] PointCloud_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[PointCloud[PointXYZRGBA]] PointCloud_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::PointCloud<struct pcl::PointXYZI> >  __pyx_t_3pcl_8pcl_defs_PointCloud_PointXYZI_Ptr_t;

/* "pcl_defs.pxd":493
 * ctypedef shared_ptr[PointCloud[PointXYZ]] PointCloudPtr_t
 * ctypedef shared_ptr[PointCloud[PointXYZI]] PointCloud_PointXYZI_Ptr_t
 * ctypedef shared_ptr[PointCloud[PointXYZRGB]] PointCloud_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloud[PointXYZRGBA]] PointCloud_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[PointCloud[VFHSignature308]] PointCloud_VFHSignature308_Ptr_t
 */
typedef boost::shared_ptr<pcl::PointCloud<struct pcl::PointXYZRGB> >  __pyx_t_3pcl_8pcl_defs_PointCloud_PointXYZRGB_Ptr_t;

/* "pcl_defs.pxd":494
 * ctypedef shared_ptr[PointCloud[PointXYZI]] PointCloud_PointXYZI_Ptr_t
 * ctypedef shared_ptr[PointCloud[PointXYZRGB]] PointCloud_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[PointCloud[PointXYZRGBA]] PointCloud_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloud[VFHSignature308]] PointCloud_VFHSignature308_Ptr_t
 * ctypedef shared_ptr[PointCloud[PointWithViewpoint]] PointCloud_PointWithViewpoint_Ptr_t
 */
typedef boost::shared_ptr<pcl::PointCloud<struct pcl::PointXYZRGBA> >  __pyx_t_3pcl_8pcl_defs_PointCloud_PointXYZRGBA_Ptr_t;

/* "pcl_defs.pxd":495
 * ctypedef shared_ptr[PointCloud[PointXYZRGB]] PointCloud_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[PointCloud[PointXYZRGBA]] PointCloud_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[PointCloud[VFHSignature308]] PointCloud_VFHSignature308_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloud[PointWithViewpoint]] PointCloud_PointWithViewpoint_Ptr_t
 * 
 */
typedef boost::shared_ptr<pcl::PointCloud<struct pcl::VFHSignature308> >  __pyx_t_3pcl_8pcl_defs_PointCloud_VFHSignature308_Ptr_t;

/* "pcl_defs.pxd":496
 * ctypedef shared_ptr[PointCloud[PointXYZRGBA]] PointCloud_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[PointCloud[VFHSignature308]] PointCloud_VFHSignature308_Ptr_t
 * ctypedef shared_ptr[PointCloud[PointWithViewpoint]] PointCloud_PointWithViewpoint_Ptr_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef PointCloud[Normal] PointCloud_Normal_t
 */
typedef boost::shared_ptr<pcl::PointCloud<struct pcl::PointWithViewpoint> >  __pyx_t_3pcl_8pcl_defs_PointCloud_PointWithViewpoint_Ptr_t;

/* "pcl_defs.pxd":498
 * ctypedef shared_ptr[PointCloud[PointWithViewpoint]] PointCloud_PointWithViewpoint_Ptr_t
 * 
 * ctypedef PointCloud[Normal] PointCloud_Normal_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloud[Normal]] PointCloud_Normal_Ptr_t
 * 
 */
typedef pcl::PointCloud<struct pcl::Normal>  __pyx_t_3pcl_8pcl_defs_PointCloud_Normal_t;

/* "pcl_defs.pxd":499
 * 
 * ctypedef PointCloud[Normal] PointCloud_Normal_t
 * ctypedef shared_ptr[PointCloud[Normal]] PointCloud_Normal_Ptr_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef PointCloud[PointNormal] PointCloud_PointNormal_t
 */
typedef boost::shared_ptr<pcl::PointCloud<struct pcl::Normal> >  __pyx_t_3pcl_8pcl_defs_PointCloud_Normal_Ptr_t;

/* "pcl_defs.pxd":501
 * ctypedef shared_ptr[PointCloud[Normal]] PointCloud_Normal_Ptr_t
 * 
 * ctypedef PointCloud[PointNormal] PointCloud_PointNormal_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloud[PointNormal]] PointCloud_PointNormal_Ptr_t
 * 
 */
typedef pcl::PointCloud<struct pcl::PointNormal>  __pyx_t_3pcl_8pcl_defs_PointCloud_PointNormal_t;

/* "pcl_defs.pxd":502
 * 
 * ctypedef PointCloud[PointNormal] PointCloud_PointNormal_t
 * ctypedef shared_ptr[PointCloud[PointNormal]] PointCloud_PointNormal_Ptr_t             # <<<<<<<<<<<<<<
 * 
 * # definitions used everywhere
 */
typedef boost::shared_ptr<pcl::PointCloud<struct pcl::PointNormal> >  __pyx_t_3pcl_8pcl_defs_PointCloud_PointNormal_Ptr_t;

/* "pcl_defs.pxd":505
 * 
 * # definitions used everywhere
 * ctypedef shared_ptr[vector[int]] IndicesPtr_t;             # <<<<<<<<<<<<<<
 * # ctypedef shared_ptr[vector[int]] IndicesConstPtr_t;
 * 
 */
typedef boost::shared_ptr<std::vector<int> >  __pyx_t_3pcl_8pcl_defs_IndicesPtr_t;

/* "pcl_defs.pxd":532
 * 
 * 
 * ctypedef PCLBase[PointXYZ] PCLBase_t             # <<<<<<<<<<<<<<
 * ctypedef PCLBase[PointXYZI] PCLBase_PointXYZI_t
 * ctypedef PCLBase[PointXYZRGB] PCLBase_PointXYZRGB_t
 */
typedef pcl::PCLBase<struct pcl::PointXYZ>  __pyx_t_3pcl_8pcl_defs_PCLBase_t;

/* "pcl_defs.pxd":533
 * 
 * ctypedef PCLBase[PointXYZ] PCLBase_t
 * ctypedef PCLBase[PointXYZI] PCLBase_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef PCLBase[PointXYZRGB] PCLBase_PointXYZRGB_t
 * ctypedef PCLBase[PointXYZRGBA] PCLBase_PointXYZRGBA_t
 */
typedef pcl::PCLBase<struct pcl::PointXYZI>  __pyx_t_3pcl_8pcl_defs_PCLBase_PointXYZI_t;

/* "pcl_defs.pxd":534
 * ctypedef PCLBase[PointXYZ] PCLBase_t
 * ctypedef PCLBase[PointXYZI] PCLBase_PointXYZI_t
 * ctypedef PCLBase[PointXYZRGB] PCLBase_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef PCLBase[PointXYZRGBA] PCLBase_PointXYZRGBA_t
 * ctypedef shared_ptr[PCLBase[PointXYZ]] PCLBasePtr_t
 */
typedef pcl::PCLBase<struct pcl::PointXYZRGB>  __pyx_t_3pcl_8pcl_defs_PCLBase_PointXYZRGB_t;

/* "pcl_defs.pxd":535
 * ctypedef PCLBase[PointXYZI] PCLBase_PointXYZI_t
 * ctypedef PCLBase[PointXYZRGB] PCLBase_PointXYZRGB_t
 * ctypedef PCLBase[PointXYZRGBA] PCLBase_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PCLBase[PointXYZ]] PCLBasePtr_t
 * ctypedef shared_ptr[PCLBase[PointXYZI]] PCLBase_PointXYZI_Ptr_t
 */
typedef pcl::PCLBase<struct pcl::PointXYZRGBA>  __pyx_t_3pcl_8pcl_defs_PCLBase_PointXYZRGBA_t;

/* "pcl_defs.pxd":536
 * ctypedef PCLBase[PointXYZRGB] PCLBase_PointXYZRGB_t
 * ctypedef PCLBase[PointXYZRGBA] PCLBase_PointXYZRGBA_t
 * ctypedef shared_ptr[PCLBase[PointXYZ]] PCLBasePtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PCLBase[PointXYZI]] PCLBase_PointXYZI_Ptr_t
 * ctypedef shared_ptr[PCLBase[PointXYZRGB]] PCLBase_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::PCLBase<struct pcl::PointXYZ> >  __pyx_t_3pcl_8pcl_defs_PCLBasePtr_t;

/* "pcl_defs.pxd":537
 * ctypedef PCLBase[PointXYZRGBA] PCLBase_PointXYZRGBA_t
 * ctypedef shared_ptr[PCLBase[PointXYZ]] PCLBasePtr_t
 * ctypedef shared_ptr[PCLBase[PointXYZI]] PCLBase_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PCLBase[PointXYZRGB]] PCLBase_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[PCLBase[PointXYZRGBA]] PCLBase_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::PCLBase<struct pcl::PointXYZI> >  __pyx_t_3pcl_8pcl_defs_PCLBase_PointXYZI_Ptr_t;

/* "pcl_defs.pxd":538
 * ctypedef shared_ptr[PCLBase[PointXYZ]] PCLBasePtr_t
 * ctypedef shared_ptr[PCLBase[PointXYZI]] PCLBase_PointXYZI_Ptr_t
 * ctypedef shared_ptr[PCLBase[PointXYZRGB]] PCLBase_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PCLBase[PointXYZRGBA]] PCLBase_PointXYZRGBA_Ptr_t
 * ###
 */
typedef boost::shared_ptr<pcl::PCLBase<struct pcl::PointXYZRGB> >  __pyx_t_3pcl_8pcl_defs_PCLBase_PointXYZRGB_Ptr_t;

/* "pcl_defs.pxd":539
 * ctypedef shared_ptr[PCLBase[PointXYZI]] PCLBase_PointXYZI_Ptr_t
 * ctypedef shared_ptr[PCLBase[PointXYZRGB]] PCLBase_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[PCLBase[PointXYZRGBA]] PCLBase_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::PCLBase<struct pcl::PointXYZRGBA> >  __pyx_t_3pcl_8pcl_defs_PCLBase_PointXYZRGBA_Ptr_t;

/* "pcl_defs.pxd":603
 * 
 * # ctypedef Vertices Vertices_t
 * ctypedef shared_ptr[Vertices] VerticesPtr_t             # <<<<<<<<<<<<<<
 * # ctypedef shared_ptr[Vertices const] VerticesConstPtr
 * # inline std::ostream& operator<<(std::ostream& s, const  ::pcl::Vertices & v)
 */
typedef boost::shared_ptr<pcl::Vertices>  __pyx_t_3pcl_8pcl_defs_VerticesPtr_t;

/* "pcl_range_image.pxd":821
 * 
 * 
 * ctypedef RangeImage RangeImage_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[RangeImage] RangeImagePtr_t
 * ctypedef shared_ptr[const RangeImage] RangeImageConstPtr_t
 */
typedef pcl::RangeImage __pyx_t_3pcl_15pcl_range_image_RangeImage_t;

/* "pcl_range_image.pxd":822
 * 
 * ctypedef RangeImage RangeImage_t
 * ctypedef shared_ptr[RangeImage] RangeImagePtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const RangeImage] RangeImageConstPtr_t
 * ###
 */
typedef boost::shared_ptr<pcl::RangeImage>  __pyx_t_3pcl_15pcl_range_image_RangeImagePtr_t;

/* "pcl_range_image.pxd":823
 * ctypedef RangeImage RangeImage_t
 * ctypedef shared_ptr[RangeImage] RangeImagePtr_t
 * ctypedef shared_ptr[const RangeImage] RangeImageConstPtr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::RangeImage const >  __pyx_t_3pcl_15pcl_range_image_RangeImageConstPtr_t;

/* "pcl_range_image.pxd":964
 * 
 * 
 * ctypedef RangeImagePlanar RangeImagePlanar_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[RangeImagePlanar] RangeImagePlanarPtr_t
 * ctypedef shared_ptr[const RangeImagePlanar] RangeImagePlanarConstPtr_t
 */
typedef pcl::RangeImagePlanar __pyx_t_3pcl_15pcl_range_image_RangeImagePlanar_t;

/* "pcl_range_image.pxd":965
 * 
 * ctypedef RangeImagePlanar RangeImagePlanar_t
 * ctypedef shared_ptr[RangeImagePlanar] RangeImagePlanarPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const RangeImagePlanar] RangeImagePlanarConstPtr_t
 * ###
 */
typedef boost::shared_ptr<pcl::RangeImagePlanar>  __pyx_t_3pcl_15pcl_range_image_RangeImagePlanarPtr_t;

/* "pcl_range_image.pxd":966
 * ctypedef RangeImagePlanar RangeImagePlanar_t
 * ctypedef shared_ptr[RangeImagePlanar] RangeImagePlanarPtr_t
 * ctypedef shared_ptr[const RangeImagePlanar] RangeImagePlanarConstPtr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::RangeImagePlanar const >  __pyx_t_3pcl_15pcl_range_image_RangeImagePlanarConstPtr_t;

/* "pcl_visualization_defs.pxd":132
 * 
 * 
 * ctypedef PointCloudColorHandlerCustom[cpp.PointXYZ] PointCloudColorHandlerCustom_t             # <<<<<<<<<<<<<<
 * ctypedef PointCloudColorHandlerCustom[cpp.PointXYZI] PointCloudColorHandlerCustom_PointXYZI_t
 * ctypedef PointCloudColorHandlerCustom[cpp.PointXYZRGB] PointCloudColorHandlerCustom_PointXYZRGB_t
 */
typedef pcl::visualization::PointCloudColorHandlerCustom<struct pcl::PointXYZ>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerCustom_t;

/* "pcl_visualization_defs.pxd":133
 * 
 * ctypedef PointCloudColorHandlerCustom[cpp.PointXYZ] PointCloudColorHandlerCustom_t
 * ctypedef PointCloudColorHandlerCustom[cpp.PointXYZI] PointCloudColorHandlerCustom_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef PointCloudColorHandlerCustom[cpp.PointXYZRGB] PointCloudColorHandlerCustom_PointXYZRGB_t
 * ctypedef PointCloudColorHandlerCustom[cpp.PointXYZRGBA] PointCloudColorHandlerCustom_PointXYZRGBA_t
 */
typedef pcl::visualization::PointCloudColorHandlerCustom<struct pcl::PointXYZI>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerCustom_PointXYZI_t;

/* "pcl_visualization_defs.pxd":134
 * ctypedef PointCloudColorHandlerCustom[cpp.PointXYZ] PointCloudColorHandlerCustom_t
 * ctypedef PointCloudColorHandlerCustom[cpp.PointXYZI] PointCloudColorHandlerCustom_PointXYZI_t
 * ctypedef PointCloudColorHandlerCustom[cpp.PointXYZRGB] PointCloudColorHandlerCustom_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef PointCloudColorHandlerCustom[cpp.PointXYZRGBA] PointCloudColorHandlerCustom_PointXYZRGBA_t
 * ctypedef shared_ptr[PointCloudColorHandlerCustom[cpp.PointXYZ]] PointCloudColorHandlerCustom_Ptr_t
 */
typedef pcl::visualization::PointCloudColorHandlerCustom<struct pcl::PointXYZRGB>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerCustom_PointXYZRGB_t;

/* "pcl_visualization_defs.pxd":135
 * ctypedef PointCloudColorHandlerCustom[cpp.PointXYZI] PointCloudColorHandlerCustom_PointXYZI_t
 * ctypedef PointCloudColorHandlerCustom[cpp.PointXYZRGB] PointCloudColorHandlerCustom_PointXYZRGB_t
 * ctypedef PointCloudColorHandlerCustom[cpp.PointXYZRGBA] PointCloudColorHandlerCustom_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudColorHandlerCustom[cpp.PointXYZ]] PointCloudColorHandlerCustom_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerCustom[cpp.PointXYZI]] PointCloudColorHandlerCustom_PointXYZI_Ptr_t
 */
typedef pcl::visualization::PointCloudColorHandlerCustom<struct pcl::PointXYZRGBA>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerCustom_PointXYZRGBA_t;

/* "pcl_visualization_defs.pxd":136
 * ctypedef PointCloudColorHandlerCustom[cpp.PointXYZRGB] PointCloudColorHandlerCustom_PointXYZRGB_t
 * ctypedef PointCloudColorHandlerCustom[cpp.PointXYZRGBA] PointCloudColorHandlerCustom_PointXYZRGBA_t
 * ctypedef shared_ptr[PointCloudColorHandlerCustom[cpp.PointXYZ]] PointCloudColorHandlerCustom_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudColorHandlerCustom[cpp.PointXYZI]] PointCloudColorHandlerCustom_PointXYZI_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerCustom[cpp.PointXYZRGB]] PointCloudColorHandlerCustom_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudColorHandlerCustom<struct pcl::PointXYZ> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerCustom_Ptr_t;

/* "pcl_visualization_defs.pxd":137
 * ctypedef PointCloudColorHandlerCustom[cpp.PointXYZRGBA] PointCloudColorHandlerCustom_PointXYZRGBA_t
 * ctypedef shared_ptr[PointCloudColorHandlerCustom[cpp.PointXYZ]] PointCloudColorHandlerCustom_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerCustom[cpp.PointXYZI]] PointCloudColorHandlerCustom_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudColorHandlerCustom[cpp.PointXYZRGB]] PointCloudColorHandlerCustom_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerCustom[cpp.PointXYZRGBA]] PointCloudColorHandlerCustom_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudColorHandlerCustom<struct pcl::PointXYZI> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerCustom_PointXYZI_Ptr_t;

/* "pcl_visualization_defs.pxd":138
 * ctypedef shared_ptr[PointCloudColorHandlerCustom[cpp.PointXYZ]] PointCloudColorHandlerCustom_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerCustom[cpp.PointXYZI]] PointCloudColorHandlerCustom_PointXYZI_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerCustom[cpp.PointXYZRGB]] PointCloudColorHandlerCustom_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudColorHandlerCustom[cpp.PointXYZRGBA]] PointCloudColorHandlerCustom_PointXYZRGBA_Ptr_t
 * ctypedef PointCloudColorHandlerCustom[cpp.PointWithRange] PointCloudColorHandlerCustom_PointWithRange_t
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudColorHandlerCustom<struct pcl::PointXYZRGB> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerCustom_PointXYZRGB_Ptr_t;

/* "pcl_visualization_defs.pxd":139
 * ctypedef shared_ptr[PointCloudColorHandlerCustom[cpp.PointXYZI]] PointCloudColorHandlerCustom_PointXYZI_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerCustom[cpp.PointXYZRGB]] PointCloudColorHandlerCustom_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerCustom[cpp.PointXYZRGBA]] PointCloudColorHandlerCustom_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef PointCloudColorHandlerCustom[cpp.PointWithRange] PointCloudColorHandlerCustom_PointWithRange_t
 * ctypedef shared_ptr[PointCloudColorHandlerCustom[cpp.PointWithRange]] PointCloudColorHandlerCustom_PointWithRange_Ptr_t
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudColorHandlerCustom<struct pcl::PointXYZRGBA> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerCustom_PointXYZRGBA_Ptr_t;

/* "pcl_visualization_defs.pxd":140
 * ctypedef shared_ptr[PointCloudColorHandlerCustom[cpp.PointXYZRGB]] PointCloudColorHandlerCustom_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerCustom[cpp.PointXYZRGBA]] PointCloudColorHandlerCustom_PointXYZRGBA_Ptr_t
 * ctypedef PointCloudColorHandlerCustom[cpp.PointWithRange] PointCloudColorHandlerCustom_PointWithRange_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudColorHandlerCustom[cpp.PointWithRange]] PointCloudColorHandlerCustom_PointWithRange_Ptr_t
 * ###
 */
typedef pcl::visualization::PointCloudColorHandlerCustom<struct pcl::PointWithRange>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerCustom_PointWithRange_t;

/* "pcl_visualization_defs.pxd":141
 * ctypedef shared_ptr[PointCloudColorHandlerCustom[cpp.PointXYZRGBA]] PointCloudColorHandlerCustom_PointXYZRGBA_Ptr_t
 * ctypedef PointCloudColorHandlerCustom[cpp.PointWithRange] PointCloudColorHandlerCustom_PointWithRange_t
 * ctypedef shared_ptr[PointCloudColorHandlerCustom[cpp.PointWithRange]] PointCloudColorHandlerCustom_PointWithRange_Ptr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudColorHandlerCustom<struct pcl::PointWithRange> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerCustom_PointWithRange_Ptr_t;

/* "pcl_visualization_defs.pxd":174
 * 
 * 
 * ctypedef PointCloudGeometryHandlerXYZ[cpp.PointXYZ] PointCloudGeometryHandlerXYZ_t             # <<<<<<<<<<<<<<
 * ctypedef PointCloudGeometryHandlerXYZ[cpp.PointXYZI] PointCloudGeometryHandlerXYZ_PointXYZI_t
 * ctypedef PointCloudGeometryHandlerXYZ[cpp.PointXYZRGB] PointCloudGeometryHandlerXYZ_PointXYZRGB_t
 */
typedef pcl::visualization::PointCloudGeometryHandlerXYZ<struct pcl::PointXYZ>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudGeometryHandlerXYZ_t;

/* "pcl_visualization_defs.pxd":175
 * 
 * ctypedef PointCloudGeometryHandlerXYZ[cpp.PointXYZ] PointCloudGeometryHandlerXYZ_t
 * ctypedef PointCloudGeometryHandlerXYZ[cpp.PointXYZI] PointCloudGeometryHandlerXYZ_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef PointCloudGeometryHandlerXYZ[cpp.PointXYZRGB] PointCloudGeometryHandlerXYZ_PointXYZRGB_t
 * ctypedef PointCloudGeometryHandlerXYZ[cpp.PointXYZRGBA] PointCloudGeometryHandlerXYZ_PointXYZRGBA_t
 */
typedef pcl::visualization::PointCloudGeometryHandlerXYZ<struct pcl::PointXYZI>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudGeometryHandlerXYZ_PointXYZI_t;

/* "pcl_visualization_defs.pxd":176
 * ctypedef PointCloudGeometryHandlerXYZ[cpp.PointXYZ] PointCloudGeometryHandlerXYZ_t
 * ctypedef PointCloudGeometryHandlerXYZ[cpp.PointXYZI] PointCloudGeometryHandlerXYZ_PointXYZI_t
 * ctypedef PointCloudGeometryHandlerXYZ[cpp.PointXYZRGB] PointCloudGeometryHandlerXYZ_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef PointCloudGeometryHandlerXYZ[cpp.PointXYZRGBA] PointCloudGeometryHandlerXYZ_PointXYZRGBA_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerXYZ[cpp.PointXYZ]] PointCloudGeometryHandlerXYZ_Ptr_t
 */
typedef pcl::visualization::PointCloudGeometryHandlerXYZ<struct pcl::PointXYZRGB>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudGeometryHandlerXYZ_PointXYZRGB_t;

/* "pcl_visualization_defs.pxd":177
 * ctypedef PointCloudGeometryHandlerXYZ[cpp.PointXYZI] PointCloudGeometryHandlerXYZ_PointXYZI_t
 * ctypedef PointCloudGeometryHandlerXYZ[cpp.PointXYZRGB] PointCloudGeometryHandlerXYZ_PointXYZRGB_t
 * ctypedef PointCloudGeometryHandlerXYZ[cpp.PointXYZRGBA] PointCloudGeometryHandlerXYZ_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudGeometryHandlerXYZ[cpp.PointXYZ]] PointCloudGeometryHandlerXYZ_Ptr_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerXYZ[cpp.PointXYZI]] PointCloudGeometryHandlerXYZ_PointXYZI_Ptr_t
 */
typedef pcl::visualization::PointCloudGeometryHandlerXYZ<struct pcl::PointXYZRGBA>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudGeometryHandlerXYZ_PointXYZRGBA_t;

/* "pcl_visualization_defs.pxd":178
 * ctypedef PointCloudGeometryHandlerXYZ[cpp.PointXYZRGB] PointCloudGeometryHandlerXYZ_PointXYZRGB_t
 * ctypedef PointCloudGeometryHandlerXYZ[cpp.PointXYZRGBA] PointCloudGeometryHandlerXYZ_PointXYZRGBA_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerXYZ[cpp.PointXYZ]] PointCloudGeometryHandlerXYZ_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudGeometryHandlerXYZ[cpp.PointXYZI]] PointCloudGeometryHandlerXYZ_PointXYZI_Ptr_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerXYZ[cpp.PointXYZRGB]] PointCloudGeometryHandlerXYZ_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudGeometryHandlerXYZ<struct pcl::PointXYZ> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudGeometryHandlerXYZ_Ptr_t;

/* "pcl_visualization_defs.pxd":179
 * ctypedef PointCloudGeometryHandlerXYZ[cpp.PointXYZRGBA] PointCloudGeometryHandlerXYZ_PointXYZRGBA_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerXYZ[cpp.PointXYZ]] PointCloudGeometryHandlerXYZ_Ptr_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerXYZ[cpp.PointXYZI]] PointCloudGeometryHandlerXYZ_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudGeometryHandlerXYZ[cpp.PointXYZRGB]] PointCloudGeometryHandlerXYZ_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerXYZ[cpp.PointXYZRGBA]] PointCloudGeometryHandlerXYZ_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudGeometryHandlerXYZ<struct pcl::PointXYZI> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudGeometryHandlerXYZ_PointXYZI_Ptr_t;

/* "pcl_visualization_defs.pxd":180
 * ctypedef shared_ptr[PointCloudGeometryHandlerXYZ[cpp.PointXYZ]] PointCloudGeometryHandlerXYZ_Ptr_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerXYZ[cpp.PointXYZI]] PointCloudGeometryHandlerXYZ_PointXYZI_Ptr_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerXYZ[cpp.PointXYZRGB]] PointCloudGeometryHandlerXYZ_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudGeometryHandlerXYZ[cpp.PointXYZRGBA]] PointCloudGeometryHandlerXYZ_PointXYZRGBA_Ptr_t
 * ###
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudGeometryHandlerXYZ<struct pcl::PointXYZRGB> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudGeometryHandlerXYZ_PointXYZRGB_Ptr_t;

/* "pcl_visualization_defs.pxd":181
 * ctypedef shared_ptr[PointCloudGeometryHandlerXYZ[cpp.PointXYZI]] PointCloudGeometryHandlerXYZ_PointXYZI_Ptr_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerXYZ[cpp.PointXYZRGB]] PointCloudGeometryHandlerXYZ_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerXYZ[cpp.PointXYZRGBA]] PointCloudGeometryHandlerXYZ_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudGeometryHandlerXYZ<struct pcl::PointXYZRGBA> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudGeometryHandlerXYZ_PointXYZRGBA_Ptr_t;

/* "pcl_visualization_defs.pxd":211
 * 
 * 
 * ctypedef PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZ] PointCloudGeometryHandlerSurfaceNormal_t             # <<<<<<<<<<<<<<
 * ctypedef PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZI] PointCloudGeometryHandlerSurfaceNormal_PointXYZI_t
 * ctypedef PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZRGB] PointCloudGeometryHandlerSurfaceNormal_PointXYZRGB_t
 */
typedef pcl::visualization::PointCloudGeometryHandlerSurfaceNormal<struct pcl::PointXYZ>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudGeometryHandlerSurfaceNormal_t;

/* "pcl_visualization_defs.pxd":212
 * 
 * ctypedef PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZ] PointCloudGeometryHandlerSurfaceNormal_t
 * ctypedef PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZI] PointCloudGeometryHandlerSurfaceNormal_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZRGB] PointCloudGeometryHandlerSurfaceNormal_PointXYZRGB_t
 * ctypedef PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZRGBA] PointCloudGeometryHandlerSurfaceNormal_PointXYZRGBA_t
 */
typedef pcl::visualization::PointCloudGeometryHandlerSurfaceNormal<struct pcl::PointXYZI>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudGeometryHandlerSurfaceNormal_PointXYZI_t;

/* "pcl_visualization_defs.pxd":213
 * ctypedef PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZ] PointCloudGeometryHandlerSurfaceNormal_t
 * ctypedef PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZI] PointCloudGeometryHandlerSurfaceNormal_PointXYZI_t
 * ctypedef PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZRGB] PointCloudGeometryHandlerSurfaceNormal_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZRGBA] PointCloudGeometryHandlerSurfaceNormal_PointXYZRGBA_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZ]] PointCloudGeometryHandlerSurfaceNormal_Ptr_t
 */
typedef pcl::visualization::PointCloudGeometryHandlerSurfaceNormal<struct pcl::PointXYZRGB>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudGeometryHandlerSurfaceNormal_PointXYZRGB_t;

/* "pcl_visualization_defs.pxd":214
 * ctypedef PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZI] PointCloudGeometryHandlerSurfaceNormal_PointXYZI_t
 * ctypedef PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZRGB] PointCloudGeometryHandlerSurfaceNormal_PointXYZRGB_t
 * ctypedef PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZRGBA] PointCloudGeometryHandlerSurfaceNormal_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZ]] PointCloudGeometryHandlerSurfaceNormal_Ptr_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZI]] PointCloudGeometryHandlerSurfaceNormal_PointXYZI_Ptr_t
 */
typedef pcl::visualization::PointCloudGeometryHandlerSurfaceNormal<struct pcl::PointXYZRGBA>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudGeometryHandlerSurfaceNormal_PointXYZRGBA_t;

/* "pcl_visualization_defs.pxd":215
 * ctypedef PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZRGB] PointCloudGeometryHandlerSurfaceNormal_PointXYZRGB_t
 * ctypedef PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZRGBA] PointCloudGeometryHandlerSurfaceNormal_PointXYZRGBA_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZ]] PointCloudGeometryHandlerSurfaceNormal_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZI]] PointCloudGeometryHandlerSurfaceNormal_PointXYZI_Ptr_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZRGB]] PointCloudGeometryHandlerSurfaceNormal_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudGeometryHandlerSurfaceNormal<struct pcl::PointXYZ> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudGeometryHandlerSurfaceNormal_Ptr_t;

/* "pcl_visualization_defs.pxd":216
 * ctypedef PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZRGBA] PointCloudGeometryHandlerSurfaceNormal_PointXYZRGBA_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZ]] PointCloudGeometryHandlerSurfaceNormal_Ptr_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZI]] PointCloudGeometryHandlerSurfaceNormal_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZRGB]] PointCloudGeometryHandlerSurfaceNormal_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZRGBA]] PointCloudGeometryHandlerSurfaceNormal_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudGeometryHandlerSurfaceNormal<struct pcl::PointXYZI> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudGeometryHandlerSurfaceNormal_PointXYZI_Ptr_t;

/* "pcl_visualization_defs.pxd":217
 * ctypedef shared_ptr[PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZ]] PointCloudGeometryHandlerSurfaceNormal_Ptr_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZI]] PointCloudGeometryHandlerSurfaceNormal_PointXYZI_Ptr_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZRGB]] PointCloudGeometryHandlerSurfaceNormal_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZRGBA]] PointCloudGeometryHandlerSurfaceNormal_PointXYZRGBA_Ptr_t
 * ###
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudGeometryHandlerSurfaceNormal<struct pcl::PointXYZRGB> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudGeometryHandlerSurfaceNormal_PointXYZRGB_Ptr_t;

/* "pcl_visualization_defs.pxd":218
 * ctypedef shared_ptr[PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZI]] PointCloudGeometryHandlerSurfaceNormal_PointXYZI_Ptr_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZRGB]] PointCloudGeometryHandlerSurfaceNormal_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerSurfaceNormal[cpp.PointXYZRGBA]] PointCloudGeometryHandlerSurfaceNormal_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudGeometryHandlerSurfaceNormal<struct pcl::PointXYZRGBA> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudGeometryHandlerSurfaceNormal_PointXYZRGBA_Ptr_t;

/* "pcl_visualization_defs.pxd":250
 * 
 * 
 * ctypedef PointCloudGeometryHandlerCustom[cpp.PointXYZ] PointCloudGeometryHandlerCustom_t             # <<<<<<<<<<<<<<
 * ctypedef PointCloudGeometryHandlerCustom[cpp.PointXYZI] PointCloudGeometryHandlerCustom_PointXYZI_t
 * ctypedef PointCloudGeometryHandlerCustom[cpp.PointXYZRGB] PointCloudGeometryHandlerCustom_PointXYZRGB_t
 */
typedef pcl::visualization::PointCloudGeometryHandlerCustom<struct pcl::PointXYZ>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudGeometryHandlerCustom_t;

/* "pcl_visualization_defs.pxd":251
 * 
 * ctypedef PointCloudGeometryHandlerCustom[cpp.PointXYZ] PointCloudGeometryHandlerCustom_t
 * ctypedef PointCloudGeometryHandlerCustom[cpp.PointXYZI] PointCloudGeometryHandlerCustom_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef PointCloudGeometryHandlerCustom[cpp.PointXYZRGB] PointCloudGeometryHandlerCustom_PointXYZRGB_t
 * ctypedef PointCloudGeometryHandlerCustom[cpp.PointXYZRGBA] PointCloudGeometryHandlerCustom_PointXYZRGBA_t
 */
typedef pcl::visualization::PointCloudGeometryHandlerCustom<struct pcl::PointXYZI>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudGeometryHandlerCustom_PointXYZI_t;

/* "pcl_visualization_defs.pxd":252
 * ctypedef PointCloudGeometryHandlerCustom[cpp.PointXYZ] PointCloudGeometryHandlerCustom_t
 * ctypedef PointCloudGeometryHandlerCustom[cpp.PointXYZI] PointCloudGeometryHandlerCustom_PointXYZI_t
 * ctypedef PointCloudGeometryHandlerCustom[cpp.PointXYZRGB] PointCloudGeometryHandlerCustom_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef PointCloudGeometryHandlerCustom[cpp.PointXYZRGBA] PointCloudGeometryHandlerCustom_PointXYZRGBA_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerCustom[cpp.PointXYZ]] PointCloudGeometryHandlerCustom_Ptr_t
 */
typedef pcl::visualization::PointCloudGeometryHandlerCustom<struct pcl::PointXYZRGB>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudGeometryHandlerCustom_PointXYZRGB_t;

/* "pcl_visualization_defs.pxd":253
 * ctypedef PointCloudGeometryHandlerCustom[cpp.PointXYZI] PointCloudGeometryHandlerCustom_PointXYZI_t
 * ctypedef PointCloudGeometryHandlerCustom[cpp.PointXYZRGB] PointCloudGeometryHandlerCustom_PointXYZRGB_t
 * ctypedef PointCloudGeometryHandlerCustom[cpp.PointXYZRGBA] PointCloudGeometryHandlerCustom_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudGeometryHandlerCustom[cpp.PointXYZ]] PointCloudGeometryHandlerCustom_Ptr_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerCustom[cpp.PointXYZI]] PointCloudGeometryHandlerCustom_PointXYZI_Ptr_t
 */
typedef pcl::visualization::PointCloudGeometryHandlerCustom<struct pcl::PointXYZRGBA>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudGeometryHandlerCustom_PointXYZRGBA_t;

/* "pcl_visualization_defs.pxd":254
 * ctypedef PointCloudGeometryHandlerCustom[cpp.PointXYZRGB] PointCloudGeometryHandlerCustom_PointXYZRGB_t
 * ctypedef PointCloudGeometryHandlerCustom[cpp.PointXYZRGBA] PointCloudGeometryHandlerCustom_PointXYZRGBA_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerCustom[cpp.PointXYZ]] PointCloudGeometryHandlerCustom_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudGeometryHandlerCustom[cpp.PointXYZI]] PointCloudGeometryHandlerCustom_PointXYZI_Ptr_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerCustom[cpp.PointXYZRGB]] PointCloudGeometryHandlerCustom_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudGeometryHandlerCustom<struct pcl::PointXYZ> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudGeometryHandlerCustom_Ptr_t;

/* "pcl_visualization_defs.pxd":255
 * ctypedef PointCloudGeometryHandlerCustom[cpp.PointXYZRGBA] PointCloudGeometryHandlerCustom_PointXYZRGBA_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerCustom[cpp.PointXYZ]] PointCloudGeometryHandlerCustom_Ptr_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerCustom[cpp.PointXYZI]] PointCloudGeometryHandlerCustom_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudGeometryHandlerCustom[cpp.PointXYZRGB]] PointCloudGeometryHandlerCustom_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerCustom[cpp.PointXYZRGBA]] PointCloudGeometryHandlerCustom_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudGeometryHandlerCustom<struct pcl::PointXYZI> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudGeometryHandlerCustom_PointXYZI_Ptr_t;

/* "pcl_visualization_defs.pxd":256
 * ctypedef shared_ptr[PointCloudGeometryHandlerCustom[cpp.PointXYZ]] PointCloudGeometryHandlerCustom_Ptr_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerCustom[cpp.PointXYZI]] PointCloudGeometryHandlerCustom_PointXYZI_Ptr_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerCustom[cpp.PointXYZRGB]] PointCloudGeometryHandlerCustom_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudGeometryHandlerCustom[cpp.PointXYZRGBA]] PointCloudGeometryHandlerCustom_PointXYZRGBA_Ptr_t
 * ###
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudGeometryHandlerCustom<struct pcl::PointXYZRGB> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudGeometryHandlerCustom_PointXYZRGB_Ptr_t;

/* "pcl_visualization_defs.pxd":257
 * ctypedef shared_ptr[PointCloudGeometryHandlerCustom[cpp.PointXYZI]] PointCloudGeometryHandlerCustom_PointXYZI_Ptr_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerCustom[cpp.PointXYZRGB]] PointCloudGeometryHandlerCustom_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[PointCloudGeometryHandlerCustom[cpp.PointXYZRGBA]] PointCloudGeometryHandlerCustom_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudGeometryHandlerCustom<struct pcl::PointXYZRGBA> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudGeometryHandlerCustom_PointXYZRGBA_Ptr_t;

/* "pcl_visualization_defs.pxd":380
 * 
 * 
 * ctypedef PointCloudColorHandlerRandom[cpp.PointXYZ] PointCloudColorHandlerRandom_t             # <<<<<<<<<<<<<<
 * ctypedef PointCloudColorHandlerRandom[cpp.PointXYZI] PointCloudColorHandlerRandom_PointXYZI_t
 * ctypedef PointCloudColorHandlerRandom[cpp.PointXYZRGB] PointCloudColorHandlerRandom_PointXYZRGB_t
 */
typedef pcl::visualization::PointCloudColorHandlerRandom<struct pcl::PointXYZ>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerRandom_t;

/* "pcl_visualization_defs.pxd":381
 * 
 * ctypedef PointCloudColorHandlerRandom[cpp.PointXYZ] PointCloudColorHandlerRandom_t
 * ctypedef PointCloudColorHandlerRandom[cpp.PointXYZI] PointCloudColorHandlerRandom_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef PointCloudColorHandlerRandom[cpp.PointXYZRGB] PointCloudColorHandlerRandom_PointXYZRGB_t
 * ctypedef PointCloudColorHandlerRandom[cpp.PointXYZRGBA] PointCloudColorHandlerRandom_PointXYZRGBA_t
 */
typedef pcl::visualization::PointCloudColorHandlerRandom<struct pcl::PointXYZI>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerRandom_PointXYZI_t;

/* "pcl_visualization_defs.pxd":382
 * ctypedef PointCloudColorHandlerRandom[cpp.PointXYZ] PointCloudColorHandlerRandom_t
 * ctypedef PointCloudColorHandlerRandom[cpp.PointXYZI] PointCloudColorHandlerRandom_PointXYZI_t
 * ctypedef PointCloudColorHandlerRandom[cpp.PointXYZRGB] PointCloudColorHandlerRandom_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef PointCloudColorHandlerRandom[cpp.PointXYZRGBA] PointCloudColorHandlerRandom_PointXYZRGBA_t
 * ctypedef shared_ptr[PointCloudColorHandlerRandom[cpp.PointXYZ]] PointCloudColorHandlerRandom_Ptr_t
 */
typedef pcl::visualization::PointCloudColorHandlerRandom<struct pcl::PointXYZRGB>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerRandom_PointXYZRGB_t;

/* "pcl_visualization_defs.pxd":383
 * ctypedef PointCloudColorHandlerRandom[cpp.PointXYZI] PointCloudColorHandlerRandom_PointXYZI_t
 * ctypedef PointCloudColorHandlerRandom[cpp.PointXYZRGB] PointCloudColorHandlerRandom_PointXYZRGB_t
 * ctypedef PointCloudColorHandlerRandom[cpp.PointXYZRGBA] PointCloudColorHandlerRandom_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudColorHandlerRandom[cpp.PointXYZ]] PointCloudColorHandlerRandom_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerRandom[cpp.PointXYZI]] PointCloudColorHandlerRandom_PointXYZI_Ptr_t
 */
typedef pcl::visualization::PointCloudColorHandlerRandom<struct pcl::PointXYZRGBA>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerRandom_PointXYZRGBA_t;

/* "pcl_visualization_defs.pxd":384
 * ctypedef PointCloudColorHandlerRandom[cpp.PointXYZRGB] PointCloudColorHandlerRandom_PointXYZRGB_t
 * ctypedef PointCloudColorHandlerRandom[cpp.PointXYZRGBA] PointCloudColorHandlerRandom_PointXYZRGBA_t
 * ctypedef shared_ptr[PointCloudColorHandlerRandom[cpp.PointXYZ]] PointCloudColorHandlerRandom_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudColorHandlerRandom[cpp.PointXYZI]] PointCloudColorHandlerRandom_PointXYZI_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerRandom[cpp.PointXYZRGB]] PointCloudColorHandlerRandom_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudColorHandlerRandom<struct pcl::PointXYZ> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerRandom_Ptr_t;

/* "pcl_visualization_defs.pxd":385
 * ctypedef PointCloudColorHandlerRandom[cpp.PointXYZRGBA] PointCloudColorHandlerRandom_PointXYZRGBA_t
 * ctypedef shared_ptr[PointCloudColorHandlerRandom[cpp.PointXYZ]] PointCloudColorHandlerRandom_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerRandom[cpp.PointXYZI]] PointCloudColorHandlerRandom_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudColorHandlerRandom[cpp.PointXYZRGB]] PointCloudColorHandlerRandom_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerRandom[cpp.PointXYZRGBA]] PointCloudColorHandlerRandom_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudColorHandlerRandom<struct pcl::PointXYZI> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerRandom_PointXYZI_Ptr_t;

/* "pcl_visualization_defs.pxd":386
 * ctypedef shared_ptr[PointCloudColorHandlerRandom[cpp.PointXYZ]] PointCloudColorHandlerRandom_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerRandom[cpp.PointXYZI]] PointCloudColorHandlerRandom_PointXYZI_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerRandom[cpp.PointXYZRGB]] PointCloudColorHandlerRandom_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudColorHandlerRandom[cpp.PointXYZRGBA]] PointCloudColorHandlerRandom_PointXYZRGBA_Ptr_t
 * ###
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudColorHandlerRandom<struct pcl::PointXYZRGB> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerRandom_PointXYZRGB_Ptr_t;

/* "pcl_visualization_defs.pxd":387
 * ctypedef shared_ptr[PointCloudColorHandlerRandom[cpp.PointXYZI]] PointCloudColorHandlerRandom_PointXYZI_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerRandom[cpp.PointXYZRGB]] PointCloudColorHandlerRandom_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerRandom[cpp.PointXYZRGBA]] PointCloudColorHandlerRandom_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudColorHandlerRandom<struct pcl::PointXYZRGBA> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerRandom_PointXYZRGBA_Ptr_t;

/* "pcl_visualization_defs.pxd":421
 * 
 * 
 * ctypedef PointCloudColorHandlerRGBField[cpp.PointXYZ] PointCloudColorHandlerRGBField_t             # <<<<<<<<<<<<<<
 * ctypedef PointCloudColorHandlerRGBField[cpp.PointXYZI] PointCloudColorHandlerRGBField_PointXYZI_t
 * ctypedef PointCloudColorHandlerRGBField[cpp.PointXYZRGB] PointCloudColorHandlerRGBField_PointXYZRGB_t
 */
typedef pcl::visualization::PointCloudColorHandlerRGBField<struct pcl::PointXYZ>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerRGBField_t;

/* "pcl_visualization_defs.pxd":422
 * 
 * ctypedef PointCloudColorHandlerRGBField[cpp.PointXYZ] PointCloudColorHandlerRGBField_t
 * ctypedef PointCloudColorHandlerRGBField[cpp.PointXYZI] PointCloudColorHandlerRGBField_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef PointCloudColorHandlerRGBField[cpp.PointXYZRGB] PointCloudColorHandlerRGBField_PointXYZRGB_t
 * ctypedef PointCloudColorHandlerRGBField[cpp.PointXYZRGBA] PointCloudColorHandlerRGBField_PointXYZRGBA_t
 */
typedef pcl::visualization::PointCloudColorHandlerRGBField<struct pcl::PointXYZI>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerRGBField_PointXYZI_t;

/* "pcl_visualization_defs.pxd":423
 * ctypedef PointCloudColorHandlerRGBField[cpp.PointXYZ] PointCloudColorHandlerRGBField_t
 * ctypedef PointCloudColorHandlerRGBField[cpp.PointXYZI] PointCloudColorHandlerRGBField_PointXYZI_t
 * ctypedef PointCloudColorHandlerRGBField[cpp.PointXYZRGB] PointCloudColorHandlerRGBField_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef PointCloudColorHandlerRGBField[cpp.PointXYZRGBA] PointCloudColorHandlerRGBField_PointXYZRGBA_t
 * ctypedef shared_ptr[PointCloudColorHandlerRGBField[cpp.PointXYZ]] PointCloudColorHandlerRGBField_Ptr_t
 */
typedef pcl::visualization::PointCloudColorHandlerRGBField<struct pcl::PointXYZRGB>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerRGBField_PointXYZRGB_t;

/* "pcl_visualization_defs.pxd":424
 * ctypedef PointCloudColorHandlerRGBField[cpp.PointXYZI] PointCloudColorHandlerRGBField_PointXYZI_t
 * ctypedef PointCloudColorHandlerRGBField[cpp.PointXYZRGB] PointCloudColorHandlerRGBField_PointXYZRGB_t
 * ctypedef PointCloudColorHandlerRGBField[cpp.PointXYZRGBA] PointCloudColorHandlerRGBField_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudColorHandlerRGBField[cpp.PointXYZ]] PointCloudColorHandlerRGBField_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerRGBField[cpp.PointXYZI]] PointCloudColorHandlerRGBField_PointXYZI_Ptr_t
 */
typedef pcl::visualization::PointCloudColorHandlerRGBField<struct pcl::PointXYZRGBA>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerRGBField_PointXYZRGBA_t;

/* "pcl_visualization_defs.pxd":425
 * ctypedef PointCloudColorHandlerRGBField[cpp.PointXYZRGB] PointCloudColorHandlerRGBField_PointXYZRGB_t
 * ctypedef PointCloudColorHandlerRGBField[cpp.PointXYZRGBA] PointCloudColorHandlerRGBField_PointXYZRGBA_t
 * ctypedef shared_ptr[PointCloudColorHandlerRGBField[cpp.PointXYZ]] PointCloudColorHandlerRGBField_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudColorHandlerRGBField[cpp.PointXYZI]] PointCloudColorHandlerRGBField_PointXYZI_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerRGBField[cpp.PointXYZRGB]] PointCloudColorHandlerRGBField_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudColorHandlerRGBField<struct pcl::PointXYZ> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerRGBField_Ptr_t;

/* "pcl_visualization_defs.pxd":426
 * ctypedef PointCloudColorHandlerRGBField[cpp.PointXYZRGBA] PointCloudColorHandlerRGBField_PointXYZRGBA_t
 * ctypedef shared_ptr[PointCloudColorHandlerRGBField[cpp.PointXYZ]] PointCloudColorHandlerRGBField_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerRGBField[cpp.PointXYZI]] PointCloudColorHandlerRGBField_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudColorHandlerRGBField[cpp.PointXYZRGB]] PointCloudColorHandlerRGBField_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerRGBField[cpp.PointXYZRGBA]] PointCloudColorHandlerRGBField_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudColorHandlerRGBField<struct pcl::PointXYZI> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerRGBField_PointXYZI_Ptr_t;

/* "pcl_visualization_defs.pxd":427
 * ctypedef shared_ptr[PointCloudColorHandlerRGBField[cpp.PointXYZ]] PointCloudColorHandlerRGBField_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerRGBField[cpp.PointXYZI]] PointCloudColorHandlerRGBField_PointXYZI_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerRGBField[cpp.PointXYZRGB]] PointCloudColorHandlerRGBField_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudColorHandlerRGBField[cpp.PointXYZRGBA]] PointCloudColorHandlerRGBField_PointXYZRGBA_Ptr_t
 * ###
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudColorHandlerRGBField<struct pcl::PointXYZRGB> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerRGBField_PointXYZRGB_Ptr_t;

/* "pcl_visualization_defs.pxd":428
 * ctypedef shared_ptr[PointCloudColorHandlerRGBField[cpp.PointXYZI]] PointCloudColorHandlerRGBField_PointXYZI_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerRGBField[cpp.PointXYZRGB]] PointCloudColorHandlerRGBField_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerRGBField[cpp.PointXYZRGBA]] PointCloudColorHandlerRGBField_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudColorHandlerRGBField<struct pcl::PointXYZRGBA> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerRGBField_PointXYZRGBA_Ptr_t;

/* "pcl_visualization_defs.pxd":459
 * 
 * 
 * ctypedef PointCloudColorHandlerHSVField[cpp.PointXYZ] PointCloudColorHandlerHSVField_t             # <<<<<<<<<<<<<<
 * ctypedef PointCloudColorHandlerHSVField[cpp.PointXYZI] PointCloudColorHandlerHSVField_PointXYZI_t
 * ctypedef PointCloudColorHandlerHSVField[cpp.PointXYZRGB] PointCloudColorHandlerHSVField_PointXYZRGB_t
 */
typedef pcl::visualization::PointCloudColorHandlerHSVField<struct pcl::PointXYZ>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerHSVField_t;

/* "pcl_visualization_defs.pxd":460
 * 
 * ctypedef PointCloudColorHandlerHSVField[cpp.PointXYZ] PointCloudColorHandlerHSVField_t
 * ctypedef PointCloudColorHandlerHSVField[cpp.PointXYZI] PointCloudColorHandlerHSVField_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef PointCloudColorHandlerHSVField[cpp.PointXYZRGB] PointCloudColorHandlerHSVField_PointXYZRGB_t
 * ctypedef PointCloudColorHandlerHSVField[cpp.PointXYZRGBA] PointCloudColorHandlerHSVField_PointXYZRGBA_t
 */
typedef pcl::visualization::PointCloudColorHandlerHSVField<struct pcl::PointXYZI>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerHSVField_PointXYZI_t;

/* "pcl_visualization_defs.pxd":461
 * ctypedef PointCloudColorHandlerHSVField[cpp.PointXYZ] PointCloudColorHandlerHSVField_t
 * ctypedef PointCloudColorHandlerHSVField[cpp.PointXYZI] PointCloudColorHandlerHSVField_PointXYZI_t
 * ctypedef PointCloudColorHandlerHSVField[cpp.PointXYZRGB] PointCloudColorHandlerHSVField_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef PointCloudColorHandlerHSVField[cpp.PointXYZRGBA] PointCloudColorHandlerHSVField_PointXYZRGBA_t
 * ctypedef shared_ptr[PointCloudColorHandlerHSVField[cpp.PointXYZ]] PointCloudColorHandlerHSVField_Ptr_t
 */
typedef pcl::visualization::PointCloudColorHandlerHSVField<struct pcl::PointXYZRGB>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerHSVField_PointXYZRGB_t;

/* "pcl_visualization_defs.pxd":462
 * ctypedef PointCloudColorHandlerHSVField[cpp.PointXYZI] PointCloudColorHandlerHSVField_PointXYZI_t
 * ctypedef PointCloudColorHandlerHSVField[cpp.PointXYZRGB] PointCloudColorHandlerHSVField_PointXYZRGB_t
 * ctypedef PointCloudColorHandlerHSVField[cpp.PointXYZRGBA] PointCloudColorHandlerHSVField_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudColorHandlerHSVField[cpp.PointXYZ]] PointCloudColorHandlerHSVField_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerHSVField[cpp.PointXYZI]] PointCloudColorHandlerHSVField_PointXYZI_Ptr_t
 */
typedef pcl::visualization::PointCloudColorHandlerHSVField<struct pcl::PointXYZRGBA>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerHSVField_PointXYZRGBA_t;

/* "pcl_visualization_defs.pxd":463
 * ctypedef PointCloudColorHandlerHSVField[cpp.PointXYZRGB] PointCloudColorHandlerHSVField_PointXYZRGB_t
 * ctypedef PointCloudColorHandlerHSVField[cpp.PointXYZRGBA] PointCloudColorHandlerHSVField_PointXYZRGBA_t
 * ctypedef shared_ptr[PointCloudColorHandlerHSVField[cpp.PointXYZ]] PointCloudColorHandlerHSVField_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudColorHandlerHSVField[cpp.PointXYZI]] PointCloudColorHandlerHSVField_PointXYZI_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerHSVField[cpp.PointXYZRGB]] PointCloudColorHandlerHSVField_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudColorHandlerHSVField<struct pcl::PointXYZ> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerHSVField_Ptr_t;

/* "pcl_visualization_defs.pxd":464
 * ctypedef PointCloudColorHandlerHSVField[cpp.PointXYZRGBA] PointCloudColorHandlerHSVField_PointXYZRGBA_t
 * ctypedef shared_ptr[PointCloudColorHandlerHSVField[cpp.PointXYZ]] PointCloudColorHandlerHSVField_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerHSVField[cpp.PointXYZI]] PointCloudColorHandlerHSVField_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudColorHandlerHSVField[cpp.PointXYZRGB]] PointCloudColorHandlerHSVField_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerHSVField[cpp.PointXYZRGBA]] PointCloudColorHandlerHSVField_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudColorHandlerHSVField<struct pcl::PointXYZI> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerHSVField_PointXYZI_Ptr_t;

/* "pcl_visualization_defs.pxd":465
 * ctypedef shared_ptr[PointCloudColorHandlerHSVField[cpp.PointXYZ]] PointCloudColorHandlerHSVField_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerHSVField[cpp.PointXYZI]] PointCloudColorHandlerHSVField_PointXYZI_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerHSVField[cpp.PointXYZRGB]] PointCloudColorHandlerHSVField_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudColorHandlerHSVField[cpp.PointXYZRGBA]] PointCloudColorHandlerHSVField_PointXYZRGBA_Ptr_t
 * ###
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudColorHandlerHSVField<struct pcl::PointXYZRGB> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerHSVField_PointXYZRGB_Ptr_t;

/* "pcl_visualization_defs.pxd":466
 * ctypedef shared_ptr[PointCloudColorHandlerHSVField[cpp.PointXYZI]] PointCloudColorHandlerHSVField_PointXYZI_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerHSVField[cpp.PointXYZRGB]] PointCloudColorHandlerHSVField_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerHSVField[cpp.PointXYZRGBA]] PointCloudColorHandlerHSVField_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudColorHandlerHSVField<struct pcl::PointXYZRGBA> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerHSVField_PointXYZRGBA_Ptr_t;

/* "pcl_visualization_defs.pxd":497
 * 
 * 
 * ctypedef PointCloudColorHandlerGenericField[cpp.PointXYZ] PointCloudColorHandlerGenericField_t             # <<<<<<<<<<<<<<
 * ctypedef PointCloudColorHandlerGenericField[cpp.PointXYZI] PointCloudColorHandlerGenericField_PointXYZI_t
 * ctypedef PointCloudColorHandlerGenericField[cpp.PointXYZRGB] PointCloudColorHandlerGenericField_PointXYZRGB_t
 */
typedef pcl::visualization::PointCloudColorHandlerGenericField<struct pcl::PointXYZ>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerGenericField_t;

/* "pcl_visualization_defs.pxd":498
 * 
 * ctypedef PointCloudColorHandlerGenericField[cpp.PointXYZ] PointCloudColorHandlerGenericField_t
 * ctypedef PointCloudColorHandlerGenericField[cpp.PointXYZI] PointCloudColorHandlerGenericField_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef PointCloudColorHandlerGenericField[cpp.PointXYZRGB] PointCloudColorHandlerGenericField_PointXYZRGB_t
 * ctypedef PointCloudColorHandlerGenericField[cpp.PointXYZRGBA] PointCloudColorHandlerGenericField_PointXYZRGBA_t
 */
typedef pcl::visualization::PointCloudColorHandlerGenericField<struct pcl::PointXYZI>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerGenericField_PointXYZI_t;

/* "pcl_visualization_defs.pxd":499
 * ctypedef PointCloudColorHandlerGenericField[cpp.PointXYZ] PointCloudColorHandlerGenericField_t
 * ctypedef PointCloudColorHandlerGenericField[cpp.PointXYZI] PointCloudColorHandlerGenericField_PointXYZI_t
 * ctypedef PointCloudColorHandlerGenericField[cpp.PointXYZRGB] PointCloudColorHandlerGenericField_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef PointCloudColorHandlerGenericField[cpp.PointXYZRGBA] PointCloudColorHandlerGenericField_PointXYZRGBA_t
 * ctypedef shared_ptr[PointCloudColorHandlerGenericField[cpp.PointXYZ]] PointCloudColorHandlerGenericField_Ptr_t
 */
typedef pcl::visualization::PointCloudColorHandlerGenericField<struct pcl::PointXYZRGB>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerGenericField_PointXYZRGB_t;

/* "pcl_visualization_defs.pxd":500
 * ctypedef PointCloudColorHandlerGenericField[cpp.PointXYZI] PointCloudColorHandlerGenericField_PointXYZI_t
 * ctypedef PointCloudColorHandlerGenericField[cpp.PointXYZRGB] PointCloudColorHandlerGenericField_PointXYZRGB_t
 * ctypedef PointCloudColorHandlerGenericField[cpp.PointXYZRGBA] PointCloudColorHandlerGenericField_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudColorHandlerGenericField[cpp.PointXYZ]] PointCloudColorHandlerGenericField_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerGenericField[cpp.PointXYZI]] PointCloudColorHandlerGenericField_PointXYZI_Ptr_t
 */
typedef pcl::visualization::PointCloudColorHandlerGenericField<struct pcl::PointXYZRGBA>  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerGenericField_PointXYZRGBA_t;

/* "pcl_visualization_defs.pxd":501
 * ctypedef PointCloudColorHandlerGenericField[cpp.PointXYZRGB] PointCloudColorHandlerGenericField_PointXYZRGB_t
 * ctypedef PointCloudColorHandlerGenericField[cpp.PointXYZRGBA] PointCloudColorHandlerGenericField_PointXYZRGBA_t
 * ctypedef shared_ptr[PointCloudColorHandlerGenericField[cpp.PointXYZ]] PointCloudColorHandlerGenericField_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudColorHandlerGenericField[cpp.PointXYZI]] PointCloudColorHandlerGenericField_PointXYZI_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerGenericField[cpp.PointXYZRGB]] PointCloudColorHandlerGenericField_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudColorHandlerGenericField<struct pcl::PointXYZ> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerGenericField_Ptr_t;

/* "pcl_visualization_defs.pxd":502
 * ctypedef PointCloudColorHandlerGenericField[cpp.PointXYZRGBA] PointCloudColorHandlerGenericField_PointXYZRGBA_t
 * ctypedef shared_ptr[PointCloudColorHandlerGenericField[cpp.PointXYZ]] PointCloudColorHandlerGenericField_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerGenericField[cpp.PointXYZI]] PointCloudColorHandlerGenericField_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudColorHandlerGenericField[cpp.PointXYZRGB]] PointCloudColorHandlerGenericField_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerGenericField[cpp.PointXYZRGBA]] PointCloudColorHandlerGenericField_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudColorHandlerGenericField<struct pcl::PointXYZI> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerGenericField_PointXYZI_Ptr_t;

/* "pcl_visualization_defs.pxd":503
 * ctypedef shared_ptr[PointCloudColorHandlerGenericField[cpp.PointXYZ]] PointCloudColorHandlerGenericField_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerGenericField[cpp.PointXYZI]] PointCloudColorHandlerGenericField_PointXYZI_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerGenericField[cpp.PointXYZRGB]] PointCloudColorHandlerGenericField_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[PointCloudColorHandlerGenericField[cpp.PointXYZRGBA]] PointCloudColorHandlerGenericField_PointXYZRGBA_Ptr_t
 * ###
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudColorHandlerGenericField<struct pcl::PointXYZRGB> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerGenericField_PointXYZRGB_Ptr_t;

/* "pcl_visualization_defs.pxd":504
 * ctypedef shared_ptr[PointCloudColorHandlerGenericField[cpp.PointXYZI]] PointCloudColorHandlerGenericField_PointXYZI_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerGenericField[cpp.PointXYZRGB]] PointCloudColorHandlerGenericField_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[PointCloudColorHandlerGenericField[cpp.PointXYZRGBA]] PointCloudColorHandlerGenericField_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::visualization::PointCloudColorHandlerGenericField<struct pcl::PointXYZRGBA> >  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerGenericField_PointXYZRGBA_Ptr_t;

/* "pcl_visualization_defs.pxd":1782
 * 
 * # ctypedef PCLVisualizer PCLVisualizer_t
 * ctypedef shared_ptr[PCLVisualizer] PCLVisualizerPtr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::visualization::PCLVisualizer>  __pyx_t_3pcl_22pcl_visualization_defs_PCLVisualizerPtr_t;

/* "pcl_visualization_defs.pxd":1876
 * 
 * # ctypedef CloudViewer CloudViewer_t
 * ctypedef shared_ptr[CloudViewer] CloudViewerPtr_t             # <<<<<<<<<<<<<<
 * # ctypedef boost::function1<void, pcl::visualization::PCLVisualizer&> VizCallable;
 * # ctypedef function1[void, PCLVisualizer] VizCallable;
 */
typedef boost::shared_ptr<pcl::visualization::CloudViewer>  __pyx_t_3pcl_22pcl_visualization_defs_CloudViewerPtr_t;

/* "pcl_visualization_defs.pxd":1995
 * 
 * # ctypedef CloudViewer CloudViewer_t
 * ctypedef shared_ptr[PCLHistogramVisualizer] PCLHistogramVisualizerPtr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::visualization::PCLHistogramVisualizer>  __pyx_t_3pcl_22pcl_visualization_defs_PCLHistogramVisualizerPtr_t;

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":764
 * ctypedef npy_longdouble longdouble_t
 * 
 * ctypedef npy_cfloat      cfloat_t             # <<<<<<<<<<<<<<
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t
 */
typedef npy_cfloat __pyx_t_5numpy_cfloat_t;

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":765
 * 
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t             # <<<<<<<<<<<<<<
 * ctypedef npy_clongdouble clongdouble_t
 * 
 */
typedef npy_cdouble __pyx_t_5numpy_cdouble_t;

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":766
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cdouble     complex_t
 */
typedef npy_clongdouble __pyx_t_5numpy_clongdouble_t;

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":768
 * ctypedef npy_clongdouble clongdouble_t
 * 
 * ctypedef npy_cdouble     complex_t             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 */
typedef npy_cdouble __pyx_t_5numpy_complex_t;

/* "pcl_kdtree.pxd":185
 *         # inline int getMinPts () const
 * 
 * ctypedef KdTree[cpp.PointXYZ] KdTree_t             # <<<<<<<<<<<<<<
 * ctypedef KdTree[cpp.PointXYZI] KdTree_PointXYZI_t
 * ctypedef KdTree[cpp.PointXYZRGB] KdTree_PointXYZRGB_t
 */
typedef pcl::search::KdTree<struct pcl::PointXYZ>  __pyx_t_3pcl_10pcl_kdtree_KdTree_t;

/* "pcl_kdtree.pxd":186
 * 
 * ctypedef KdTree[cpp.PointXYZ] KdTree_t
 * ctypedef KdTree[cpp.PointXYZI] KdTree_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef KdTree[cpp.PointXYZRGB] KdTree_PointXYZRGB_t
 * ctypedef KdTree[cpp.PointXYZRGBA] KdTree_PointXYZRGBA_t
 */
typedef pcl::search::KdTree<struct pcl::PointXYZI>  __pyx_t_3pcl_10pcl_kdtree_KdTree_PointXYZI_t;

/* "pcl_kdtree.pxd":187
 * ctypedef KdTree[cpp.PointXYZ] KdTree_t
 * ctypedef KdTree[cpp.PointXYZI] KdTree_PointXYZI_t
 * ctypedef KdTree[cpp.PointXYZRGB] KdTree_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef KdTree[cpp.PointXYZRGBA] KdTree_PointXYZRGBA_t
 * 
 */
typedef pcl::search::KdTree<struct pcl::PointXYZRGB>  __pyx_t_3pcl_10pcl_kdtree_KdTree_PointXYZRGB_t;

/* "pcl_kdtree.pxd":188
 * ctypedef KdTree[cpp.PointXYZI] KdTree_PointXYZI_t
 * ctypedef KdTree[cpp.PointXYZRGB] KdTree_PointXYZRGB_t
 * ctypedef KdTree[cpp.PointXYZRGBA] KdTree_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef shared_ptr[KdTree[cpp.PointXYZ]] KdTreePtr_t
 */
typedef pcl::search::KdTree<struct pcl::PointXYZRGBA>  __pyx_t_3pcl_10pcl_kdtree_KdTree_PointXYZRGBA_t;

/* "pcl_kdtree.pxd":190
 * ctypedef KdTree[cpp.PointXYZRGBA] KdTree_PointXYZRGBA_t
 * 
 * ctypedef shared_ptr[KdTree[cpp.PointXYZ]] KdTreePtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[KdTree[cpp.PointXYZI]] KdTree_PointXYZI_Ptr_t
 * ctypedef shared_ptr[KdTree[cpp.PointXYZRGB]] KdTree_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::search::KdTree<struct pcl::PointXYZ> >  __pyx_t_3pcl_10pcl_kdtree_KdTreePtr_t;

/* "pcl_kdtree.pxd":191
 * 
 * ctypedef shared_ptr[KdTree[cpp.PointXYZ]] KdTreePtr_t
 * ctypedef shared_ptr[KdTree[cpp.PointXYZI]] KdTree_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[KdTree[cpp.PointXYZRGB]] KdTree_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[KdTree[cpp.PointXYZRGBA]] KdTree_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::search::KdTree<struct pcl::PointXYZI> >  __pyx_t_3pcl_10pcl_kdtree_KdTree_PointXYZI_Ptr_t;

/* "pcl_kdtree.pxd":192
 * ctypedef shared_ptr[KdTree[cpp.PointXYZ]] KdTreePtr_t
 * ctypedef shared_ptr[KdTree[cpp.PointXYZI]] KdTree_PointXYZI_Ptr_t
 * ctypedef shared_ptr[KdTree[cpp.PointXYZRGB]] KdTree_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[KdTree[cpp.PointXYZRGBA]] KdTree_PointXYZRGBA_Ptr_t
 * ###
 */
typedef boost::shared_ptr<pcl::search::KdTree<struct pcl::PointXYZRGB> >  __pyx_t_3pcl_10pcl_kdtree_KdTree_PointXYZRGB_Ptr_t;

/* "pcl_kdtree.pxd":193
 * ctypedef shared_ptr[KdTree[cpp.PointXYZI]] KdTree_PointXYZI_Ptr_t
 * ctypedef shared_ptr[KdTree[cpp.PointXYZRGB]] KdTree_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[KdTree[cpp.PointXYZRGBA]] KdTree_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::search::KdTree<struct pcl::PointXYZRGBA> >  __pyx_t_3pcl_10pcl_kdtree_KdTree_PointXYZRGBA_Ptr_t;

/* "pcl_kdtree.pxd":311
 * ###
 * 
 * ctypedef KdTreeFLANN[cpp.PointXYZ] KdTreeFLANN_t             # <<<<<<<<<<<<<<
 * ctypedef KdTreeFLANN[cpp.PointXYZI] KdTreeFLANN_PointXYZI_t
 * ctypedef KdTreeFLANN[cpp.PointXYZRGB] KdTreeFLANN_PointXYZRGB_t
 */
typedef pcl::KdTreeFLANN<struct pcl::PointXYZ>  __pyx_t_3pcl_10pcl_kdtree_KdTreeFLANN_t;

/* "pcl_kdtree.pxd":312
 * 
 * ctypedef KdTreeFLANN[cpp.PointXYZ] KdTreeFLANN_t
 * ctypedef KdTreeFLANN[cpp.PointXYZI] KdTreeFLANN_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef KdTreeFLANN[cpp.PointXYZRGB] KdTreeFLANN_PointXYZRGB_t
 * ctypedef KdTreeFLANN[cpp.PointXYZRGBA] KdTreeFLANN_PointXYZRGBA_t
 */
typedef pcl::KdTreeFLANN<struct pcl::PointXYZI>  __pyx_t_3pcl_10pcl_kdtree_KdTreeFLANN_PointXYZI_t;

/* "pcl_kdtree.pxd":313
 * ctypedef KdTreeFLANN[cpp.PointXYZ] KdTreeFLANN_t
 * ctypedef KdTreeFLANN[cpp.PointXYZI] KdTreeFLANN_PointXYZI_t
 * ctypedef KdTreeFLANN[cpp.PointXYZRGB] KdTreeFLANN_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef KdTreeFLANN[cpp.PointXYZRGBA] KdTreeFLANN_PointXYZRGBA_t
 * 
 */
typedef pcl::KdTreeFLANN<struct pcl::PointXYZRGB>  __pyx_t_3pcl_10pcl_kdtree_KdTreeFLANN_PointXYZRGB_t;

/* "pcl_kdtree.pxd":314
 * ctypedef KdTreeFLANN[cpp.PointXYZI] KdTreeFLANN_PointXYZI_t
 * ctypedef KdTreeFLANN[cpp.PointXYZRGB] KdTreeFLANN_PointXYZRGB_t
 * ctypedef KdTreeFLANN[cpp.PointXYZRGBA] KdTreeFLANN_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef shared_ptr[KdTreeFLANN[cpp.PointXYZ]] KdTreeFLANNPtr_t
 */
typedef pcl::KdTreeFLANN<struct pcl::PointXYZRGBA>  __pyx_t_3pcl_10pcl_kdtree_KdTreeFLANN_PointXYZRGBA_t;

/* "pcl_kdtree.pxd":316
 * ctypedef KdTreeFLANN[cpp.PointXYZRGBA] KdTreeFLANN_PointXYZRGBA_t
 * 
 * ctypedef shared_ptr[KdTreeFLANN[cpp.PointXYZ]] KdTreeFLANNPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[KdTreeFLANN[cpp.PointXYZI]] KdTreeFLANN_PointXYZI_Ptr_t
 * ctypedef shared_ptr[KdTreeFLANN[cpp.PointXYZRGB]] KdTreeFLANN_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::KdTreeFLANN<struct pcl::PointXYZ> >  __pyx_t_3pcl_10pcl_kdtree_KdTreeFLANNPtr_t;

/* "pcl_kdtree.pxd":317
 * 
 * ctypedef shared_ptr[KdTreeFLANN[cpp.PointXYZ]] KdTreeFLANNPtr_t
 * ctypedef shared_ptr[KdTreeFLANN[cpp.PointXYZI]] KdTreeFLANN_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[KdTreeFLANN[cpp.PointXYZRGB]] KdTreeFLANN_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[KdTreeFLANN[cpp.PointXYZRGBA]] KdTreeFLANN_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::KdTreeFLANN<struct pcl::PointXYZI> >  __pyx_t_3pcl_10pcl_kdtree_KdTreeFLANN_PointXYZI_Ptr_t;

/* "pcl_kdtree.pxd":318
 * ctypedef shared_ptr[KdTreeFLANN[cpp.PointXYZ]] KdTreeFLANNPtr_t
 * ctypedef shared_ptr[KdTreeFLANN[cpp.PointXYZI]] KdTreeFLANN_PointXYZI_Ptr_t
 * ctypedef shared_ptr[KdTreeFLANN[cpp.PointXYZRGB]] KdTreeFLANN_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[KdTreeFLANN[cpp.PointXYZRGBA]] KdTreeFLANN_PointXYZRGBA_Ptr_t
 * 
 */
typedef boost::shared_ptr<pcl::KdTreeFLANN<struct pcl::PointXYZRGB> >  __pyx_t_3pcl_10pcl_kdtree_KdTreeFLANN_PointXYZRGB_Ptr_t;

/* "pcl_kdtree.pxd":319
 * ctypedef shared_ptr[KdTreeFLANN[cpp.PointXYZI]] KdTreeFLANN_PointXYZI_Ptr_t
 * ctypedef shared_ptr[KdTreeFLANN[cpp.PointXYZRGB]] KdTreeFLANN_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[KdTreeFLANN[cpp.PointXYZRGBA]] KdTreeFLANN_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef shared_ptr[const KdTreeFLANN[cpp.PointXYZ]] KdTreeFLANNConstPtr_t
 */
typedef boost::shared_ptr<pcl::KdTreeFLANN<struct pcl::PointXYZRGBA> >  __pyx_t_3pcl_10pcl_kdtree_KdTreeFLANN_PointXYZRGBA_Ptr_t;

/* "pcl_kdtree.pxd":321
 * ctypedef shared_ptr[KdTreeFLANN[cpp.PointXYZRGBA]] KdTreeFLANN_PointXYZRGBA_Ptr_t
 * 
 * ctypedef shared_ptr[const KdTreeFLANN[cpp.PointXYZ]] KdTreeFLANNConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const KdTreeFLANN[cpp.PointXYZI]] KdTreeFLANN_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const KdTreeFLANN[cpp.PointXYZRGB]] KdTreeFLANN_PointXYZRGB_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::KdTreeFLANN<struct pcl::PointXYZ>  const >  __pyx_t_3pcl_10pcl_kdtree_KdTreeFLANNConstPtr_t;

/* "pcl_kdtree.pxd":322
 * 
 * ctypedef shared_ptr[const KdTreeFLANN[cpp.PointXYZ]] KdTreeFLANNConstPtr_t
 * ctypedef shared_ptr[const KdTreeFLANN[cpp.PointXYZI]] KdTreeFLANN_PointXYZI_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const KdTreeFLANN[cpp.PointXYZRGB]] KdTreeFLANN_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const KdTreeFLANN[cpp.PointXYZRGBA]] KdTreeFLANN_PointXYZRGBA_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::KdTreeFLANN<struct pcl::PointXYZI>  const >  __pyx_t_3pcl_10pcl_kdtree_KdTreeFLANN_PointXYZI_ConstPtr_t;

/* "pcl_kdtree.pxd":323
 * ctypedef shared_ptr[const KdTreeFLANN[cpp.PointXYZ]] KdTreeFLANNConstPtr_t
 * ctypedef shared_ptr[const KdTreeFLANN[cpp.PointXYZI]] KdTreeFLANN_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const KdTreeFLANN[cpp.PointXYZRGB]] KdTreeFLANN_PointXYZRGB_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const KdTreeFLANN[cpp.PointXYZRGBA]] KdTreeFLANN_PointXYZRGBA_ConstPtr_t
 * 
 */
typedef boost::shared_ptr<pcl::KdTreeFLANN<struct pcl::PointXYZRGB>  const >  __pyx_t_3pcl_10pcl_kdtree_KdTreeFLANN_PointXYZRGB_ConstPtr_t;

/* "pcl_kdtree.pxd":324
 * ctypedef shared_ptr[const KdTreeFLANN[cpp.PointXYZI]] KdTreeFLANN_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const KdTreeFLANN[cpp.PointXYZRGB]] KdTreeFLANN_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const KdTreeFLANN[cpp.PointXYZRGBA]] KdTreeFLANN_PointXYZRGBA_ConstPtr_t             # <<<<<<<<<<<<<<
 * 
 * ###
 */
typedef boost::shared_ptr<pcl::KdTreeFLANN<struct pcl::PointXYZRGBA>  const >  __pyx_t_3pcl_10pcl_kdtree_KdTreeFLANN_PointXYZRGBA_ConstPtr_t;

/* "pcl_features.pxd":76
 * 
 * 
 * ctypedef Feature[cpp.PointXYZ, cpp.Normal] Feature_t             # <<<<<<<<<<<<<<
 * ctypedef Feature[cpp.PointXYZI, cpp.Normal] Feature_PointXYZI_t
 * ctypedef Feature[cpp.PointXYZRGB, cpp.Normal] Feature_PointXYZRGB_t
 */
typedef pcl::Feature<struct pcl::PointXYZ,struct pcl::Normal>  __pyx_t_3pcl_12pcl_features_Feature_t;

/* "pcl_features.pxd":77
 * 
 * ctypedef Feature[cpp.PointXYZ, cpp.Normal] Feature_t
 * ctypedef Feature[cpp.PointXYZI, cpp.Normal] Feature_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef Feature[cpp.PointXYZRGB, cpp.Normal] Feature_PointXYZRGB_t
 * ctypedef Feature[cpp.PointXYZRGBA, cpp.Normal] Feature_PointXYZRGBA_t
 */
typedef pcl::Feature<struct pcl::PointXYZI,struct pcl::Normal>  __pyx_t_3pcl_12pcl_features_Feature_PointXYZI_t;

/* "pcl_features.pxd":78
 * ctypedef Feature[cpp.PointXYZ, cpp.Normal] Feature_t
 * ctypedef Feature[cpp.PointXYZI, cpp.Normal] Feature_PointXYZI_t
 * ctypedef Feature[cpp.PointXYZRGB, cpp.Normal] Feature_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef Feature[cpp.PointXYZRGBA, cpp.Normal] Feature_PointXYZRGBA_t
 * ###
 */
typedef pcl::Feature<struct pcl::PointXYZRGB,struct pcl::Normal>  __pyx_t_3pcl_12pcl_features_Feature_PointXYZRGB_t;

/* "pcl_features.pxd":79
 * ctypedef Feature[cpp.PointXYZI, cpp.Normal] Feature_PointXYZI_t
 * ctypedef Feature[cpp.PointXYZRGB, cpp.Normal] Feature_PointXYZRGB_t
 * ctypedef Feature[cpp.PointXYZRGBA, cpp.Normal] Feature_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef pcl::Feature<struct pcl::PointXYZRGBA,struct pcl::Normal>  __pyx_t_3pcl_12pcl_features_Feature_PointXYZRGBA_t;

/* "pcl_features.pxd":458
 * 
 * 
 * ctypedef FPFHEstimation[cpp.PointXYZ, cpp.Normal, cpp.PFHSignature125] FPFHEstimation_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[FPFHEstimation[cpp.PointXYZ, cpp.Normal, cpp.PFHSignature125]] FPFHEstimationPtr_t
 * # template <typename PointInT, typename PointNT>
 */
typedef pcl::FPFHEstimation<struct pcl::PointXYZ,struct pcl::Normal,struct pcl::PFHSignature125>  __pyx_t_3pcl_12pcl_features_FPFHEstimation_t;

/* "pcl_features.pxd":459
 * 
 * ctypedef FPFHEstimation[cpp.PointXYZ, cpp.Normal, cpp.PFHSignature125] FPFHEstimation_t
 * ctypedef shared_ptr[FPFHEstimation[cpp.PointXYZ, cpp.Normal, cpp.PFHSignature125]] FPFHEstimationPtr_t             # <<<<<<<<<<<<<<
 * # template <typename PointInT, typename PointNT>
 * # class FPFHEstimation<PointInT, PointNT, Eigen::MatrixXf> : public FPFHEstimation<PointInT, PointNT, pcl::FPFHSignature33>
 */
typedef boost::shared_ptr<pcl::FPFHEstimation<struct pcl::PointXYZ,struct pcl::Normal,struct pcl::PFHSignature125> >  __pyx_t_3pcl_12pcl_features_FPFHEstimationPtr_t;

/* "pcl_features.pxd":589
 * 
 * 
 * ctypedef IntegralImageNormalEstimation[cpp.PointXYZ, cpp.Normal] IntegralImageNormalEstimation_t             # <<<<<<<<<<<<<<
 * ctypedef IntegralImageNormalEstimation[cpp.PointXYZI, cpp.Normal] IntegralImageNormalEstimation_PointXYZI_t
 * ctypedef IntegralImageNormalEstimation[cpp.PointXYZRGB, cpp.Normal] IntegralImageNormalEstimation_PointXYZRGB_t
 */
typedef pcl::IntegralImageNormalEstimation<struct pcl::PointXYZ,struct pcl::Normal>  __pyx_t_3pcl_12pcl_features_IntegralImageNormalEstimation_t;

/* "pcl_features.pxd":590
 * 
 * ctypedef IntegralImageNormalEstimation[cpp.PointXYZ, cpp.Normal] IntegralImageNormalEstimation_t
 * ctypedef IntegralImageNormalEstimation[cpp.PointXYZI, cpp.Normal] IntegralImageNormalEstimation_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef IntegralImageNormalEstimation[cpp.PointXYZRGB, cpp.Normal] IntegralImageNormalEstimation_PointXYZRGB_t
 * ctypedef IntegralImageNormalEstimation[cpp.PointXYZRGBA, cpp.Normal] IntegralImageNormalEstimation_PointXYZRGBA_t
 */
typedef pcl::IntegralImageNormalEstimation<struct pcl::PointXYZI,struct pcl::Normal>  __pyx_t_3pcl_12pcl_features_IntegralImageNormalEstimation_PointXYZI_t;

/* "pcl_features.pxd":591
 * ctypedef IntegralImageNormalEstimation[cpp.PointXYZ, cpp.Normal] IntegralImageNormalEstimation_t
 * ctypedef IntegralImageNormalEstimation[cpp.PointXYZI, cpp.Normal] IntegralImageNormalEstimation_PointXYZI_t
 * ctypedef IntegralImageNormalEstimation[cpp.PointXYZRGB, cpp.Normal] IntegralImageNormalEstimation_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef IntegralImageNormalEstimation[cpp.PointXYZRGBA, cpp.Normal] IntegralImageNormalEstimation_PointXYZRGBA_t
 * ctypedef shared_ptr[IntegralImageNormalEstimation[cpp.PointXYZ, cpp.Normal]] IntegralImageNormalEstimationPtr_t
 */
typedef pcl::IntegralImageNormalEstimation<struct pcl::PointXYZRGB,struct pcl::Normal>  __pyx_t_3pcl_12pcl_features_IntegralImageNormalEstimation_PointXYZRGB_t;

/* "pcl_features.pxd":592
 * ctypedef IntegralImageNormalEstimation[cpp.PointXYZI, cpp.Normal] IntegralImageNormalEstimation_PointXYZI_t
 * ctypedef IntegralImageNormalEstimation[cpp.PointXYZRGB, cpp.Normal] IntegralImageNormalEstimation_PointXYZRGB_t
 * ctypedef IntegralImageNormalEstimation[cpp.PointXYZRGBA, cpp.Normal] IntegralImageNormalEstimation_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[IntegralImageNormalEstimation[cpp.PointXYZ, cpp.Normal]] IntegralImageNormalEstimationPtr_t
 * ctypedef shared_ptr[IntegralImageNormalEstimation[cpp.PointXYZI, cpp.Normal]] IntegralImageNormalEstimation_PointXYZI_Ptr_t
 */
typedef pcl::IntegralImageNormalEstimation<struct pcl::PointXYZRGBA,struct pcl::Normal>  __pyx_t_3pcl_12pcl_features_IntegralImageNormalEstimation_PointXYZRGBA_t;

/* "pcl_features.pxd":593
 * ctypedef IntegralImageNormalEstimation[cpp.PointXYZRGB, cpp.Normal] IntegralImageNormalEstimation_PointXYZRGB_t
 * ctypedef IntegralImageNormalEstimation[cpp.PointXYZRGBA, cpp.Normal] IntegralImageNormalEstimation_PointXYZRGBA_t
 * ctypedef shared_ptr[IntegralImageNormalEstimation[cpp.PointXYZ, cpp.Normal]] IntegralImageNormalEstimationPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[IntegralImageNormalEstimation[cpp.PointXYZI, cpp.Normal]] IntegralImageNormalEstimation_PointXYZI_Ptr_t
 * ctypedef shared_ptr[IntegralImageNormalEstimation[cpp.PointXYZRGB, cpp.Normal]] IntegralImageNormalEstimation_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::IntegralImageNormalEstimation<struct pcl::PointXYZ,struct pcl::Normal> >  __pyx_t_3pcl_12pcl_features_IntegralImageNormalEstimationPtr_t;

/* "pcl_features.pxd":594
 * ctypedef IntegralImageNormalEstimation[cpp.PointXYZRGBA, cpp.Normal] IntegralImageNormalEstimation_PointXYZRGBA_t
 * ctypedef shared_ptr[IntegralImageNormalEstimation[cpp.PointXYZ, cpp.Normal]] IntegralImageNormalEstimationPtr_t
 * ctypedef shared_ptr[IntegralImageNormalEstimation[cpp.PointXYZI, cpp.Normal]] IntegralImageNormalEstimation_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[IntegralImageNormalEstimation[cpp.PointXYZRGB, cpp.Normal]] IntegralImageNormalEstimation_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[IntegralImageNormalEstimation[cpp.PointXYZRGBA, cpp.Normal]] IntegralImageNormalEstimation_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::IntegralImageNormalEstimation<struct pcl::PointXYZI,struct pcl::Normal> >  __pyx_t_3pcl_12pcl_features_IntegralImageNormalEstimation_PointXYZI_Ptr_t;

/* "pcl_features.pxd":595
 * ctypedef shared_ptr[IntegralImageNormalEstimation[cpp.PointXYZ, cpp.Normal]] IntegralImageNormalEstimationPtr_t
 * ctypedef shared_ptr[IntegralImageNormalEstimation[cpp.PointXYZI, cpp.Normal]] IntegralImageNormalEstimation_PointXYZI_Ptr_t
 * ctypedef shared_ptr[IntegralImageNormalEstimation[cpp.PointXYZRGB, cpp.Normal]] IntegralImageNormalEstimation_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[IntegralImageNormalEstimation[cpp.PointXYZRGBA, cpp.Normal]] IntegralImageNormalEstimation_PointXYZRGBA_Ptr_t
 * ###
 */
typedef boost::shared_ptr<pcl::IntegralImageNormalEstimation<struct pcl::PointXYZRGB,struct pcl::Normal> >  __pyx_t_3pcl_12pcl_features_IntegralImageNormalEstimation_PointXYZRGB_Ptr_t;

/* "pcl_features.pxd":596
 * ctypedef shared_ptr[IntegralImageNormalEstimation[cpp.PointXYZI, cpp.Normal]] IntegralImageNormalEstimation_PointXYZI_Ptr_t
 * ctypedef shared_ptr[IntegralImageNormalEstimation[cpp.PointXYZRGB, cpp.Normal]] IntegralImageNormalEstimation_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[IntegralImageNormalEstimation[cpp.PointXYZRGBA, cpp.Normal]] IntegralImageNormalEstimation_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::IntegralImageNormalEstimation<struct pcl::PointXYZRGBA,struct pcl::Normal> >  __pyx_t_3pcl_12pcl_features_IntegralImageNormalEstimation_PointXYZRGBA_Ptr_t;

/* "pcl_features.pxd":1288
 * 
 * 
 * ctypedef NormalEstimation[cpp.PointXYZ, cpp.Normal] NormalEstimation_t             # <<<<<<<<<<<<<<
 * ctypedef NormalEstimation[cpp.PointXYZI, cpp.Normal] NormalEstimation_PointXYZI_t
 * ctypedef NormalEstimation[cpp.PointXYZRGB, cpp.Normal] NormalEstimation_PointXYZRGB_t
 */
typedef pcl::NormalEstimation<struct pcl::PointXYZ,struct pcl::Normal>  __pyx_t_3pcl_12pcl_features_NormalEstimation_t;

/* "pcl_features.pxd":1289
 * 
 * ctypedef NormalEstimation[cpp.PointXYZ, cpp.Normal] NormalEstimation_t
 * ctypedef NormalEstimation[cpp.PointXYZI, cpp.Normal] NormalEstimation_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef NormalEstimation[cpp.PointXYZRGB, cpp.Normal] NormalEstimation_PointXYZRGB_t
 * ctypedef NormalEstimation[cpp.PointXYZRGBA, cpp.Normal] NormalEstimation_PointXYZRGBA_t
 */
typedef pcl::NormalEstimation<struct pcl::PointXYZI,struct pcl::Normal>  __pyx_t_3pcl_12pcl_features_NormalEstimation_PointXYZI_t;

/* "pcl_features.pxd":1290
 * ctypedef NormalEstimation[cpp.PointXYZ, cpp.Normal] NormalEstimation_t
 * ctypedef NormalEstimation[cpp.PointXYZI, cpp.Normal] NormalEstimation_PointXYZI_t
 * ctypedef NormalEstimation[cpp.PointXYZRGB, cpp.Normal] NormalEstimation_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef NormalEstimation[cpp.PointXYZRGBA, cpp.Normal] NormalEstimation_PointXYZRGBA_t
 * ctypedef shared_ptr[NormalEstimation[cpp.PointXYZ, cpp.Normal]] NormalEstimationPtr_t
 */
typedef pcl::NormalEstimation<struct pcl::PointXYZRGB,struct pcl::Normal>  __pyx_t_3pcl_12pcl_features_NormalEstimation_PointXYZRGB_t;

/* "pcl_features.pxd":1291
 * ctypedef NormalEstimation[cpp.PointXYZI, cpp.Normal] NormalEstimation_PointXYZI_t
 * ctypedef NormalEstimation[cpp.PointXYZRGB, cpp.Normal] NormalEstimation_PointXYZRGB_t
 * ctypedef NormalEstimation[cpp.PointXYZRGBA, cpp.Normal] NormalEstimation_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[NormalEstimation[cpp.PointXYZ, cpp.Normal]] NormalEstimationPtr_t
 * ctypedef shared_ptr[NormalEstimation[cpp.PointXYZI, cpp.Normal]] NormalEstimation_PointXYZI_Ptr_t
 */
typedef pcl::NormalEstimation<struct pcl::PointXYZRGBA,struct pcl::Normal>  __pyx_t_3pcl_12pcl_features_NormalEstimation_PointXYZRGBA_t;

/* "pcl_features.pxd":1292
 * ctypedef NormalEstimation[cpp.PointXYZRGB, cpp.Normal] NormalEstimation_PointXYZRGB_t
 * ctypedef NormalEstimation[cpp.PointXYZRGBA, cpp.Normal] NormalEstimation_PointXYZRGBA_t
 * ctypedef shared_ptr[NormalEstimation[cpp.PointXYZ, cpp.Normal]] NormalEstimationPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[NormalEstimation[cpp.PointXYZI, cpp.Normal]] NormalEstimation_PointXYZI_Ptr_t
 * ctypedef shared_ptr[NormalEstimation[cpp.PointXYZRGB, cpp.Normal]] NormalEstimation_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::NormalEstimation<struct pcl::PointXYZ,struct pcl::Normal> >  __pyx_t_3pcl_12pcl_features_NormalEstimationPtr_t;

/* "pcl_features.pxd":1293
 * ctypedef NormalEstimation[cpp.PointXYZRGBA, cpp.Normal] NormalEstimation_PointXYZRGBA_t
 * ctypedef shared_ptr[NormalEstimation[cpp.PointXYZ, cpp.Normal]] NormalEstimationPtr_t
 * ctypedef shared_ptr[NormalEstimation[cpp.PointXYZI, cpp.Normal]] NormalEstimation_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[NormalEstimation[cpp.PointXYZRGB, cpp.Normal]] NormalEstimation_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[NormalEstimation[cpp.PointXYZRGBA, cpp.Normal]] NormalEstimation_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::NormalEstimation<struct pcl::PointXYZI,struct pcl::Normal> >  __pyx_t_3pcl_12pcl_features_NormalEstimation_PointXYZI_Ptr_t;

/* "pcl_features.pxd":1294
 * ctypedef shared_ptr[NormalEstimation[cpp.PointXYZ, cpp.Normal]] NormalEstimationPtr_t
 * ctypedef shared_ptr[NormalEstimation[cpp.PointXYZI, cpp.Normal]] NormalEstimation_PointXYZI_Ptr_t
 * ctypedef shared_ptr[NormalEstimation[cpp.PointXYZRGB, cpp.Normal]] NormalEstimation_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[NormalEstimation[cpp.PointXYZRGBA, cpp.Normal]] NormalEstimation_PointXYZRGBA_Ptr_t
 * ###
 */
typedef boost::shared_ptr<pcl::NormalEstimation<struct pcl::PointXYZRGB,struct pcl::Normal> >  __pyx_t_3pcl_12pcl_features_NormalEstimation_PointXYZRGB_Ptr_t;

/* "pcl_features.pxd":1295
 * ctypedef shared_ptr[NormalEstimation[cpp.PointXYZI, cpp.Normal]] NormalEstimation_PointXYZI_Ptr_t
 * ctypedef shared_ptr[NormalEstimation[cpp.PointXYZRGB, cpp.Normal]] NormalEstimation_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[NormalEstimation[cpp.PointXYZRGBA, cpp.Normal]] NormalEstimation_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::NormalEstimation<struct pcl::PointXYZRGBA,struct pcl::Normal> >  __pyx_t_3pcl_12pcl_features_NormalEstimation_PointXYZRGBA_Ptr_t;

/* "pcl_features.pxd":2760
 * 
 * 
 * ctypedef VFHEstimation[cpp.PointXYZ, cpp.Normal, cpp.VFHSignature308] VFHEstimation_t             # <<<<<<<<<<<<<<
 * ctypedef VFHEstimation[cpp.PointXYZI, cpp.Normal, cpp.VFHSignature308] VFHEstimation_PointXYZI_t
 * ctypedef VFHEstimation[cpp.PointXYZRGB, cpp.Normal, cpp.VFHSignature308] VFHEstimation_PointXYZRGB_t
 */
typedef pcl::VFHEstimation<struct pcl::PointXYZ,struct pcl::Normal,struct pcl::VFHSignature308>  __pyx_t_3pcl_12pcl_features_VFHEstimation_t;

/* "pcl_features.pxd":2761
 * 
 * ctypedef VFHEstimation[cpp.PointXYZ, cpp.Normal, cpp.VFHSignature308] VFHEstimation_t
 * ctypedef VFHEstimation[cpp.PointXYZI, cpp.Normal, cpp.VFHSignature308] VFHEstimation_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef VFHEstimation[cpp.PointXYZRGB, cpp.Normal, cpp.VFHSignature308] VFHEstimation_PointXYZRGB_t
 * ctypedef VFHEstimation[cpp.PointXYZRGBA, cpp.Normal, cpp.VFHSignature308] VFHEstimation_PointXYZRGBA_t
 */
typedef pcl::VFHEstimation<struct pcl::PointXYZI,struct pcl::Normal,struct pcl::VFHSignature308>  __pyx_t_3pcl_12pcl_features_VFHEstimation_PointXYZI_t;

/* "pcl_features.pxd":2762
 * ctypedef VFHEstimation[cpp.PointXYZ, cpp.Normal, cpp.VFHSignature308] VFHEstimation_t
 * ctypedef VFHEstimation[cpp.PointXYZI, cpp.Normal, cpp.VFHSignature308] VFHEstimation_PointXYZI_t
 * ctypedef VFHEstimation[cpp.PointXYZRGB, cpp.Normal, cpp.VFHSignature308] VFHEstimation_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef VFHEstimation[cpp.PointXYZRGBA, cpp.Normal, cpp.VFHSignature308] VFHEstimation_PointXYZRGBA_t
 * ###
 */
typedef pcl::VFHEstimation<struct pcl::PointXYZRGB,struct pcl::Normal,struct pcl::VFHSignature308>  __pyx_t_3pcl_12pcl_features_VFHEstimation_PointXYZRGB_t;

/* "pcl_features.pxd":2763
 * ctypedef VFHEstimation[cpp.PointXYZI, cpp.Normal, cpp.VFHSignature308] VFHEstimation_PointXYZI_t
 * ctypedef VFHEstimation[cpp.PointXYZRGB, cpp.Normal, cpp.VFHSignature308] VFHEstimation_PointXYZRGB_t
 * ctypedef VFHEstimation[cpp.PointXYZRGBA, cpp.Normal, cpp.VFHSignature308] VFHEstimation_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef pcl::VFHEstimation<struct pcl::PointXYZRGBA,struct pcl::Normal,struct pcl::VFHSignature308>  __pyx_t_3pcl_12pcl_features_VFHEstimation_PointXYZRGBA_t;

/* "pcl_sample_consensus.pxd":156
 * 
 * 
 * ctypedef SampleConsensusModel[cpp.PointXYZ] SampleConsensusModel_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModel[cpp.PointXYZI] SampleConsensusModel_PointXYZI_t
 * ctypedef SampleConsensusModel[cpp.PointXYZRGB] SampleConsensusModel_PointXYZRGB_t
 */
typedef pcl::SampleConsensusModel<struct pcl::PointXYZ>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModel_t;

/* "pcl_sample_consensus.pxd":157
 * 
 * ctypedef SampleConsensusModel[cpp.PointXYZ] SampleConsensusModel_t
 * ctypedef SampleConsensusModel[cpp.PointXYZI] SampleConsensusModel_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModel[cpp.PointXYZRGB] SampleConsensusModel_PointXYZRGB_t
 * ctypedef SampleConsensusModel[cpp.PointXYZRGBA] SampleConsensusModel_PointXYZRGBA_t
 */
typedef pcl::SampleConsensusModel<struct pcl::PointXYZI>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModel_PointXYZI_t;

/* "pcl_sample_consensus.pxd":158
 * ctypedef SampleConsensusModel[cpp.PointXYZ] SampleConsensusModel_t
 * ctypedef SampleConsensusModel[cpp.PointXYZI] SampleConsensusModel_PointXYZI_t
 * ctypedef SampleConsensusModel[cpp.PointXYZRGB] SampleConsensusModel_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModel[cpp.PointXYZRGBA] SampleConsensusModel_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModel[cpp.PointXYZ]] SampleConsensusModelPtr_t
 */
typedef pcl::SampleConsensusModel<struct pcl::PointXYZRGB>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModel_PointXYZRGB_t;

/* "pcl_sample_consensus.pxd":159
 * ctypedef SampleConsensusModel[cpp.PointXYZI] SampleConsensusModel_PointXYZI_t
 * ctypedef SampleConsensusModel[cpp.PointXYZRGB] SampleConsensusModel_PointXYZRGB_t
 * ctypedef SampleConsensusModel[cpp.PointXYZRGBA] SampleConsensusModel_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModel[cpp.PointXYZ]] SampleConsensusModelPtr_t
 * ctypedef shared_ptr[SampleConsensusModel[cpp.PointXYZI]] SampleConsensusModel_PointXYZI_Ptr_t
 */
typedef pcl::SampleConsensusModel<struct pcl::PointXYZRGBA>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModel_PointXYZRGBA_t;

/* "pcl_sample_consensus.pxd":160
 * ctypedef SampleConsensusModel[cpp.PointXYZRGB] SampleConsensusModel_PointXYZRGB_t
 * ctypedef SampleConsensusModel[cpp.PointXYZRGBA] SampleConsensusModel_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModel[cpp.PointXYZ]] SampleConsensusModelPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModel[cpp.PointXYZI]] SampleConsensusModel_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModel[cpp.PointXYZRGB]] SampleConsensusModel_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModel<struct pcl::PointXYZ> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelPtr_t;

/* "pcl_sample_consensus.pxd":161
 * ctypedef SampleConsensusModel[cpp.PointXYZRGBA] SampleConsensusModel_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModel[cpp.PointXYZ]] SampleConsensusModelPtr_t
 * ctypedef shared_ptr[SampleConsensusModel[cpp.PointXYZI]] SampleConsensusModel_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModel[cpp.PointXYZRGB]] SampleConsensusModel_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModel[cpp.PointXYZRGBA]] SampleConsensusModel_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModel<struct pcl::PointXYZI> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModel_PointXYZI_Ptr_t;

/* "pcl_sample_consensus.pxd":162
 * ctypedef shared_ptr[SampleConsensusModel[cpp.PointXYZ]] SampleConsensusModelPtr_t
 * ctypedef shared_ptr[SampleConsensusModel[cpp.PointXYZI]] SampleConsensusModel_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModel[cpp.PointXYZRGB]] SampleConsensusModel_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModel[cpp.PointXYZRGBA]] SampleConsensusModel_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModel[cpp.PointXYZ]] SampleConsensusModelConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModel<struct pcl::PointXYZRGB> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModel_PointXYZRGB_Ptr_t;

/* "pcl_sample_consensus.pxd":163
 * ctypedef shared_ptr[SampleConsensusModel[cpp.PointXYZI]] SampleConsensusModel_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModel[cpp.PointXYZRGB]] SampleConsensusModel_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModel[cpp.PointXYZRGBA]] SampleConsensusModel_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModel[cpp.PointXYZ]] SampleConsensusModelConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModel[cpp.PointXYZI]] SampleConsensusModel_PointXYZI_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModel<struct pcl::PointXYZRGBA> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModel_PointXYZRGBA_Ptr_t;

/* "pcl_sample_consensus.pxd":164
 * ctypedef shared_ptr[SampleConsensusModel[cpp.PointXYZRGB]] SampleConsensusModel_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModel[cpp.PointXYZRGBA]] SampleConsensusModel_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModel[cpp.PointXYZ]] SampleConsensusModelConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModel[cpp.PointXYZI]] SampleConsensusModel_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModel[cpp.PointXYZRGB]] SampleConsensusModel_PointXYZRGB_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModel<struct pcl::PointXYZ>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelConstPtr_t;

/* "pcl_sample_consensus.pxd":165
 * ctypedef shared_ptr[SampleConsensusModel[cpp.PointXYZRGBA]] SampleConsensusModel_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModel[cpp.PointXYZ]] SampleConsensusModelConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModel[cpp.PointXYZI]] SampleConsensusModel_PointXYZI_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModel[cpp.PointXYZRGB]] SampleConsensusModel_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModel[cpp.PointXYZRGBA]] SampleConsensusModel_PointXYZRGBA_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModel<struct pcl::PointXYZI>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModel_PointXYZI_ConstPtr_t;

/* "pcl_sample_consensus.pxd":166
 * ctypedef shared_ptr[const SampleConsensusModel[cpp.PointXYZ]] SampleConsensusModelConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModel[cpp.PointXYZI]] SampleConsensusModel_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModel[cpp.PointXYZRGB]] SampleConsensusModel_PointXYZRGB_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModel[cpp.PointXYZRGBA]] SampleConsensusModel_PointXYZRGBA_ConstPtr_t
 * ###
 */
typedef boost::shared_ptr<pcl::SampleConsensusModel<struct pcl::PointXYZRGB>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModel_PointXYZRGB_ConstPtr_t;

/* "pcl_sample_consensus.pxd":167
 * ctypedef shared_ptr[const SampleConsensusModel[cpp.PointXYZI]] SampleConsensusModel_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModel[cpp.PointXYZRGB]] SampleConsensusModel_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModel[cpp.PointXYZRGBA]] SampleConsensusModel_PointXYZRGBA_ConstPtr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::SampleConsensusModel<struct pcl::PointXYZRGBA>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModel_PointXYZRGBA_ConstPtr_t;

/* "pcl_sample_consensus.pxd":208
 * # ctypedef SampleConsensusModelFromNormals[cpp.PointXYZRGB, cpp.Normal] SampleConsensusModelFromNormals_PointXYZRGB_t
 * # ctypedef SampleConsensusModelFromNormals[cpp.PointXYZRGBA, cpp.Normal] SampleConsensusModelFromNormals_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelFromNormals[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelFromNormalsPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelFromNormals[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelFromNormals_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelFromNormals[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelFromNormals_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelFromNormals<struct pcl::PointXYZ,struct pcl::Normal> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelFromNormalsPtr_t;

/* "pcl_sample_consensus.pxd":209
 * # ctypedef SampleConsensusModelFromNormals[cpp.PointXYZRGBA, cpp.Normal] SampleConsensusModelFromNormals_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelFromNormals[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelFromNormalsPtr_t
 * ctypedef shared_ptr[SampleConsensusModelFromNormals[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelFromNormals_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelFromNormals[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelFromNormals_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelFromNormals[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelFromNormals_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelFromNormals<struct pcl::PointXYZI,struct pcl::Normal> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelFromNormals_PointXYZI_Ptr_t;

/* "pcl_sample_consensus.pxd":210
 * ctypedef shared_ptr[SampleConsensusModelFromNormals[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelFromNormalsPtr_t
 * ctypedef shared_ptr[SampleConsensusModelFromNormals[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelFromNormals_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelFromNormals[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelFromNormals_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelFromNormals[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelFromNormals_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelFromNormals[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelFromNormalsConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelFromNormals<struct pcl::PointXYZRGB,struct pcl::Normal> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelFromNormals_PointXYZRGB_Ptr_t;

/* "pcl_sample_consensus.pxd":211
 * ctypedef shared_ptr[SampleConsensusModelFromNormals[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelFromNormals_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelFromNormals[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelFromNormals_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelFromNormals[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelFromNormals_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelFromNormals[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelFromNormalsConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelFromNormals[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelFromNormals_PointXYZI_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelFromNormals<struct pcl::PointXYZRGBA,struct pcl::Normal> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelFromNormals_PointXYZRGBA_Ptr_t;

/* "pcl_sample_consensus.pxd":212
 * ctypedef shared_ptr[SampleConsensusModelFromNormals[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelFromNormals_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelFromNormals[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelFromNormals_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelFromNormals[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelFromNormalsConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelFromNormals[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelFromNormals_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelFromNormals[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelFromNormals_PointXYZRGB_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelFromNormals<struct pcl::PointXYZ,struct pcl::Normal>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelFromNormalsConstPtr_t;

/* "pcl_sample_consensus.pxd":213
 * ctypedef shared_ptr[SampleConsensusModelFromNormals[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelFromNormals_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelFromNormals[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelFromNormalsConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelFromNormals[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelFromNormals_PointXYZI_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelFromNormals[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelFromNormals_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelFromNormals[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelFromNormals_PointXYZRGBA_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelFromNormals<struct pcl::PointXYZI,struct pcl::Normal>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelFromNormals_PointXYZI_ConstPtr_t;

/* "pcl_sample_consensus.pxd":214
 * ctypedef shared_ptr[const SampleConsensusModelFromNormals[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelFromNormalsConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelFromNormals[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelFromNormals_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelFromNormals[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelFromNormals_PointXYZRGB_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelFromNormals[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelFromNormals_PointXYZRGBA_ConstPtr_t
 * ###
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelFromNormals<struct pcl::PointXYZRGB,struct pcl::Normal>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelFromNormals_PointXYZRGB_ConstPtr_t;

/* "pcl_sample_consensus.pxd":215
 * ctypedef shared_ptr[const SampleConsensusModelFromNormals[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelFromNormals_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelFromNormals[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelFromNormals_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelFromNormals[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelFromNormals_PointXYZRGBA_ConstPtr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelFromNormals<struct pcl::PointXYZRGBA,struct pcl::Normal>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelFromNormals_PointXYZRGBA_ConstPtr_t;

/* "pcl_sample_consensus.pxd":290
 * 
 * 
 * ctypedef SampleConsensus[cpp.PointXYZ] SampleConsensus_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensus[cpp.PointXYZI] SampleConsensus_PointXYZI_t
 * ctypedef SampleConsensus[cpp.PointXYZRGB] SampleConsensus_PointXYZRGB_t
 */
typedef pcl::SampleConsensus<struct pcl::PointXYZ>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensus_t;

/* "pcl_sample_consensus.pxd":291
 * 
 * ctypedef SampleConsensus[cpp.PointXYZ] SampleConsensus_t
 * ctypedef SampleConsensus[cpp.PointXYZI] SampleConsensus_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensus[cpp.PointXYZRGB] SampleConsensus_PointXYZRGB_t
 * ctypedef SampleConsensus[cpp.PointXYZRGBA] SampleConsensus_PointXYZRGBA_t
 */
typedef pcl::SampleConsensus<struct pcl::PointXYZI>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensus_PointXYZI_t;

/* "pcl_sample_consensus.pxd":292
 * ctypedef SampleConsensus[cpp.PointXYZ] SampleConsensus_t
 * ctypedef SampleConsensus[cpp.PointXYZI] SampleConsensus_PointXYZI_t
 * ctypedef SampleConsensus[cpp.PointXYZRGB] SampleConsensus_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensus[cpp.PointXYZRGBA] SampleConsensus_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensus[cpp.PointXYZ]] SampleConsensusPtr_t
 */
typedef pcl::SampleConsensus<struct pcl::PointXYZRGB>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensus_PointXYZRGB_t;

/* "pcl_sample_consensus.pxd":293
 * ctypedef SampleConsensus[cpp.PointXYZI] SampleConsensus_PointXYZI_t
 * ctypedef SampleConsensus[cpp.PointXYZRGB] SampleConsensus_PointXYZRGB_t
 * ctypedef SampleConsensus[cpp.PointXYZRGBA] SampleConsensus_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensus[cpp.PointXYZ]] SampleConsensusPtr_t
 * ctypedef shared_ptr[SampleConsensus[cpp.PointXYZI]] SampleConsensus_PointXYZI_Ptr_t
 */
typedef pcl::SampleConsensus<struct pcl::PointXYZRGBA>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensus_PointXYZRGBA_t;

/* "pcl_sample_consensus.pxd":294
 * ctypedef SampleConsensus[cpp.PointXYZRGB] SampleConsensus_PointXYZRGB_t
 * ctypedef SampleConsensus[cpp.PointXYZRGBA] SampleConsensus_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensus[cpp.PointXYZ]] SampleConsensusPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensus[cpp.PointXYZI]] SampleConsensus_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensus[cpp.PointXYZRGB]] SampleConsensus_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensus<struct pcl::PointXYZ> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusPtr_t;

/* "pcl_sample_consensus.pxd":295
 * ctypedef SampleConsensus[cpp.PointXYZRGBA] SampleConsensus_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensus[cpp.PointXYZ]] SampleConsensusPtr_t
 * ctypedef shared_ptr[SampleConsensus[cpp.PointXYZI]] SampleConsensus_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensus[cpp.PointXYZRGB]] SampleConsensus_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensus[cpp.PointXYZRGBA]] SampleConsensus_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensus<struct pcl::PointXYZI> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensus_PointXYZI_Ptr_t;

/* "pcl_sample_consensus.pxd":296
 * ctypedef shared_ptr[SampleConsensus[cpp.PointXYZ]] SampleConsensusPtr_t
 * ctypedef shared_ptr[SampleConsensus[cpp.PointXYZI]] SampleConsensus_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensus[cpp.PointXYZRGB]] SampleConsensus_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensus[cpp.PointXYZRGBA]] SampleConsensus_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensus[cpp.PointXYZ]] SampleConsensusConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensus<struct pcl::PointXYZRGB> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensus_PointXYZRGB_Ptr_t;

/* "pcl_sample_consensus.pxd":297
 * ctypedef shared_ptr[SampleConsensus[cpp.PointXYZI]] SampleConsensus_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensus[cpp.PointXYZRGB]] SampleConsensus_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensus[cpp.PointXYZRGBA]] SampleConsensus_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensus[cpp.PointXYZ]] SampleConsensusConstPtr_t
 * ctypedef shared_ptr[const SampleConsensus[cpp.PointXYZI]] SampleConsensus_PointXYZI_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensus<struct pcl::PointXYZRGBA> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensus_PointXYZRGBA_Ptr_t;

/* "pcl_sample_consensus.pxd":298
 * ctypedef shared_ptr[SampleConsensus[cpp.PointXYZRGB]] SampleConsensus_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensus[cpp.PointXYZRGBA]] SampleConsensus_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensus[cpp.PointXYZ]] SampleConsensusConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensus[cpp.PointXYZI]] SampleConsensus_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensus[cpp.PointXYZRGB]] SampleConsensus_PointXYZRGB_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensus<struct pcl::PointXYZ>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusConstPtr_t;

/* "pcl_sample_consensus.pxd":299
 * ctypedef shared_ptr[SampleConsensus[cpp.PointXYZRGBA]] SampleConsensus_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensus[cpp.PointXYZ]] SampleConsensusConstPtr_t
 * ctypedef shared_ptr[const SampleConsensus[cpp.PointXYZI]] SampleConsensus_PointXYZI_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensus[cpp.PointXYZRGB]] SampleConsensus_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensus[cpp.PointXYZRGBA]] SampleConsensus_PointXYZRGBA_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensus<struct pcl::PointXYZI>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensus_PointXYZI_ConstPtr_t;

/* "pcl_sample_consensus.pxd":300
 * ctypedef shared_ptr[const SampleConsensus[cpp.PointXYZ]] SampleConsensusConstPtr_t
 * ctypedef shared_ptr[const SampleConsensus[cpp.PointXYZI]] SampleConsensus_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensus[cpp.PointXYZRGB]] SampleConsensus_PointXYZRGB_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensus[cpp.PointXYZRGBA]] SampleConsensus_PointXYZRGBA_ConstPtr_t
 * ###
 */
typedef boost::shared_ptr<pcl::SampleConsensus<struct pcl::PointXYZRGB>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensus_PointXYZRGB_ConstPtr_t;

/* "pcl_sample_consensus.pxd":301
 * ctypedef shared_ptr[const SampleConsensus[cpp.PointXYZI]] SampleConsensus_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensus[cpp.PointXYZRGB]] SampleConsensus_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensus[cpp.PointXYZRGBA]] SampleConsensus_PointXYZRGBA_ConstPtr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::SampleConsensus<struct pcl::PointXYZRGBA>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensus_PointXYZRGBA_ConstPtr_t;

/* "pcl_sample_consensus.pxd":494
 * 
 * 
 * ctypedef SampleConsensusModelPlane[cpp.PointXYZ] SampleConsensusModelPlane_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelPlane[cpp.PointXYZI] SampleConsensusModelPlane_PointXYZI_t
 * ctypedef SampleConsensusModelPlane[cpp.PointXYZRGB] SampleConsensusModelPlane_PointXYZRGB_t
 */
typedef pcl::SampleConsensusModelPlane<struct pcl::PointXYZ>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelPlane_t;

/* "pcl_sample_consensus.pxd":495
 * 
 * ctypedef SampleConsensusModelPlane[cpp.PointXYZ] SampleConsensusModelPlane_t
 * ctypedef SampleConsensusModelPlane[cpp.PointXYZI] SampleConsensusModelPlane_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelPlane[cpp.PointXYZRGB] SampleConsensusModelPlane_PointXYZRGB_t
 * ctypedef SampleConsensusModelPlane[cpp.PointXYZRGBA] SampleConsensusModelPlane_PointXYZRGBA_t
 */
typedef pcl::SampleConsensusModelPlane<struct pcl::PointXYZI>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelPlane_PointXYZI_t;

/* "pcl_sample_consensus.pxd":496
 * ctypedef SampleConsensusModelPlane[cpp.PointXYZ] SampleConsensusModelPlane_t
 * ctypedef SampleConsensusModelPlane[cpp.PointXYZI] SampleConsensusModelPlane_PointXYZI_t
 * ctypedef SampleConsensusModelPlane[cpp.PointXYZRGB] SampleConsensusModelPlane_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelPlane[cpp.PointXYZRGBA] SampleConsensusModelPlane_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelPlane[cpp.PointXYZ]] SampleConsensusModelPlanePtr_t
 */
typedef pcl::SampleConsensusModelPlane<struct pcl::PointXYZRGB>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelPlane_PointXYZRGB_t;

/* "pcl_sample_consensus.pxd":497
 * ctypedef SampleConsensusModelPlane[cpp.PointXYZI] SampleConsensusModelPlane_PointXYZI_t
 * ctypedef SampleConsensusModelPlane[cpp.PointXYZRGB] SampleConsensusModelPlane_PointXYZRGB_t
 * ctypedef SampleConsensusModelPlane[cpp.PointXYZRGBA] SampleConsensusModelPlane_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelPlane[cpp.PointXYZ]] SampleConsensusModelPlanePtr_t
 * ctypedef shared_ptr[SampleConsensusModelPlane[cpp.PointXYZI]] SampleConsensusModelPlane_PointXYZI_Ptr_t
 */
typedef pcl::SampleConsensusModelPlane<struct pcl::PointXYZRGBA>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelPlane_PointXYZRGBA_t;

/* "pcl_sample_consensus.pxd":498
 * ctypedef SampleConsensusModelPlane[cpp.PointXYZRGB] SampleConsensusModelPlane_PointXYZRGB_t
 * ctypedef SampleConsensusModelPlane[cpp.PointXYZRGBA] SampleConsensusModelPlane_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelPlane[cpp.PointXYZ]] SampleConsensusModelPlanePtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelPlane[cpp.PointXYZI]] SampleConsensusModelPlane_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelPlane[cpp.PointXYZRGB]] SampleConsensusModelPlane_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelPlane<struct pcl::PointXYZ> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelPlanePtr_t;

/* "pcl_sample_consensus.pxd":499
 * ctypedef SampleConsensusModelPlane[cpp.PointXYZRGBA] SampleConsensusModelPlane_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelPlane[cpp.PointXYZ]] SampleConsensusModelPlanePtr_t
 * ctypedef shared_ptr[SampleConsensusModelPlane[cpp.PointXYZI]] SampleConsensusModelPlane_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelPlane[cpp.PointXYZRGB]] SampleConsensusModelPlane_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelPlane[cpp.PointXYZRGBA]] SampleConsensusModelPlane_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelPlane<struct pcl::PointXYZI> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelPlane_PointXYZI_Ptr_t;

/* "pcl_sample_consensus.pxd":500
 * ctypedef shared_ptr[SampleConsensusModelPlane[cpp.PointXYZ]] SampleConsensusModelPlanePtr_t
 * ctypedef shared_ptr[SampleConsensusModelPlane[cpp.PointXYZI]] SampleConsensusModelPlane_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelPlane[cpp.PointXYZRGB]] SampleConsensusModelPlane_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelPlane[cpp.PointXYZRGBA]] SampleConsensusModelPlane_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelPlane[cpp.PointXYZ]] SampleConsensusModelPlaneConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelPlane<struct pcl::PointXYZRGB> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelPlane_PointXYZRGB_Ptr_t;

/* "pcl_sample_consensus.pxd":501
 * ctypedef shared_ptr[SampleConsensusModelPlane[cpp.PointXYZI]] SampleConsensusModelPlane_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelPlane[cpp.PointXYZRGB]] SampleConsensusModelPlane_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelPlane[cpp.PointXYZRGBA]] SampleConsensusModelPlane_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelPlane[cpp.PointXYZ]] SampleConsensusModelPlaneConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelPlane[cpp.PointXYZI]] SampleConsensusModelPlane_PointXYZI_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelPlane<struct pcl::PointXYZRGBA> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelPlane_PointXYZRGBA_Ptr_t;

/* "pcl_sample_consensus.pxd":502
 * ctypedef shared_ptr[SampleConsensusModelPlane[cpp.PointXYZRGB]] SampleConsensusModelPlane_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelPlane[cpp.PointXYZRGBA]] SampleConsensusModelPlane_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelPlane[cpp.PointXYZ]] SampleConsensusModelPlaneConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelPlane[cpp.PointXYZI]] SampleConsensusModelPlane_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelPlane[cpp.PointXYZRGB]] SampleConsensusModelPlane_PointXYZRGB_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelPlane<struct pcl::PointXYZ>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelPlaneConstPtr_t;

/* "pcl_sample_consensus.pxd":503
 * ctypedef shared_ptr[SampleConsensusModelPlane[cpp.PointXYZRGBA]] SampleConsensusModelPlane_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelPlane[cpp.PointXYZ]] SampleConsensusModelPlaneConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelPlane[cpp.PointXYZI]] SampleConsensusModelPlane_PointXYZI_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelPlane[cpp.PointXYZRGB]] SampleConsensusModelPlane_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelPlane[cpp.PointXYZRGBA]] SampleConsensusModelPlane_PointXYZRGBA_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelPlane<struct pcl::PointXYZI>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelPlane_PointXYZI_ConstPtr_t;

/* "pcl_sample_consensus.pxd":504
 * ctypedef shared_ptr[const SampleConsensusModelPlane[cpp.PointXYZ]] SampleConsensusModelPlaneConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelPlane[cpp.PointXYZI]] SampleConsensusModelPlane_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelPlane[cpp.PointXYZRGB]] SampleConsensusModelPlane_PointXYZRGB_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelPlane[cpp.PointXYZRGBA]] SampleConsensusModelPlane_PointXYZRGBA_ConstPtr_t
 * ###
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelPlane<struct pcl::PointXYZRGB>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelPlane_PointXYZRGB_ConstPtr_t;

/* "pcl_sample_consensus.pxd":505
 * ctypedef shared_ptr[const SampleConsensusModelPlane[cpp.PointXYZI]] SampleConsensusModelPlane_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelPlane[cpp.PointXYZRGB]] SampleConsensusModelPlane_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelPlane[cpp.PointXYZRGBA]] SampleConsensusModelPlane_PointXYZRGBA_ConstPtr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelPlane<struct pcl::PointXYZRGBA>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelPlane_PointXYZRGBA_ConstPtr_t;

/* "pcl_sample_consensus.pxd":622
 * 
 * 
 * ctypedef SampleConsensusModelSphere[cpp.PointXYZ] SampleConsensusModelSphere_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelSphere[cpp.PointXYZI] SampleConsensusModelSphere_PointXYZI_t
 * ctypedef SampleConsensusModelSphere[cpp.PointXYZRGB] SampleConsensusModelSphere_PointXYZRGB_t
 */
typedef pcl::SampleConsensusModelSphere<struct pcl::PointXYZ>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelSphere_t;

/* "pcl_sample_consensus.pxd":623
 * 
 * ctypedef SampleConsensusModelSphere[cpp.PointXYZ] SampleConsensusModelSphere_t
 * ctypedef SampleConsensusModelSphere[cpp.PointXYZI] SampleConsensusModelSphere_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelSphere[cpp.PointXYZRGB] SampleConsensusModelSphere_PointXYZRGB_t
 * ctypedef SampleConsensusModelSphere[cpp.PointXYZRGBA] SampleConsensusModelSphere_PointXYZRGBA_t
 */
typedef pcl::SampleConsensusModelSphere<struct pcl::PointXYZI>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelSphere_PointXYZI_t;

/* "pcl_sample_consensus.pxd":624
 * ctypedef SampleConsensusModelSphere[cpp.PointXYZ] SampleConsensusModelSphere_t
 * ctypedef SampleConsensusModelSphere[cpp.PointXYZI] SampleConsensusModelSphere_PointXYZI_t
 * ctypedef SampleConsensusModelSphere[cpp.PointXYZRGB] SampleConsensusModelSphere_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelSphere[cpp.PointXYZRGBA] SampleConsensusModelSphere_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelSphere[cpp.PointXYZ]] SampleConsensusModelSpherePtr_t
 */
typedef pcl::SampleConsensusModelSphere<struct pcl::PointXYZRGB>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelSphere_PointXYZRGB_t;

/* "pcl_sample_consensus.pxd":625
 * ctypedef SampleConsensusModelSphere[cpp.PointXYZI] SampleConsensusModelSphere_PointXYZI_t
 * ctypedef SampleConsensusModelSphere[cpp.PointXYZRGB] SampleConsensusModelSphere_PointXYZRGB_t
 * ctypedef SampleConsensusModelSphere[cpp.PointXYZRGBA] SampleConsensusModelSphere_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelSphere[cpp.PointXYZ]] SampleConsensusModelSpherePtr_t
 * ctypedef shared_ptr[SampleConsensusModelSphere[cpp.PointXYZI]] SampleConsensusModelSphere_PointXYZI_Ptr_t
 */
typedef pcl::SampleConsensusModelSphere<struct pcl::PointXYZRGBA>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelSphere_PointXYZRGBA_t;

/* "pcl_sample_consensus.pxd":626
 * ctypedef SampleConsensusModelSphere[cpp.PointXYZRGB] SampleConsensusModelSphere_PointXYZRGB_t
 * ctypedef SampleConsensusModelSphere[cpp.PointXYZRGBA] SampleConsensusModelSphere_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelSphere[cpp.PointXYZ]] SampleConsensusModelSpherePtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelSphere[cpp.PointXYZI]] SampleConsensusModelSphere_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelSphere[cpp.PointXYZRGB]] SampleConsensusModelSphere_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelSphere<struct pcl::PointXYZ> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelSpherePtr_t;

/* "pcl_sample_consensus.pxd":627
 * ctypedef SampleConsensusModelSphere[cpp.PointXYZRGBA] SampleConsensusModelSphere_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelSphere[cpp.PointXYZ]] SampleConsensusModelSpherePtr_t
 * ctypedef shared_ptr[SampleConsensusModelSphere[cpp.PointXYZI]] SampleConsensusModelSphere_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelSphere[cpp.PointXYZRGB]] SampleConsensusModelSphere_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelSphere[cpp.PointXYZRGBA]] SampleConsensusModelSphere_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelSphere<struct pcl::PointXYZI> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelSphere_PointXYZI_Ptr_t;

/* "pcl_sample_consensus.pxd":628
 * ctypedef shared_ptr[SampleConsensusModelSphere[cpp.PointXYZ]] SampleConsensusModelSpherePtr_t
 * ctypedef shared_ptr[SampleConsensusModelSphere[cpp.PointXYZI]] SampleConsensusModelSphere_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelSphere[cpp.PointXYZRGB]] SampleConsensusModelSphere_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelSphere[cpp.PointXYZRGBA]] SampleConsensusModelSphere_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelSphere[cpp.PointXYZ]] SampleConsensusModelSphereConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelSphere<struct pcl::PointXYZRGB> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelSphere_PointXYZRGB_Ptr_t;

/* "pcl_sample_consensus.pxd":629
 * ctypedef shared_ptr[SampleConsensusModelSphere[cpp.PointXYZI]] SampleConsensusModelSphere_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelSphere[cpp.PointXYZRGB]] SampleConsensusModelSphere_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelSphere[cpp.PointXYZRGBA]] SampleConsensusModelSphere_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelSphere[cpp.PointXYZ]] SampleConsensusModelSphereConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelSphere[cpp.PointXYZI]] SampleConsensusModelSphere_PointXYZI_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelSphere<struct pcl::PointXYZRGBA> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelSphere_PointXYZRGBA_Ptr_t;

/* "pcl_sample_consensus.pxd":630
 * ctypedef shared_ptr[SampleConsensusModelSphere[cpp.PointXYZRGB]] SampleConsensusModelSphere_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelSphere[cpp.PointXYZRGBA]] SampleConsensusModelSphere_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelSphere[cpp.PointXYZ]] SampleConsensusModelSphereConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelSphere[cpp.PointXYZI]] SampleConsensusModelSphere_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelSphere[cpp.PointXYZRGB]] SampleConsensusModelSphere_PointXYZRGB_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelSphere<struct pcl::PointXYZ>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelSphereConstPtr_t;

/* "pcl_sample_consensus.pxd":631
 * ctypedef shared_ptr[SampleConsensusModelSphere[cpp.PointXYZRGBA]] SampleConsensusModelSphere_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelSphere[cpp.PointXYZ]] SampleConsensusModelSphereConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelSphere[cpp.PointXYZI]] SampleConsensusModelSphere_PointXYZI_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelSphere[cpp.PointXYZRGB]] SampleConsensusModelSphere_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelSphere[cpp.PointXYZRGBA]] SampleConsensusModelSphere_PointXYZRGBA_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelSphere<struct pcl::PointXYZI>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelSphere_PointXYZI_ConstPtr_t;

/* "pcl_sample_consensus.pxd":632
 * ctypedef shared_ptr[const SampleConsensusModelSphere[cpp.PointXYZ]] SampleConsensusModelSphereConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelSphere[cpp.PointXYZI]] SampleConsensusModelSphere_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelSphere[cpp.PointXYZRGB]] SampleConsensusModelSphere_PointXYZRGB_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelSphere[cpp.PointXYZRGBA]] SampleConsensusModelSphere_PointXYZRGBA_ConstPtr_t
 * ###
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelSphere<struct pcl::PointXYZRGB>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelSphere_PointXYZRGB_ConstPtr_t;

/* "pcl_sample_consensus.pxd":633
 * ctypedef shared_ptr[const SampleConsensusModelSphere[cpp.PointXYZI]] SampleConsensusModelSphere_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelSphere[cpp.PointXYZRGB]] SampleConsensusModelSphere_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelSphere[cpp.PointXYZRGBA]] SampleConsensusModelSphere_PointXYZRGBA_ConstPtr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelSphere<struct pcl::PointXYZRGBA>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelSphere_PointXYZRGBA_ConstPtr_t;

/* "pcl_sample_consensus.pxd":786
 * 
 * 
 * ctypedef RandomSampleConsensus[cpp.PointXYZ] RandomSampleConsensus_t             # <<<<<<<<<<<<<<
 * ctypedef RandomSampleConsensus[cpp.PointXYZI] RandomSampleConsensus_PointXYZI_t
 * ctypedef RandomSampleConsensus[cpp.PointXYZRGB] RandomSampleConsensus_PointXYZRGB_t
 */
typedef pcl::RandomSampleConsensus<struct pcl::PointXYZ>  __pyx_t_3pcl_20pcl_sample_consensus_RandomSampleConsensus_t;

/* "pcl_sample_consensus.pxd":787
 * 
 * ctypedef RandomSampleConsensus[cpp.PointXYZ] RandomSampleConsensus_t
 * ctypedef RandomSampleConsensus[cpp.PointXYZI] RandomSampleConsensus_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef RandomSampleConsensus[cpp.PointXYZRGB] RandomSampleConsensus_PointXYZRGB_t
 * ctypedef RandomSampleConsensus[cpp.PointXYZRGBA] RandomSampleConsensus_PointXYZRGBA_t
 */
typedef pcl::RandomSampleConsensus<struct pcl::PointXYZI>  __pyx_t_3pcl_20pcl_sample_consensus_RandomSampleConsensus_PointXYZI_t;

/* "pcl_sample_consensus.pxd":788
 * ctypedef RandomSampleConsensus[cpp.PointXYZ] RandomSampleConsensus_t
 * ctypedef RandomSampleConsensus[cpp.PointXYZI] RandomSampleConsensus_PointXYZI_t
 * ctypedef RandomSampleConsensus[cpp.PointXYZRGB] RandomSampleConsensus_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef RandomSampleConsensus[cpp.PointXYZRGBA] RandomSampleConsensus_PointXYZRGBA_t
 * ctypedef shared_ptr[RandomSampleConsensus[cpp.PointXYZ]] RandomSampleConsensusPtr_t
 */
typedef pcl::RandomSampleConsensus<struct pcl::PointXYZRGB>  __pyx_t_3pcl_20pcl_sample_consensus_RandomSampleConsensus_PointXYZRGB_t;

/* "pcl_sample_consensus.pxd":789
 * ctypedef RandomSampleConsensus[cpp.PointXYZI] RandomSampleConsensus_PointXYZI_t
 * ctypedef RandomSampleConsensus[cpp.PointXYZRGB] RandomSampleConsensus_PointXYZRGB_t
 * ctypedef RandomSampleConsensus[cpp.PointXYZRGBA] RandomSampleConsensus_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[RandomSampleConsensus[cpp.PointXYZ]] RandomSampleConsensusPtr_t
 * ctypedef shared_ptr[RandomSampleConsensus[cpp.PointXYZI]] RandomSampleConsensus_PointXYZI_Ptr_t
 */
typedef pcl::RandomSampleConsensus<struct pcl::PointXYZRGBA>  __pyx_t_3pcl_20pcl_sample_consensus_RandomSampleConsensus_PointXYZRGBA_t;

/* "pcl_sample_consensus.pxd":790
 * ctypedef RandomSampleConsensus[cpp.PointXYZRGB] RandomSampleConsensus_PointXYZRGB_t
 * ctypedef RandomSampleConsensus[cpp.PointXYZRGBA] RandomSampleConsensus_PointXYZRGBA_t
 * ctypedef shared_ptr[RandomSampleConsensus[cpp.PointXYZ]] RandomSampleConsensusPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[RandomSampleConsensus[cpp.PointXYZI]] RandomSampleConsensus_PointXYZI_Ptr_t
 * ctypedef shared_ptr[RandomSampleConsensus[cpp.PointXYZRGB]] RandomSampleConsensus_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::RandomSampleConsensus<struct pcl::PointXYZ> >  __pyx_t_3pcl_20pcl_sample_consensus_RandomSampleConsensusPtr_t;

/* "pcl_sample_consensus.pxd":791
 * ctypedef RandomSampleConsensus[cpp.PointXYZRGBA] RandomSampleConsensus_PointXYZRGBA_t
 * ctypedef shared_ptr[RandomSampleConsensus[cpp.PointXYZ]] RandomSampleConsensusPtr_t
 * ctypedef shared_ptr[RandomSampleConsensus[cpp.PointXYZI]] RandomSampleConsensus_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[RandomSampleConsensus[cpp.PointXYZRGB]] RandomSampleConsensus_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[RandomSampleConsensus[cpp.PointXYZRGBA]] RandomSampleConsensus_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::RandomSampleConsensus<struct pcl::PointXYZI> >  __pyx_t_3pcl_20pcl_sample_consensus_RandomSampleConsensus_PointXYZI_Ptr_t;

/* "pcl_sample_consensus.pxd":792
 * ctypedef shared_ptr[RandomSampleConsensus[cpp.PointXYZ]] RandomSampleConsensusPtr_t
 * ctypedef shared_ptr[RandomSampleConsensus[cpp.PointXYZI]] RandomSampleConsensus_PointXYZI_Ptr_t
 * ctypedef shared_ptr[RandomSampleConsensus[cpp.PointXYZRGB]] RandomSampleConsensus_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[RandomSampleConsensus[cpp.PointXYZRGBA]] RandomSampleConsensus_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const RandomSampleConsensus[cpp.PointXYZ]] RandomSampleConsensusConstPtr_t
 */
typedef boost::shared_ptr<pcl::RandomSampleConsensus<struct pcl::PointXYZRGB> >  __pyx_t_3pcl_20pcl_sample_consensus_RandomSampleConsensus_PointXYZRGB_Ptr_t;

/* "pcl_sample_consensus.pxd":793
 * ctypedef shared_ptr[RandomSampleConsensus[cpp.PointXYZI]] RandomSampleConsensus_PointXYZI_Ptr_t
 * ctypedef shared_ptr[RandomSampleConsensus[cpp.PointXYZRGB]] RandomSampleConsensus_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[RandomSampleConsensus[cpp.PointXYZRGBA]] RandomSampleConsensus_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const RandomSampleConsensus[cpp.PointXYZ]] RandomSampleConsensusConstPtr_t
 * ctypedef shared_ptr[const RandomSampleConsensus[cpp.PointXYZI]] RandomSampleConsensus_PointXYZI_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::RandomSampleConsensus<struct pcl::PointXYZRGBA> >  __pyx_t_3pcl_20pcl_sample_consensus_RandomSampleConsensus_PointXYZRGBA_Ptr_t;

/* "pcl_sample_consensus.pxd":794
 * ctypedef shared_ptr[RandomSampleConsensus[cpp.PointXYZRGB]] RandomSampleConsensus_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[RandomSampleConsensus[cpp.PointXYZRGBA]] RandomSampleConsensus_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const RandomSampleConsensus[cpp.PointXYZ]] RandomSampleConsensusConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const RandomSampleConsensus[cpp.PointXYZI]] RandomSampleConsensus_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const RandomSampleConsensus[cpp.PointXYZRGB]] RandomSampleConsensus_PointXYZRGB_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::RandomSampleConsensus<struct pcl::PointXYZ>  const >  __pyx_t_3pcl_20pcl_sample_consensus_RandomSampleConsensusConstPtr_t;

/* "pcl_sample_consensus.pxd":795
 * ctypedef shared_ptr[RandomSampleConsensus[cpp.PointXYZRGBA]] RandomSampleConsensus_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const RandomSampleConsensus[cpp.PointXYZ]] RandomSampleConsensusConstPtr_t
 * ctypedef shared_ptr[const RandomSampleConsensus[cpp.PointXYZI]] RandomSampleConsensus_PointXYZI_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const RandomSampleConsensus[cpp.PointXYZRGB]] RandomSampleConsensus_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const RandomSampleConsensus[cpp.PointXYZRGBA]] RandomSampleConsensus_PointXYZRGBA_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::RandomSampleConsensus<struct pcl::PointXYZI>  const >  __pyx_t_3pcl_20pcl_sample_consensus_RandomSampleConsensus_PointXYZI_ConstPtr_t;

/* "pcl_sample_consensus.pxd":796
 * ctypedef shared_ptr[const RandomSampleConsensus[cpp.PointXYZ]] RandomSampleConsensusConstPtr_t
 * ctypedef shared_ptr[const RandomSampleConsensus[cpp.PointXYZI]] RandomSampleConsensus_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const RandomSampleConsensus[cpp.PointXYZRGB]] RandomSampleConsensus_PointXYZRGB_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const RandomSampleConsensus[cpp.PointXYZRGBA]] RandomSampleConsensus_PointXYZRGBA_ConstPtr_t
 * ###
 */
typedef boost::shared_ptr<pcl::RandomSampleConsensus<struct pcl::PointXYZRGB>  const >  __pyx_t_3pcl_20pcl_sample_consensus_RandomSampleConsensus_PointXYZRGB_ConstPtr_t;

/* "pcl_sample_consensus.pxd":797
 * ctypedef shared_ptr[const RandomSampleConsensus[cpp.PointXYZI]] RandomSampleConsensus_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const RandomSampleConsensus[cpp.PointXYZRGB]] RandomSampleConsensus_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const RandomSampleConsensus[cpp.PointXYZRGBA]] RandomSampleConsensus_PointXYZRGBA_ConstPtr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::RandomSampleConsensus<struct pcl::PointXYZRGBA>  const >  __pyx_t_3pcl_20pcl_sample_consensus_RandomSampleConsensus_PointXYZRGBA_ConstPtr_t;

/* "pcl_sample_consensus.pxd":838
 * 
 * 
 * ctypedef RandomizedMEstimatorSampleConsensus[cpp.PointXYZ] RandomizedMEstimatorSampleConsensus_t             # <<<<<<<<<<<<<<
 * ctypedef RandomizedMEstimatorSampleConsensus[cpp.PointXYZI] RandomizedMEstimatorSampleConsensus_PointXYZI_t
 * ctypedef RandomizedMEstimatorSampleConsensus[cpp.PointXYZRGB] RandomizedMEstimatorSampleConsensus_PointXYZRGB_t
 */
typedef pcl::RandomizedMEstimatorSampleConsensus<struct pcl::PointXYZ>  __pyx_t_3pcl_20pcl_sample_consensus_RandomizedMEstimatorSampleConsensus_t;

/* "pcl_sample_consensus.pxd":839
 * 
 * ctypedef RandomizedMEstimatorSampleConsensus[cpp.PointXYZ] RandomizedMEstimatorSampleConsensus_t
 * ctypedef RandomizedMEstimatorSampleConsensus[cpp.PointXYZI] RandomizedMEstimatorSampleConsensus_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef RandomizedMEstimatorSampleConsensus[cpp.PointXYZRGB] RandomizedMEstimatorSampleConsensus_PointXYZRGB_t
 * ctypedef RandomizedMEstimatorSampleConsensus[cpp.PointXYZRGBA] RandomizedMEstimatorSampleConsensus_PointXYZRGBA_t
 */
typedef pcl::RandomizedMEstimatorSampleConsensus<struct pcl::PointXYZI>  __pyx_t_3pcl_20pcl_sample_consensus_RandomizedMEstimatorSampleConsensus_PointXYZI_t;

/* "pcl_sample_consensus.pxd":840
 * ctypedef RandomizedMEstimatorSampleConsensus[cpp.PointXYZ] RandomizedMEstimatorSampleConsensus_t
 * ctypedef RandomizedMEstimatorSampleConsensus[cpp.PointXYZI] RandomizedMEstimatorSampleConsensus_PointXYZI_t
 * ctypedef RandomizedMEstimatorSampleConsensus[cpp.PointXYZRGB] RandomizedMEstimatorSampleConsensus_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef RandomizedMEstimatorSampleConsensus[cpp.PointXYZRGBA] RandomizedMEstimatorSampleConsensus_PointXYZRGBA_t
 * ctypedef shared_ptr[RandomizedMEstimatorSampleConsensus[cpp.PointXYZ]] RandomizedMEstimatorSampleConsensusPtr_t
 */
typedef pcl::RandomizedMEstimatorSampleConsensus<struct pcl::PointXYZRGB>  __pyx_t_3pcl_20pcl_sample_consensus_RandomizedMEstimatorSampleConsensus_PointXYZRGB_t;

/* "pcl_sample_consensus.pxd":841
 * ctypedef RandomizedMEstimatorSampleConsensus[cpp.PointXYZI] RandomizedMEstimatorSampleConsensus_PointXYZI_t
 * ctypedef RandomizedMEstimatorSampleConsensus[cpp.PointXYZRGB] RandomizedMEstimatorSampleConsensus_PointXYZRGB_t
 * ctypedef RandomizedMEstimatorSampleConsensus[cpp.PointXYZRGBA] RandomizedMEstimatorSampleConsensus_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[RandomizedMEstimatorSampleConsensus[cpp.PointXYZ]] RandomizedMEstimatorSampleConsensusPtr_t
 * ctypedef shared_ptr[RandomizedMEstimatorSampleConsensus[cpp.PointXYZI]] RandomizedMEstimatorSampleConsensus_PointXYZI_Ptr_t
 */
typedef pcl::RandomizedMEstimatorSampleConsensus<struct pcl::PointXYZRGBA>  __pyx_t_3pcl_20pcl_sample_consensus_RandomizedMEstimatorSampleConsensus_PointXYZRGBA_t;

/* "pcl_sample_consensus.pxd":842
 * ctypedef RandomizedMEstimatorSampleConsensus[cpp.PointXYZRGB] RandomizedMEstimatorSampleConsensus_PointXYZRGB_t
 * ctypedef RandomizedMEstimatorSampleConsensus[cpp.PointXYZRGBA] RandomizedMEstimatorSampleConsensus_PointXYZRGBA_t
 * ctypedef shared_ptr[RandomizedMEstimatorSampleConsensus[cpp.PointXYZ]] RandomizedMEstimatorSampleConsensusPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[RandomizedMEstimatorSampleConsensus[cpp.PointXYZI]] RandomizedMEstimatorSampleConsensus_PointXYZI_Ptr_t
 * ctypedef shared_ptr[RandomizedMEstimatorSampleConsensus[cpp.PointXYZRGB]] RandomizedMEstimatorSampleConsensus_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::RandomizedMEstimatorSampleConsensus<struct pcl::PointXYZ> >  __pyx_t_3pcl_20pcl_sample_consensus_RandomizedMEstimatorSampleConsensusPtr_t;

/* "pcl_sample_consensus.pxd":843
 * ctypedef RandomizedMEstimatorSampleConsensus[cpp.PointXYZRGBA] RandomizedMEstimatorSampleConsensus_PointXYZRGBA_t
 * ctypedef shared_ptr[RandomizedMEstimatorSampleConsensus[cpp.PointXYZ]] RandomizedMEstimatorSampleConsensusPtr_t
 * ctypedef shared_ptr[RandomizedMEstimatorSampleConsensus[cpp.PointXYZI]] RandomizedMEstimatorSampleConsensus_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[RandomizedMEstimatorSampleConsensus[cpp.PointXYZRGB]] RandomizedMEstimatorSampleConsensus_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[RandomizedMEstimatorSampleConsensus[cpp.PointXYZRGBA]] RandomizedMEstimatorSampleConsensus_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::RandomizedMEstimatorSampleConsensus<struct pcl::PointXYZI> >  __pyx_t_3pcl_20pcl_sample_consensus_RandomizedMEstimatorSampleConsensus_PointXYZI_Ptr_t;

/* "pcl_sample_consensus.pxd":844
 * ctypedef shared_ptr[RandomizedMEstimatorSampleConsensus[cpp.PointXYZ]] RandomizedMEstimatorSampleConsensusPtr_t
 * ctypedef shared_ptr[RandomizedMEstimatorSampleConsensus[cpp.PointXYZI]] RandomizedMEstimatorSampleConsensus_PointXYZI_Ptr_t
 * ctypedef shared_ptr[RandomizedMEstimatorSampleConsensus[cpp.PointXYZRGB]] RandomizedMEstimatorSampleConsensus_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[RandomizedMEstimatorSampleConsensus[cpp.PointXYZRGBA]] RandomizedMEstimatorSampleConsensus_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const RandomizedMEstimatorSampleConsensus[cpp.PointXYZ]] RandomizedMEstimatorSampleConsensusConstPtr_t
 */
typedef boost::shared_ptr<pcl::RandomizedMEstimatorSampleConsensus<struct pcl::PointXYZRGB> >  __pyx_t_3pcl_20pcl_sample_consensus_RandomizedMEstimatorSampleConsensus_PointXYZRGB_Ptr_t;

/* "pcl_sample_consensus.pxd":845
 * ctypedef shared_ptr[RandomizedMEstimatorSampleConsensus[cpp.PointXYZI]] RandomizedMEstimatorSampleConsensus_PointXYZI_Ptr_t
 * ctypedef shared_ptr[RandomizedMEstimatorSampleConsensus[cpp.PointXYZRGB]] RandomizedMEstimatorSampleConsensus_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[RandomizedMEstimatorSampleConsensus[cpp.PointXYZRGBA]] RandomizedMEstimatorSampleConsensus_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const RandomizedMEstimatorSampleConsensus[cpp.PointXYZ]] RandomizedMEstimatorSampleConsensusConstPtr_t
 * ctypedef shared_ptr[const RandomizedMEstimatorSampleConsensus[cpp.PointXYZI]] RandomizedMEstimatorSampleConsensus_PointXYZI_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::RandomizedMEstimatorSampleConsensus<struct pcl::PointXYZRGBA> >  __pyx_t_3pcl_20pcl_sample_consensus_RandomizedMEstimatorSampleConsensus_PointXYZRGBA_Ptr_t;

/* "pcl_sample_consensus.pxd":846
 * ctypedef shared_ptr[RandomizedMEstimatorSampleConsensus[cpp.PointXYZRGB]] RandomizedMEstimatorSampleConsensus_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[RandomizedMEstimatorSampleConsensus[cpp.PointXYZRGBA]] RandomizedMEstimatorSampleConsensus_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const RandomizedMEstimatorSampleConsensus[cpp.PointXYZ]] RandomizedMEstimatorSampleConsensusConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const RandomizedMEstimatorSampleConsensus[cpp.PointXYZI]] RandomizedMEstimatorSampleConsensus_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const RandomizedMEstimatorSampleConsensus[cpp.PointXYZRGB]] RandomizedMEstimatorSampleConsensus_PointXYZRGB_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::RandomizedMEstimatorSampleConsensus<struct pcl::PointXYZ>  const >  __pyx_t_3pcl_20pcl_sample_consensus_RandomizedMEstimatorSampleConsensusConstPtr_t;

/* "pcl_sample_consensus.pxd":847
 * ctypedef shared_ptr[RandomizedMEstimatorSampleConsensus[cpp.PointXYZRGBA]] RandomizedMEstimatorSampleConsensus_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const RandomizedMEstimatorSampleConsensus[cpp.PointXYZ]] RandomizedMEstimatorSampleConsensusConstPtr_t
 * ctypedef shared_ptr[const RandomizedMEstimatorSampleConsensus[cpp.PointXYZI]] RandomizedMEstimatorSampleConsensus_PointXYZI_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const RandomizedMEstimatorSampleConsensus[cpp.PointXYZRGB]] RandomizedMEstimatorSampleConsensus_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const RandomizedMEstimatorSampleConsensus[cpp.PointXYZRGBA]] RandomizedMEstimatorSampleConsensus_PointXYZRGBA_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::RandomizedMEstimatorSampleConsensus<struct pcl::PointXYZI>  const >  __pyx_t_3pcl_20pcl_sample_consensus_RandomizedMEstimatorSampleConsensus_PointXYZI_ConstPtr_t;

/* "pcl_sample_consensus.pxd":848
 * ctypedef shared_ptr[const RandomizedMEstimatorSampleConsensus[cpp.PointXYZ]] RandomizedMEstimatorSampleConsensusConstPtr_t
 * ctypedef shared_ptr[const RandomizedMEstimatorSampleConsensus[cpp.PointXYZI]] RandomizedMEstimatorSampleConsensus_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const RandomizedMEstimatorSampleConsensus[cpp.PointXYZRGB]] RandomizedMEstimatorSampleConsensus_PointXYZRGB_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const RandomizedMEstimatorSampleConsensus[cpp.PointXYZRGBA]] RandomizedMEstimatorSampleConsensus_PointXYZRGBA_ConstPtr_t
 * ###
 */
typedef boost::shared_ptr<pcl::RandomizedMEstimatorSampleConsensus<struct pcl::PointXYZRGB>  const >  __pyx_t_3pcl_20pcl_sample_consensus_RandomizedMEstimatorSampleConsensus_PointXYZRGB_ConstPtr_t;

/* "pcl_sample_consensus.pxd":849
 * ctypedef shared_ptr[const RandomizedMEstimatorSampleConsensus[cpp.PointXYZI]] RandomizedMEstimatorSampleConsensus_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const RandomizedMEstimatorSampleConsensus[cpp.PointXYZRGB]] RandomizedMEstimatorSampleConsensus_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const RandomizedMEstimatorSampleConsensus[cpp.PointXYZRGBA]] RandomizedMEstimatorSampleConsensus_PointXYZRGBA_ConstPtr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::RandomizedMEstimatorSampleConsensus<struct pcl::PointXYZRGBA>  const >  __pyx_t_3pcl_20pcl_sample_consensus_RandomizedMEstimatorSampleConsensus_PointXYZRGBA_ConstPtr_t;

/* "pcl_sample_consensus.pxd":891
 * 
 * 
 * ctypedef RandomizedRandomSampleConsensus[cpp.PointXYZ] RandomizedRandomSampleConsensus_t             # <<<<<<<<<<<<<<
 * ctypedef RandomizedRandomSampleConsensus[cpp.PointXYZI] RandomizedRandomSampleConsensus_PointXYZI_t
 * ctypedef RandomizedRandomSampleConsensus[cpp.PointXYZRGB] RandomizedRandomSampleConsensus_PointXYZRGB_t
 */
typedef pcl::RandomizedRandomSampleConsensus<struct pcl::PointXYZ>  __pyx_t_3pcl_20pcl_sample_consensus_RandomizedRandomSampleConsensus_t;

/* "pcl_sample_consensus.pxd":892
 * 
 * ctypedef RandomizedRandomSampleConsensus[cpp.PointXYZ] RandomizedRandomSampleConsensus_t
 * ctypedef RandomizedRandomSampleConsensus[cpp.PointXYZI] RandomizedRandomSampleConsensus_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef RandomizedRandomSampleConsensus[cpp.PointXYZRGB] RandomizedRandomSampleConsensus_PointXYZRGB_t
 * ctypedef RandomizedRandomSampleConsensus[cpp.PointXYZRGBA] RandomizedRandomSampleConsensus_PointXYZRGBA_t
 */
typedef pcl::RandomizedRandomSampleConsensus<struct pcl::PointXYZI>  __pyx_t_3pcl_20pcl_sample_consensus_RandomizedRandomSampleConsensus_PointXYZI_t;

/* "pcl_sample_consensus.pxd":893
 * ctypedef RandomizedRandomSampleConsensus[cpp.PointXYZ] RandomizedRandomSampleConsensus_t
 * ctypedef RandomizedRandomSampleConsensus[cpp.PointXYZI] RandomizedRandomSampleConsensus_PointXYZI_t
 * ctypedef RandomizedRandomSampleConsensus[cpp.PointXYZRGB] RandomizedRandomSampleConsensus_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef RandomizedRandomSampleConsensus[cpp.PointXYZRGBA] RandomizedRandomSampleConsensus_PointXYZRGBA_t
 * ctypedef shared_ptr[RandomizedRandomSampleConsensus[cpp.PointXYZ]] RandomizedRandomSampleConsensusPtr_t
 */
typedef pcl::RandomizedRandomSampleConsensus<struct pcl::PointXYZRGB>  __pyx_t_3pcl_20pcl_sample_consensus_RandomizedRandomSampleConsensus_PointXYZRGB_t;

/* "pcl_sample_consensus.pxd":894
 * ctypedef RandomizedRandomSampleConsensus[cpp.PointXYZI] RandomizedRandomSampleConsensus_PointXYZI_t
 * ctypedef RandomizedRandomSampleConsensus[cpp.PointXYZRGB] RandomizedRandomSampleConsensus_PointXYZRGB_t
 * ctypedef RandomizedRandomSampleConsensus[cpp.PointXYZRGBA] RandomizedRandomSampleConsensus_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[RandomizedRandomSampleConsensus[cpp.PointXYZ]] RandomizedRandomSampleConsensusPtr_t
 * ctypedef shared_ptr[RandomizedRandomSampleConsensus[cpp.PointXYZI]] RandomizedRandomSampleConsensus_PointXYZI_Ptr_t
 */
typedef pcl::RandomizedRandomSampleConsensus<struct pcl::PointXYZRGBA>  __pyx_t_3pcl_20pcl_sample_consensus_RandomizedRandomSampleConsensus_PointXYZRGBA_t;

/* "pcl_sample_consensus.pxd":895
 * ctypedef RandomizedRandomSampleConsensus[cpp.PointXYZRGB] RandomizedRandomSampleConsensus_PointXYZRGB_t
 * ctypedef RandomizedRandomSampleConsensus[cpp.PointXYZRGBA] RandomizedRandomSampleConsensus_PointXYZRGBA_t
 * ctypedef shared_ptr[RandomizedRandomSampleConsensus[cpp.PointXYZ]] RandomizedRandomSampleConsensusPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[RandomizedRandomSampleConsensus[cpp.PointXYZI]] RandomizedRandomSampleConsensus_PointXYZI_Ptr_t
 * ctypedef shared_ptr[RandomizedRandomSampleConsensus[cpp.PointXYZRGB]] RandomizedRandomSampleConsensus_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::RandomizedRandomSampleConsensus<struct pcl::PointXYZ> >  __pyx_t_3pcl_20pcl_sample_consensus_RandomizedRandomSampleConsensusPtr_t;

/* "pcl_sample_consensus.pxd":896
 * ctypedef RandomizedRandomSampleConsensus[cpp.PointXYZRGBA] RandomizedRandomSampleConsensus_PointXYZRGBA_t
 * ctypedef shared_ptr[RandomizedRandomSampleConsensus[cpp.PointXYZ]] RandomizedRandomSampleConsensusPtr_t
 * ctypedef shared_ptr[RandomizedRandomSampleConsensus[cpp.PointXYZI]] RandomizedRandomSampleConsensus_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[RandomizedRandomSampleConsensus[cpp.PointXYZRGB]] RandomizedRandomSampleConsensus_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[RandomizedRandomSampleConsensus[cpp.PointXYZRGBA]] RandomizedRandomSampleConsensus_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::RandomizedRandomSampleConsensus<struct pcl::PointXYZI> >  __pyx_t_3pcl_20pcl_sample_consensus_RandomizedRandomSampleConsensus_PointXYZI_Ptr_t;

/* "pcl_sample_consensus.pxd":897
 * ctypedef shared_ptr[RandomizedRandomSampleConsensus[cpp.PointXYZ]] RandomizedRandomSampleConsensusPtr_t
 * ctypedef shared_ptr[RandomizedRandomSampleConsensus[cpp.PointXYZI]] RandomizedRandomSampleConsensus_PointXYZI_Ptr_t
 * ctypedef shared_ptr[RandomizedRandomSampleConsensus[cpp.PointXYZRGB]] RandomizedRandomSampleConsensus_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[RandomizedRandomSampleConsensus[cpp.PointXYZRGBA]] RandomizedRandomSampleConsensus_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const RandomizedRandomSampleConsensus[cpp.PointXYZ]] RandomizedRandomSampleConsensusConstPtr_t
 */
typedef boost::shared_ptr<pcl::RandomizedRandomSampleConsensus<struct pcl::PointXYZRGB> >  __pyx_t_3pcl_20pcl_sample_consensus_RandomizedRandomSampleConsensus_PointXYZRGB_Ptr_t;

/* "pcl_sample_consensus.pxd":898
 * ctypedef shared_ptr[RandomizedRandomSampleConsensus[cpp.PointXYZI]] RandomizedRandomSampleConsensus_PointXYZI_Ptr_t
 * ctypedef shared_ptr[RandomizedRandomSampleConsensus[cpp.PointXYZRGB]] RandomizedRandomSampleConsensus_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[RandomizedRandomSampleConsensus[cpp.PointXYZRGBA]] RandomizedRandomSampleConsensus_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const RandomizedRandomSampleConsensus[cpp.PointXYZ]] RandomizedRandomSampleConsensusConstPtr_t
 * ctypedef shared_ptr[const RandomizedRandomSampleConsensus[cpp.PointXYZI]] RandomizedRandomSampleConsensus_PointXYZI_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::RandomizedRandomSampleConsensus<struct pcl::PointXYZRGBA> >  __pyx_t_3pcl_20pcl_sample_consensus_RandomizedRandomSampleConsensus_PointXYZRGBA_Ptr_t;

/* "pcl_sample_consensus.pxd":899
 * ctypedef shared_ptr[RandomizedRandomSampleConsensus[cpp.PointXYZRGB]] RandomizedRandomSampleConsensus_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[RandomizedRandomSampleConsensus[cpp.PointXYZRGBA]] RandomizedRandomSampleConsensus_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const RandomizedRandomSampleConsensus[cpp.PointXYZ]] RandomizedRandomSampleConsensusConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const RandomizedRandomSampleConsensus[cpp.PointXYZI]] RandomizedRandomSampleConsensus_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const RandomizedRandomSampleConsensus[cpp.PointXYZRGB]] RandomizedRandomSampleConsensus_PointXYZRGB_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::RandomizedRandomSampleConsensus<struct pcl::PointXYZ>  const >  __pyx_t_3pcl_20pcl_sample_consensus_RandomizedRandomSampleConsensusConstPtr_t;

/* "pcl_sample_consensus.pxd":900
 * ctypedef shared_ptr[RandomizedRandomSampleConsensus[cpp.PointXYZRGBA]] RandomizedRandomSampleConsensus_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const RandomizedRandomSampleConsensus[cpp.PointXYZ]] RandomizedRandomSampleConsensusConstPtr_t
 * ctypedef shared_ptr[const RandomizedRandomSampleConsensus[cpp.PointXYZI]] RandomizedRandomSampleConsensus_PointXYZI_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const RandomizedRandomSampleConsensus[cpp.PointXYZRGB]] RandomizedRandomSampleConsensus_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const RandomizedRandomSampleConsensus[cpp.PointXYZRGBA]] RandomizedRandomSampleConsensus_PointXYZRGBA_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::RandomizedRandomSampleConsensus<struct pcl::PointXYZI>  const >  __pyx_t_3pcl_20pcl_sample_consensus_RandomizedRandomSampleConsensus_PointXYZI_ConstPtr_t;

/* "pcl_sample_consensus.pxd":901
 * ctypedef shared_ptr[const RandomizedRandomSampleConsensus[cpp.PointXYZ]] RandomizedRandomSampleConsensusConstPtr_t
 * ctypedef shared_ptr[const RandomizedRandomSampleConsensus[cpp.PointXYZI]] RandomizedRandomSampleConsensus_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const RandomizedRandomSampleConsensus[cpp.PointXYZRGB]] RandomizedRandomSampleConsensus_PointXYZRGB_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const RandomizedRandomSampleConsensus[cpp.PointXYZRGBA]] RandomizedRandomSampleConsensus_PointXYZRGBA_ConstPtr_t
 * ###
 */
typedef boost::shared_ptr<pcl::RandomizedRandomSampleConsensus<struct pcl::PointXYZRGB>  const >  __pyx_t_3pcl_20pcl_sample_consensus_RandomizedRandomSampleConsensus_PointXYZRGB_ConstPtr_t;

/* "pcl_sample_consensus.pxd":902
 * ctypedef shared_ptr[const RandomizedRandomSampleConsensus[cpp.PointXYZI]] RandomizedRandomSampleConsensus_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const RandomizedRandomSampleConsensus[cpp.PointXYZRGB]] RandomizedRandomSampleConsensus_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const RandomizedRandomSampleConsensus[cpp.PointXYZRGBA]] RandomizedRandomSampleConsensus_PointXYZRGBA_ConstPtr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::RandomizedRandomSampleConsensus<struct pcl::PointXYZRGBA>  const >  __pyx_t_3pcl_20pcl_sample_consensus_RandomizedRandomSampleConsensus_PointXYZRGBA_ConstPtr_t;

/* "pcl_sample_consensus.pxd":975
 * 
 * 
 * ctypedef SampleConsensusModelCircle2D[cpp.PointXYZ] SampleConsensusModelCircle2D_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelCircle2D[cpp.PointXYZI] SampleConsensusModelCircle2D_PointXYZI_t
 * ctypedef SampleConsensusModelCircle2D[cpp.PointXYZRGB] SampleConsensusModelCircle2D_PointXYZRGB_t
 */
typedef pcl::SampleConsensusModelCircle2D<struct pcl::PointXYZ>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCircle2D_t;

/* "pcl_sample_consensus.pxd":976
 * 
 * ctypedef SampleConsensusModelCircle2D[cpp.PointXYZ] SampleConsensusModelCircle2D_t
 * ctypedef SampleConsensusModelCircle2D[cpp.PointXYZI] SampleConsensusModelCircle2D_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelCircle2D[cpp.PointXYZRGB] SampleConsensusModelCircle2D_PointXYZRGB_t
 * ctypedef SampleConsensusModelCircle2D[cpp.PointXYZRGBA] SampleConsensusModelCircle2D_PointXYZRGBA_t
 */
typedef pcl::SampleConsensusModelCircle2D<struct pcl::PointXYZI>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCircle2D_PointXYZI_t;

/* "pcl_sample_consensus.pxd":977
 * ctypedef SampleConsensusModelCircle2D[cpp.PointXYZ] SampleConsensusModelCircle2D_t
 * ctypedef SampleConsensusModelCircle2D[cpp.PointXYZI] SampleConsensusModelCircle2D_PointXYZI_t
 * ctypedef SampleConsensusModelCircle2D[cpp.PointXYZRGB] SampleConsensusModelCircle2D_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelCircle2D[cpp.PointXYZRGBA] SampleConsensusModelCircle2D_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelCircle2D[cpp.PointXYZ]] SampleConsensusModelCircle2DPtr_t
 */
typedef pcl::SampleConsensusModelCircle2D<struct pcl::PointXYZRGB>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCircle2D_PointXYZRGB_t;

/* "pcl_sample_consensus.pxd":978
 * ctypedef SampleConsensusModelCircle2D[cpp.PointXYZI] SampleConsensusModelCircle2D_PointXYZI_t
 * ctypedef SampleConsensusModelCircle2D[cpp.PointXYZRGB] SampleConsensusModelCircle2D_PointXYZRGB_t
 * ctypedef SampleConsensusModelCircle2D[cpp.PointXYZRGBA] SampleConsensusModelCircle2D_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelCircle2D[cpp.PointXYZ]] SampleConsensusModelCircle2DPtr_t
 * ctypedef shared_ptr[SampleConsensusModelCircle2D[cpp.PointXYZI]] SampleConsensusModelCircle2D_PointXYZI_Ptr_t
 */
typedef pcl::SampleConsensusModelCircle2D<struct pcl::PointXYZRGBA>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCircle2D_PointXYZRGBA_t;

/* "pcl_sample_consensus.pxd":979
 * ctypedef SampleConsensusModelCircle2D[cpp.PointXYZRGB] SampleConsensusModelCircle2D_PointXYZRGB_t
 * ctypedef SampleConsensusModelCircle2D[cpp.PointXYZRGBA] SampleConsensusModelCircle2D_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelCircle2D[cpp.PointXYZ]] SampleConsensusModelCircle2DPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelCircle2D[cpp.PointXYZI]] SampleConsensusModelCircle2D_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelCircle2D[cpp.PointXYZRGB]] SampleConsensusModelCircle2D_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelCircle2D<struct pcl::PointXYZ> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCircle2DPtr_t;

/* "pcl_sample_consensus.pxd":980
 * ctypedef SampleConsensusModelCircle2D[cpp.PointXYZRGBA] SampleConsensusModelCircle2D_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelCircle2D[cpp.PointXYZ]] SampleConsensusModelCircle2DPtr_t
 * ctypedef shared_ptr[SampleConsensusModelCircle2D[cpp.PointXYZI]] SampleConsensusModelCircle2D_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelCircle2D[cpp.PointXYZRGB]] SampleConsensusModelCircle2D_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelCircle2D[cpp.PointXYZRGBA]] SampleConsensusModelCircle2D_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelCircle2D<struct pcl::PointXYZI> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCircle2D_PointXYZI_Ptr_t;

/* "pcl_sample_consensus.pxd":981
 * ctypedef shared_ptr[SampleConsensusModelCircle2D[cpp.PointXYZ]] SampleConsensusModelCircle2DPtr_t
 * ctypedef shared_ptr[SampleConsensusModelCircle2D[cpp.PointXYZI]] SampleConsensusModelCircle2D_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelCircle2D[cpp.PointXYZRGB]] SampleConsensusModelCircle2D_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelCircle2D[cpp.PointXYZRGBA]] SampleConsensusModelCircle2D_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelCircle2D[cpp.PointXYZ]] SampleConsensusModelCircle2DConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelCircle2D<struct pcl::PointXYZRGB> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCircle2D_PointXYZRGB_Ptr_t;

/* "pcl_sample_consensus.pxd":982
 * ctypedef shared_ptr[SampleConsensusModelCircle2D[cpp.PointXYZI]] SampleConsensusModelCircle2D_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelCircle2D[cpp.PointXYZRGB]] SampleConsensusModelCircle2D_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelCircle2D[cpp.PointXYZRGBA]] SampleConsensusModelCircle2D_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelCircle2D[cpp.PointXYZ]] SampleConsensusModelCircle2DConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelCircle2D[cpp.PointXYZI]] SampleConsensusModelCircle2D_PointXYZI_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelCircle2D<struct pcl::PointXYZRGBA> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCircle2D_PointXYZRGBA_Ptr_t;

/* "pcl_sample_consensus.pxd":983
 * ctypedef shared_ptr[SampleConsensusModelCircle2D[cpp.PointXYZRGB]] SampleConsensusModelCircle2D_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelCircle2D[cpp.PointXYZRGBA]] SampleConsensusModelCircle2D_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelCircle2D[cpp.PointXYZ]] SampleConsensusModelCircle2DConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelCircle2D[cpp.PointXYZI]] SampleConsensusModelCircle2D_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelCircle2D[cpp.PointXYZRGB]] SampleConsensusModelCircle2D_PointXYZRGB_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelCircle2D<struct pcl::PointXYZ>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCircle2DConstPtr_t;

/* "pcl_sample_consensus.pxd":984
 * ctypedef shared_ptr[SampleConsensusModelCircle2D[cpp.PointXYZRGBA]] SampleConsensusModelCircle2D_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelCircle2D[cpp.PointXYZ]] SampleConsensusModelCircle2DConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelCircle2D[cpp.PointXYZI]] SampleConsensusModelCircle2D_PointXYZI_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelCircle2D[cpp.PointXYZRGB]] SampleConsensusModelCircle2D_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelCircle2D[cpp.PointXYZRGBA]] SampleConsensusModelCircle2D_PointXYZRGBA_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelCircle2D<struct pcl::PointXYZI>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCircle2D_PointXYZI_ConstPtr_t;

/* "pcl_sample_consensus.pxd":985
 * ctypedef shared_ptr[const SampleConsensusModelCircle2D[cpp.PointXYZ]] SampleConsensusModelCircle2DConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelCircle2D[cpp.PointXYZI]] SampleConsensusModelCircle2D_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelCircle2D[cpp.PointXYZRGB]] SampleConsensusModelCircle2D_PointXYZRGB_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelCircle2D[cpp.PointXYZRGBA]] SampleConsensusModelCircle2D_PointXYZRGBA_ConstPtr_t
 * ###
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelCircle2D<struct pcl::PointXYZRGB>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCircle2D_PointXYZRGB_ConstPtr_t;

/* "pcl_sample_consensus.pxd":986
 * ctypedef shared_ptr[const SampleConsensusModelCircle2D[cpp.PointXYZI]] SampleConsensusModelCircle2D_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelCircle2D[cpp.PointXYZRGB]] SampleConsensusModelCircle2D_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelCircle2D[cpp.PointXYZRGBA]] SampleConsensusModelCircle2D_PointXYZRGBA_ConstPtr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelCircle2D<struct pcl::PointXYZRGBA>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCircle2D_PointXYZRGBA_ConstPtr_t;

/* "pcl_sample_consensus.pxd":1107
 * 
 * 
 * ctypedef SampleConsensusModelCone[cpp.PointXYZ, cpp.Normal] SampleConsensusModelCone_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelCone[cpp.PointXYZI, cpp.Normal] SampleConsensusModelCone_PointXYZI_t
 * ctypedef SampleConsensusModelCone[cpp.PointXYZRGB, cpp.Normal] SampleConsensusModelCone_PointXYZRGB_t
 */
typedef pcl::SampleConsensusModelCone<struct pcl::PointXYZ,struct pcl::Normal>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCone_t;

/* "pcl_sample_consensus.pxd":1108
 * 
 * ctypedef SampleConsensusModelCone[cpp.PointXYZ, cpp.Normal] SampleConsensusModelCone_t
 * ctypedef SampleConsensusModelCone[cpp.PointXYZI, cpp.Normal] SampleConsensusModelCone_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelCone[cpp.PointXYZRGB, cpp.Normal] SampleConsensusModelCone_PointXYZRGB_t
 * ctypedef SampleConsensusModelCone[cpp.PointXYZRGBA, cpp.Normal] SampleConsensusModelCone_PointXYZRGBA_t
 */
typedef pcl::SampleConsensusModelCone<struct pcl::PointXYZI,struct pcl::Normal>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCone_PointXYZI_t;

/* "pcl_sample_consensus.pxd":1109
 * ctypedef SampleConsensusModelCone[cpp.PointXYZ, cpp.Normal] SampleConsensusModelCone_t
 * ctypedef SampleConsensusModelCone[cpp.PointXYZI, cpp.Normal] SampleConsensusModelCone_PointXYZI_t
 * ctypedef SampleConsensusModelCone[cpp.PointXYZRGB, cpp.Normal] SampleConsensusModelCone_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelCone[cpp.PointXYZRGBA, cpp.Normal] SampleConsensusModelCone_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelCone[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelConePtr_t
 */
typedef pcl::SampleConsensusModelCone<struct pcl::PointXYZRGB,struct pcl::Normal>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCone_PointXYZRGB_t;

/* "pcl_sample_consensus.pxd":1110
 * ctypedef SampleConsensusModelCone[cpp.PointXYZI, cpp.Normal] SampleConsensusModelCone_PointXYZI_t
 * ctypedef SampleConsensusModelCone[cpp.PointXYZRGB, cpp.Normal] SampleConsensusModelCone_PointXYZRGB_t
 * ctypedef SampleConsensusModelCone[cpp.PointXYZRGBA, cpp.Normal] SampleConsensusModelCone_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelCone[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelConePtr_t
 * ctypedef shared_ptr[SampleConsensusModelCone[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelCone_PointXYZI_Ptr_t
 */
typedef pcl::SampleConsensusModelCone<struct pcl::PointXYZRGBA,struct pcl::Normal>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCone_PointXYZRGBA_t;

/* "pcl_sample_consensus.pxd":1111
 * ctypedef SampleConsensusModelCone[cpp.PointXYZRGB, cpp.Normal] SampleConsensusModelCone_PointXYZRGB_t
 * ctypedef SampleConsensusModelCone[cpp.PointXYZRGBA, cpp.Normal] SampleConsensusModelCone_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelCone[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelConePtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelCone[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelCone_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelCone[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelCone_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelCone<struct pcl::PointXYZ,struct pcl::Normal> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelConePtr_t;

/* "pcl_sample_consensus.pxd":1112
 * ctypedef SampleConsensusModelCone[cpp.PointXYZRGBA, cpp.Normal] SampleConsensusModelCone_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelCone[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelConePtr_t
 * ctypedef shared_ptr[SampleConsensusModelCone[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelCone_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelCone[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelCone_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelCone[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelCone_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelCone<struct pcl::PointXYZI,struct pcl::Normal> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCone_PointXYZI_Ptr_t;

/* "pcl_sample_consensus.pxd":1113
 * ctypedef shared_ptr[SampleConsensusModelCone[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelConePtr_t
 * ctypedef shared_ptr[SampleConsensusModelCone[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelCone_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelCone[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelCone_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelCone[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelCone_PointXYZRGBA_Ptr_t
 * ###
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelCone<struct pcl::PointXYZRGB,struct pcl::Normal> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCone_PointXYZRGB_Ptr_t;

/* "pcl_sample_consensus.pxd":1114
 * ctypedef shared_ptr[SampleConsensusModelCone[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelCone_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelCone[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelCone_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelCone[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelCone_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelCone<struct pcl::PointXYZRGBA,struct pcl::Normal> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCone_PointXYZRGBA_Ptr_t;

/* "pcl_sample_consensus.pxd":1252
 * 
 * 
 * ctypedef SampleConsensusModelCylinder[cpp.PointXYZ, cpp.Normal] SampleConsensusModelCylinder_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelCylinder[cpp.PointXYZI, cpp.Normal] SampleConsensusModelCylinder_PointXYZI_t
 * ctypedef SampleConsensusModelCylinder[cpp.PointXYZRGB, cpp.Normal] SampleConsensusModelCylinder_PointXYZRGB_t
 */
typedef pcl::SampleConsensusModelCylinder<struct pcl::PointXYZ,struct pcl::Normal>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCylinder_t;

/* "pcl_sample_consensus.pxd":1253
 * 
 * ctypedef SampleConsensusModelCylinder[cpp.PointXYZ, cpp.Normal] SampleConsensusModelCylinder_t
 * ctypedef SampleConsensusModelCylinder[cpp.PointXYZI, cpp.Normal] SampleConsensusModelCylinder_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelCylinder[cpp.PointXYZRGB, cpp.Normal] SampleConsensusModelCylinder_PointXYZRGB_t
 * ctypedef SampleConsensusModelCylinder[cpp.PointXYZRGBA, cpp.Normal] SampleConsensusModelCylinder_PointXYZRGBA_t
 */
typedef pcl::SampleConsensusModelCylinder<struct pcl::PointXYZI,struct pcl::Normal>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCylinder_PointXYZI_t;

/* "pcl_sample_consensus.pxd":1254
 * ctypedef SampleConsensusModelCylinder[cpp.PointXYZ, cpp.Normal] SampleConsensusModelCylinder_t
 * ctypedef SampleConsensusModelCylinder[cpp.PointXYZI, cpp.Normal] SampleConsensusModelCylinder_PointXYZI_t
 * ctypedef SampleConsensusModelCylinder[cpp.PointXYZRGB, cpp.Normal] SampleConsensusModelCylinder_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelCylinder[cpp.PointXYZRGBA, cpp.Normal] SampleConsensusModelCylinder_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelCylinder[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelCylinderPtr_t
 */
typedef pcl::SampleConsensusModelCylinder<struct pcl::PointXYZRGB,struct pcl::Normal>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCylinder_PointXYZRGB_t;

/* "pcl_sample_consensus.pxd":1255
 * ctypedef SampleConsensusModelCylinder[cpp.PointXYZI, cpp.Normal] SampleConsensusModelCylinder_PointXYZI_t
 * ctypedef SampleConsensusModelCylinder[cpp.PointXYZRGB, cpp.Normal] SampleConsensusModelCylinder_PointXYZRGB_t
 * ctypedef SampleConsensusModelCylinder[cpp.PointXYZRGBA, cpp.Normal] SampleConsensusModelCylinder_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelCylinder[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelCylinderPtr_t
 * ctypedef shared_ptr[SampleConsensusModelCylinder[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelCylinder_PointXYZI_Ptr_t
 */
typedef pcl::SampleConsensusModelCylinder<struct pcl::PointXYZRGBA,struct pcl::Normal>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCylinder_PointXYZRGBA_t;

/* "pcl_sample_consensus.pxd":1256
 * ctypedef SampleConsensusModelCylinder[cpp.PointXYZRGB, cpp.Normal] SampleConsensusModelCylinder_PointXYZRGB_t
 * ctypedef SampleConsensusModelCylinder[cpp.PointXYZRGBA, cpp.Normal] SampleConsensusModelCylinder_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelCylinder[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelCylinderPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelCylinder[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelCylinder_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelCylinder[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelCylinder_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelCylinder<struct pcl::PointXYZ,struct pcl::Normal> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCylinderPtr_t;

/* "pcl_sample_consensus.pxd":1257
 * ctypedef SampleConsensusModelCylinder[cpp.PointXYZRGBA, cpp.Normal] SampleConsensusModelCylinder_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelCylinder[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelCylinderPtr_t
 * ctypedef shared_ptr[SampleConsensusModelCylinder[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelCylinder_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelCylinder[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelCylinder_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelCylinder[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelCylinder_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelCylinder<struct pcl::PointXYZI,struct pcl::Normal> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCylinder_PointXYZI_Ptr_t;

/* "pcl_sample_consensus.pxd":1258
 * ctypedef shared_ptr[SampleConsensusModelCylinder[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelCylinderPtr_t
 * ctypedef shared_ptr[SampleConsensusModelCylinder[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelCylinder_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelCylinder[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelCylinder_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelCylinder[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelCylinder_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelCylinder[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelCylinderConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelCylinder<struct pcl::PointXYZRGB,struct pcl::Normal> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCylinder_PointXYZRGB_Ptr_t;

/* "pcl_sample_consensus.pxd":1259
 * ctypedef shared_ptr[SampleConsensusModelCylinder[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelCylinder_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelCylinder[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelCylinder_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelCylinder[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelCylinder_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelCylinder[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelCylinderConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelCylinder[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelCylinder_PointXYZI_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelCylinder<struct pcl::PointXYZRGBA,struct pcl::Normal> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCylinder_PointXYZRGBA_Ptr_t;

/* "pcl_sample_consensus.pxd":1260
 * ctypedef shared_ptr[SampleConsensusModelCylinder[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelCylinder_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelCylinder[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelCylinder_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelCylinder[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelCylinderConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelCylinder[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelCylinder_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelCylinder[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelCylinder_PointXYZRGB_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelCylinder<struct pcl::PointXYZ,struct pcl::Normal>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCylinderConstPtr_t;

/* "pcl_sample_consensus.pxd":1261
 * ctypedef shared_ptr[SampleConsensusModelCylinder[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelCylinder_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelCylinder[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelCylinderConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelCylinder[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelCylinder_PointXYZI_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelCylinder[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelCylinder_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelCylinder[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelCylinder_PointXYZRGBA_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelCylinder<struct pcl::PointXYZI,struct pcl::Normal>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCylinder_PointXYZI_ConstPtr_t;

/* "pcl_sample_consensus.pxd":1262
 * ctypedef shared_ptr[const SampleConsensusModelCylinder[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelCylinderConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelCylinder[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelCylinder_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelCylinder[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelCylinder_PointXYZRGB_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelCylinder[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelCylinder_PointXYZRGBA_ConstPtr_t
 * ###
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelCylinder<struct pcl::PointXYZRGB,struct pcl::Normal>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCylinder_PointXYZRGB_ConstPtr_t;

/* "pcl_sample_consensus.pxd":1263
 * ctypedef shared_ptr[const SampleConsensusModelCylinder[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelCylinder_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelCylinder[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelCylinder_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelCylinder[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelCylinder_PointXYZRGBA_ConstPtr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelCylinder<struct pcl::PointXYZRGBA,struct pcl::Normal>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCylinder_PointXYZRGBA_ConstPtr_t;

/* "pcl_sample_consensus.pxd":1368
 * 
 * 
 * ctypedef SampleConsensusModelLine[cpp.PointXYZ] SampleConsensusModelLine_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelLine[cpp.PointXYZI] SampleConsensusModelLine_PointXYZI_t
 * ctypedef SampleConsensusModelLine[cpp.PointXYZRGB] SampleConsensusModelLine_PointXYZRGB_t
 */
typedef pcl::SampleConsensusModelLine<struct pcl::PointXYZ>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelLine_t;

/* "pcl_sample_consensus.pxd":1369
 * 
 * ctypedef SampleConsensusModelLine[cpp.PointXYZ] SampleConsensusModelLine_t
 * ctypedef SampleConsensusModelLine[cpp.PointXYZI] SampleConsensusModelLine_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelLine[cpp.PointXYZRGB] SampleConsensusModelLine_PointXYZRGB_t
 * ctypedef SampleConsensusModelLine[cpp.PointXYZRGBA] SampleConsensusModelLine_PointXYZRGBA_t
 */
typedef pcl::SampleConsensusModelLine<struct pcl::PointXYZI>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelLine_PointXYZI_t;

/* "pcl_sample_consensus.pxd":1370
 * ctypedef SampleConsensusModelLine[cpp.PointXYZ] SampleConsensusModelLine_t
 * ctypedef SampleConsensusModelLine[cpp.PointXYZI] SampleConsensusModelLine_PointXYZI_t
 * ctypedef SampleConsensusModelLine[cpp.PointXYZRGB] SampleConsensusModelLine_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelLine[cpp.PointXYZRGBA] SampleConsensusModelLine_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelLine[cpp.PointXYZ]] SampleConsensusModelLinePtr_t
 */
typedef pcl::SampleConsensusModelLine<struct pcl::PointXYZRGB>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelLine_PointXYZRGB_t;

/* "pcl_sample_consensus.pxd":1371
 * ctypedef SampleConsensusModelLine[cpp.PointXYZI] SampleConsensusModelLine_PointXYZI_t
 * ctypedef SampleConsensusModelLine[cpp.PointXYZRGB] SampleConsensusModelLine_PointXYZRGB_t
 * ctypedef SampleConsensusModelLine[cpp.PointXYZRGBA] SampleConsensusModelLine_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelLine[cpp.PointXYZ]] SampleConsensusModelLinePtr_t
 * ctypedef shared_ptr[SampleConsensusModelLine[cpp.PointXYZI]] SampleConsensusModelLine_PointXYZI_Ptr_t
 */
typedef pcl::SampleConsensusModelLine<struct pcl::PointXYZRGBA>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelLine_PointXYZRGBA_t;

/* "pcl_sample_consensus.pxd":1372
 * ctypedef SampleConsensusModelLine[cpp.PointXYZRGB] SampleConsensusModelLine_PointXYZRGB_t
 * ctypedef SampleConsensusModelLine[cpp.PointXYZRGBA] SampleConsensusModelLine_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelLine[cpp.PointXYZ]] SampleConsensusModelLinePtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelLine[cpp.PointXYZI]] SampleConsensusModelLine_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelLine[cpp.PointXYZRGB]] SampleConsensusModelLine_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelLine<struct pcl::PointXYZ> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelLinePtr_t;

/* "pcl_sample_consensus.pxd":1373
 * ctypedef SampleConsensusModelLine[cpp.PointXYZRGBA] SampleConsensusModelLine_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelLine[cpp.PointXYZ]] SampleConsensusModelLinePtr_t
 * ctypedef shared_ptr[SampleConsensusModelLine[cpp.PointXYZI]] SampleConsensusModelLine_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelLine[cpp.PointXYZRGB]] SampleConsensusModelLine_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelLine[cpp.PointXYZRGBA]] SampleConsensusModelLine_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelLine<struct pcl::PointXYZI> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelLine_PointXYZI_Ptr_t;

/* "pcl_sample_consensus.pxd":1374
 * ctypedef shared_ptr[SampleConsensusModelLine[cpp.PointXYZ]] SampleConsensusModelLinePtr_t
 * ctypedef shared_ptr[SampleConsensusModelLine[cpp.PointXYZI]] SampleConsensusModelLine_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelLine[cpp.PointXYZRGB]] SampleConsensusModelLine_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelLine[cpp.PointXYZRGBA]] SampleConsensusModelLine_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelLine[cpp.PointXYZ]] SampleConsensusModelLineConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelLine<struct pcl::PointXYZRGB> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelLine_PointXYZRGB_Ptr_t;

/* "pcl_sample_consensus.pxd":1375
 * ctypedef shared_ptr[SampleConsensusModelLine[cpp.PointXYZI]] SampleConsensusModelLine_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelLine[cpp.PointXYZRGB]] SampleConsensusModelLine_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelLine[cpp.PointXYZRGBA]] SampleConsensusModelLine_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelLine[cpp.PointXYZ]] SampleConsensusModelLineConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelLine[cpp.PointXYZI]] SampleConsensusModelLine_PointXYZI_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelLine<struct pcl::PointXYZRGBA> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelLine_PointXYZRGBA_Ptr_t;

/* "pcl_sample_consensus.pxd":1376
 * ctypedef shared_ptr[SampleConsensusModelLine[cpp.PointXYZRGB]] SampleConsensusModelLine_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelLine[cpp.PointXYZRGBA]] SampleConsensusModelLine_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelLine[cpp.PointXYZ]] SampleConsensusModelLineConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelLine[cpp.PointXYZI]] SampleConsensusModelLine_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelLine[cpp.PointXYZRGB]] SampleConsensusModelLine_PointXYZRGB_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelLine<struct pcl::PointXYZ>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelLineConstPtr_t;

/* "pcl_sample_consensus.pxd":1377
 * ctypedef shared_ptr[SampleConsensusModelLine[cpp.PointXYZRGBA]] SampleConsensusModelLine_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelLine[cpp.PointXYZ]] SampleConsensusModelLineConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelLine[cpp.PointXYZI]] SampleConsensusModelLine_PointXYZI_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelLine[cpp.PointXYZRGB]] SampleConsensusModelLine_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelLine[cpp.PointXYZRGBA]] SampleConsensusModelLine_PointXYZRGBA_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelLine<struct pcl::PointXYZI>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelLine_PointXYZI_ConstPtr_t;

/* "pcl_sample_consensus.pxd":1378
 * ctypedef shared_ptr[const SampleConsensusModelLine[cpp.PointXYZ]] SampleConsensusModelLineConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelLine[cpp.PointXYZI]] SampleConsensusModelLine_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelLine[cpp.PointXYZRGB]] SampleConsensusModelLine_PointXYZRGB_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelLine[cpp.PointXYZRGBA]] SampleConsensusModelLine_PointXYZRGBA_ConstPtr_t
 * ###
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelLine<struct pcl::PointXYZRGB>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelLine_PointXYZRGB_ConstPtr_t;

/* "pcl_sample_consensus.pxd":1379
 * ctypedef shared_ptr[const SampleConsensusModelLine[cpp.PointXYZI]] SampleConsensusModelLine_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelLine[cpp.PointXYZRGB]] SampleConsensusModelLine_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelLine[cpp.PointXYZRGBA]] SampleConsensusModelLine_PointXYZRGBA_ConstPtr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelLine<struct pcl::PointXYZRGBA>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelLine_PointXYZRGBA_ConstPtr_t;

/* "pcl_sample_consensus.pxd":1509
 * 
 * 
 * ctypedef SampleConsensusModelNormalParallelPlane[cpp.PointXYZ, cpp.Normal] SampleConsensusModelNormalParallelPlane_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelNormalParallelPlane[cpp.PointXYZI, cpp.Normal] SampleConsensusModelNormalParallelPlane_PointXYZI_t
 * ctypedef SampleConsensusModelNormalParallelPlane[cpp.PointXYZRGB, cpp.Normal] SampleConsensusModelNormalParallelPlane_PointXYZRGB_t
 */
typedef pcl::SampleConsensusModelNormalParallelPlane<struct pcl::PointXYZ,struct pcl::Normal>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalParallelPlane_t;

/* "pcl_sample_consensus.pxd":1510
 * 
 * ctypedef SampleConsensusModelNormalParallelPlane[cpp.PointXYZ, cpp.Normal] SampleConsensusModelNormalParallelPlane_t
 * ctypedef SampleConsensusModelNormalParallelPlane[cpp.PointXYZI, cpp.Normal] SampleConsensusModelNormalParallelPlane_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelNormalParallelPlane[cpp.PointXYZRGB, cpp.Normal] SampleConsensusModelNormalParallelPlane_PointXYZRGB_t
 * ctypedef SampleConsensusModelNormalParallelPlane[cpp.PointXYZRGBA, cpp.Normal] SampleConsensusModelNormalParallelPlane_PointXYZRGBA_t
 */
typedef pcl::SampleConsensusModelNormalParallelPlane<struct pcl::PointXYZI,struct pcl::Normal>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalParallelPlane_PointXYZI_t;

/* "pcl_sample_consensus.pxd":1511
 * ctypedef SampleConsensusModelNormalParallelPlane[cpp.PointXYZ, cpp.Normal] SampleConsensusModelNormalParallelPlane_t
 * ctypedef SampleConsensusModelNormalParallelPlane[cpp.PointXYZI, cpp.Normal] SampleConsensusModelNormalParallelPlane_PointXYZI_t
 * ctypedef SampleConsensusModelNormalParallelPlane[cpp.PointXYZRGB, cpp.Normal] SampleConsensusModelNormalParallelPlane_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelNormalParallelPlane[cpp.PointXYZRGBA, cpp.Normal] SampleConsensusModelNormalParallelPlane_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelNormalParallelPlane[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelNormalParallelPlanePtr_t
 */
typedef pcl::SampleConsensusModelNormalParallelPlane<struct pcl::PointXYZRGB,struct pcl::Normal>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalParallelPlane_PointXYZRGB_t;

/* "pcl_sample_consensus.pxd":1512
 * ctypedef SampleConsensusModelNormalParallelPlane[cpp.PointXYZI, cpp.Normal] SampleConsensusModelNormalParallelPlane_PointXYZI_t
 * ctypedef SampleConsensusModelNormalParallelPlane[cpp.PointXYZRGB, cpp.Normal] SampleConsensusModelNormalParallelPlane_PointXYZRGB_t
 * ctypedef SampleConsensusModelNormalParallelPlane[cpp.PointXYZRGBA, cpp.Normal] SampleConsensusModelNormalParallelPlane_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelNormalParallelPlane[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelNormalParallelPlanePtr_t
 * ctypedef shared_ptr[SampleConsensusModelNormalParallelPlane[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelNormalParallelPlane_PointXYZI_Ptr_t
 */
typedef pcl::SampleConsensusModelNormalParallelPlane<struct pcl::PointXYZRGBA,struct pcl::Normal>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalParallelPlane_PointXYZRGBA_t;

/* "pcl_sample_consensus.pxd":1513
 * ctypedef SampleConsensusModelNormalParallelPlane[cpp.PointXYZRGB, cpp.Normal] SampleConsensusModelNormalParallelPlane_PointXYZRGB_t
 * ctypedef SampleConsensusModelNormalParallelPlane[cpp.PointXYZRGBA, cpp.Normal] SampleConsensusModelNormalParallelPlane_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelNormalParallelPlane[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelNormalParallelPlanePtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelNormalParallelPlane[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelNormalParallelPlane_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelNormalParallelPlane[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelNormalParallelPlane_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelNormalParallelPlane<struct pcl::PointXYZ,struct pcl::Normal> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalParallelPlanePtr_t;

/* "pcl_sample_consensus.pxd":1514
 * ctypedef SampleConsensusModelNormalParallelPlane[cpp.PointXYZRGBA, cpp.Normal] SampleConsensusModelNormalParallelPlane_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelNormalParallelPlane[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelNormalParallelPlanePtr_t
 * ctypedef shared_ptr[SampleConsensusModelNormalParallelPlane[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelNormalParallelPlane_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelNormalParallelPlane[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelNormalParallelPlane_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelNormalParallelPlane[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelNormalParallelPlane_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelNormalParallelPlane<struct pcl::PointXYZI,struct pcl::Normal> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalParallelPlane_PointXYZI_Ptr_t;

/* "pcl_sample_consensus.pxd":1515
 * ctypedef shared_ptr[SampleConsensusModelNormalParallelPlane[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelNormalParallelPlanePtr_t
 * ctypedef shared_ptr[SampleConsensusModelNormalParallelPlane[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelNormalParallelPlane_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelNormalParallelPlane[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelNormalParallelPlane_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelNormalParallelPlane[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelNormalParallelPlane_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalParallelPlane[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelNormalParallelPlaneConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelNormalParallelPlane<struct pcl::PointXYZRGB,struct pcl::Normal> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalParallelPlane_PointXYZRGB_Ptr_t;

/* "pcl_sample_consensus.pxd":1516
 * ctypedef shared_ptr[SampleConsensusModelNormalParallelPlane[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelNormalParallelPlane_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelNormalParallelPlane[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelNormalParallelPlane_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelNormalParallelPlane[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelNormalParallelPlane_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelNormalParallelPlane[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelNormalParallelPlaneConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalParallelPlane[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelNormalParallelPlane_PointXYZI_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelNormalParallelPlane<struct pcl::PointXYZRGBA,struct pcl::Normal> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalParallelPlane_PointXYZRGBA_Ptr_t;

/* "pcl_sample_consensus.pxd":1517
 * ctypedef shared_ptr[SampleConsensusModelNormalParallelPlane[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelNormalParallelPlane_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelNormalParallelPlane[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelNormalParallelPlane_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalParallelPlane[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelNormalParallelPlaneConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelNormalParallelPlane[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelNormalParallelPlane_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalParallelPlane[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelNormalParallelPlane_PointXYZRGB_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelNormalParallelPlane<struct pcl::PointXYZ,struct pcl::Normal>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalParallelPlaneConstPtr_t;

/* "pcl_sample_consensus.pxd":1518
 * ctypedef shared_ptr[SampleConsensusModelNormalParallelPlane[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelNormalParallelPlane_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalParallelPlane[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelNormalParallelPlaneConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalParallelPlane[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelNormalParallelPlane_PointXYZI_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelNormalParallelPlane[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelNormalParallelPlane_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalParallelPlane[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelNormalParallelPlane_PointXYZRGBA_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelNormalParallelPlane<struct pcl::PointXYZI,struct pcl::Normal>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalParallelPlane_PointXYZI_ConstPtr_t;

/* "pcl_sample_consensus.pxd":1519
 * ctypedef shared_ptr[const SampleConsensusModelNormalParallelPlane[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelNormalParallelPlaneConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalParallelPlane[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelNormalParallelPlane_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalParallelPlane[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelNormalParallelPlane_PointXYZRGB_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelNormalParallelPlane[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelNormalParallelPlane_PointXYZRGBA_ConstPtr_t
 * ###
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelNormalParallelPlane<struct pcl::PointXYZRGB,struct pcl::Normal>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalParallelPlane_PointXYZRGB_ConstPtr_t;

/* "pcl_sample_consensus.pxd":1520
 * ctypedef shared_ptr[const SampleConsensusModelNormalParallelPlane[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelNormalParallelPlane_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalParallelPlane[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelNormalParallelPlane_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalParallelPlane[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelNormalParallelPlane_PointXYZRGBA_ConstPtr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelNormalParallelPlane<struct pcl::PointXYZRGBA,struct pcl::Normal>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalParallelPlane_PointXYZRGBA_ConstPtr_t;

/* "pcl_sample_consensus.pxd":1601
 * 
 * 
 * ctypedef SampleConsensusModelNormalPlane[cpp.PointXYZ, cpp.Normal] SampleConsensusModelNormalPlane_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelNormalPlane[cpp.PointXYZI, cpp.Normal] SampleConsensusModelNormalPlane_PointXYZI_t
 * ctypedef SampleConsensusModelNormalPlane[cpp.PointXYZRGB, cpp.Normal] SampleConsensusModelNormalPlane_PointXYZRGB_t
 */
typedef pcl::SampleConsensusModelNormalPlane<struct pcl::PointXYZ,struct pcl::Normal>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalPlane_t;

/* "pcl_sample_consensus.pxd":1602
 * 
 * ctypedef SampleConsensusModelNormalPlane[cpp.PointXYZ, cpp.Normal] SampleConsensusModelNormalPlane_t
 * ctypedef SampleConsensusModelNormalPlane[cpp.PointXYZI, cpp.Normal] SampleConsensusModelNormalPlane_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelNormalPlane[cpp.PointXYZRGB, cpp.Normal] SampleConsensusModelNormalPlane_PointXYZRGB_t
 * ctypedef SampleConsensusModelNormalPlane[cpp.PointXYZRGBA, cpp.Normal] SampleConsensusModelNormalPlane_PointXYZRGBA_t
 */
typedef pcl::SampleConsensusModelNormalPlane<struct pcl::PointXYZI,struct pcl::Normal>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalPlane_PointXYZI_t;

/* "pcl_sample_consensus.pxd":1603
 * ctypedef SampleConsensusModelNormalPlane[cpp.PointXYZ, cpp.Normal] SampleConsensusModelNormalPlane_t
 * ctypedef SampleConsensusModelNormalPlane[cpp.PointXYZI, cpp.Normal] SampleConsensusModelNormalPlane_PointXYZI_t
 * ctypedef SampleConsensusModelNormalPlane[cpp.PointXYZRGB, cpp.Normal] SampleConsensusModelNormalPlane_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelNormalPlane[cpp.PointXYZRGBA, cpp.Normal] SampleConsensusModelNormalPlane_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelNormalPlane[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelNormalPlanePtr_t
 */
typedef pcl::SampleConsensusModelNormalPlane<struct pcl::PointXYZRGB,struct pcl::Normal>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalPlane_PointXYZRGB_t;

/* "pcl_sample_consensus.pxd":1604
 * ctypedef SampleConsensusModelNormalPlane[cpp.PointXYZI, cpp.Normal] SampleConsensusModelNormalPlane_PointXYZI_t
 * ctypedef SampleConsensusModelNormalPlane[cpp.PointXYZRGB, cpp.Normal] SampleConsensusModelNormalPlane_PointXYZRGB_t
 * ctypedef SampleConsensusModelNormalPlane[cpp.PointXYZRGBA, cpp.Normal] SampleConsensusModelNormalPlane_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelNormalPlane[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelNormalPlanePtr_t
 * ctypedef shared_ptr[SampleConsensusModelNormalPlane[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelNormalPlane_PointXYZI_Ptr_t
 */
typedef pcl::SampleConsensusModelNormalPlane<struct pcl::PointXYZRGBA,struct pcl::Normal>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalPlane_PointXYZRGBA_t;

/* "pcl_sample_consensus.pxd":1605
 * ctypedef SampleConsensusModelNormalPlane[cpp.PointXYZRGB, cpp.Normal] SampleConsensusModelNormalPlane_PointXYZRGB_t
 * ctypedef SampleConsensusModelNormalPlane[cpp.PointXYZRGBA, cpp.Normal] SampleConsensusModelNormalPlane_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelNormalPlane[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelNormalPlanePtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelNormalPlane[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelNormalPlane_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelNormalPlane[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelNormalPlane_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelNormalPlane<struct pcl::PointXYZ,struct pcl::Normal> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalPlanePtr_t;

/* "pcl_sample_consensus.pxd":1606
 * ctypedef SampleConsensusModelNormalPlane[cpp.PointXYZRGBA, cpp.Normal] SampleConsensusModelNormalPlane_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelNormalPlane[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelNormalPlanePtr_t
 * ctypedef shared_ptr[SampleConsensusModelNormalPlane[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelNormalPlane_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelNormalPlane[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelNormalPlane_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelNormalPlane[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelNormalPlane_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelNormalPlane<struct pcl::PointXYZI,struct pcl::Normal> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalPlane_PointXYZI_Ptr_t;

/* "pcl_sample_consensus.pxd":1607
 * ctypedef shared_ptr[SampleConsensusModelNormalPlane[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelNormalPlanePtr_t
 * ctypedef shared_ptr[SampleConsensusModelNormalPlane[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelNormalPlane_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelNormalPlane[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelNormalPlane_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelNormalPlane[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelNormalPlane_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalPlane[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelNormalPlaneConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelNormalPlane<struct pcl::PointXYZRGB,struct pcl::Normal> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalPlane_PointXYZRGB_Ptr_t;

/* "pcl_sample_consensus.pxd":1608
 * ctypedef shared_ptr[SampleConsensusModelNormalPlane[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelNormalPlane_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelNormalPlane[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelNormalPlane_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelNormalPlane[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelNormalPlane_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelNormalPlane[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelNormalPlaneConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalPlane[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelNormalPlane_PointXYZI_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelNormalPlane<struct pcl::PointXYZRGBA,struct pcl::Normal> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalPlane_PointXYZRGBA_Ptr_t;

/* "pcl_sample_consensus.pxd":1609
 * ctypedef shared_ptr[SampleConsensusModelNormalPlane[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelNormalPlane_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelNormalPlane[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelNormalPlane_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalPlane[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelNormalPlaneConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelNormalPlane[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelNormalPlane_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalPlane[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelNormalPlane_PointXYZRGB_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelNormalPlane<struct pcl::PointXYZ,struct pcl::Normal>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalPlaneConstPtr_t;

/* "pcl_sample_consensus.pxd":1610
 * ctypedef shared_ptr[SampleConsensusModelNormalPlane[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelNormalPlane_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalPlane[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelNormalPlaneConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalPlane[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelNormalPlane_PointXYZI_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelNormalPlane[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelNormalPlane_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalPlane[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelNormalPlane_PointXYZRGBA_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelNormalPlane<struct pcl::PointXYZI,struct pcl::Normal>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalPlane_PointXYZI_ConstPtr_t;

/* "pcl_sample_consensus.pxd":1611
 * ctypedef shared_ptr[const SampleConsensusModelNormalPlane[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelNormalPlaneConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalPlane[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelNormalPlane_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalPlane[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelNormalPlane_PointXYZRGB_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelNormalPlane[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelNormalPlane_PointXYZRGBA_ConstPtr_t
 * ###
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelNormalPlane<struct pcl::PointXYZRGB,struct pcl::Normal>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalPlane_PointXYZRGB_ConstPtr_t;

/* "pcl_sample_consensus.pxd":1612
 * ctypedef shared_ptr[const SampleConsensusModelNormalPlane[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelNormalPlane_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalPlane[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelNormalPlane_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalPlane[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelNormalPlane_PointXYZRGBA_ConstPtr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelNormalPlane<struct pcl::PointXYZRGBA,struct pcl::Normal>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalPlane_PointXYZRGBA_ConstPtr_t;

/* "pcl_sample_consensus.pxd":1687
 * 
 * 
 * ctypedef SampleConsensusModelNormalSphere[cpp.PointXYZ, cpp.Normal] SampleConsensusModelNormalSphere_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelNormalSphere[cpp.PointXYZI, cpp.Normal] SampleConsensusModelNormalSphere_PointXYZI_t
 * ctypedef SampleConsensusModelNormalSphere[cpp.PointXYZRGB, cpp.Normal] SampleConsensusModelNormalSphere_PointXYZRGB_t
 */
typedef pcl::SampleConsensusModelNormalSphere<struct pcl::PointXYZ,struct pcl::Normal>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalSphere_t;

/* "pcl_sample_consensus.pxd":1688
 * 
 * ctypedef SampleConsensusModelNormalSphere[cpp.PointXYZ, cpp.Normal] SampleConsensusModelNormalSphere_t
 * ctypedef SampleConsensusModelNormalSphere[cpp.PointXYZI, cpp.Normal] SampleConsensusModelNormalSphere_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelNormalSphere[cpp.PointXYZRGB, cpp.Normal] SampleConsensusModelNormalSphere_PointXYZRGB_t
 * ctypedef SampleConsensusModelNormalSphere[cpp.PointXYZRGBA, cpp.Normal] SampleConsensusModelNormalSphere_PointXYZRGBA_t
 */
typedef pcl::SampleConsensusModelNormalSphere<struct pcl::PointXYZI,struct pcl::Normal>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalSphere_PointXYZI_t;

/* "pcl_sample_consensus.pxd":1689
 * ctypedef SampleConsensusModelNormalSphere[cpp.PointXYZ, cpp.Normal] SampleConsensusModelNormalSphere_t
 * ctypedef SampleConsensusModelNormalSphere[cpp.PointXYZI, cpp.Normal] SampleConsensusModelNormalSphere_PointXYZI_t
 * ctypedef SampleConsensusModelNormalSphere[cpp.PointXYZRGB, cpp.Normal] SampleConsensusModelNormalSphere_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelNormalSphere[cpp.PointXYZRGBA, cpp.Normal] SampleConsensusModelNormalSphere_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelNormalSphere[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelNormalSpherePtr_t
 */
typedef pcl::SampleConsensusModelNormalSphere<struct pcl::PointXYZRGB,struct pcl::Normal>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalSphere_PointXYZRGB_t;

/* "pcl_sample_consensus.pxd":1690
 * ctypedef SampleConsensusModelNormalSphere[cpp.PointXYZI, cpp.Normal] SampleConsensusModelNormalSphere_PointXYZI_t
 * ctypedef SampleConsensusModelNormalSphere[cpp.PointXYZRGB, cpp.Normal] SampleConsensusModelNormalSphere_PointXYZRGB_t
 * ctypedef SampleConsensusModelNormalSphere[cpp.PointXYZRGBA, cpp.Normal] SampleConsensusModelNormalSphere_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelNormalSphere[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelNormalSpherePtr_t
 * ctypedef shared_ptr[SampleConsensusModelNormalSphere[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelNormalSphere_PointXYZI_Ptr_t
 */
typedef pcl::SampleConsensusModelNormalSphere<struct pcl::PointXYZRGBA,struct pcl::Normal>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalSphere_PointXYZRGBA_t;

/* "pcl_sample_consensus.pxd":1691
 * ctypedef SampleConsensusModelNormalSphere[cpp.PointXYZRGB, cpp.Normal] SampleConsensusModelNormalSphere_PointXYZRGB_t
 * ctypedef SampleConsensusModelNormalSphere[cpp.PointXYZRGBA, cpp.Normal] SampleConsensusModelNormalSphere_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelNormalSphere[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelNormalSpherePtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelNormalSphere[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelNormalSphere_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelNormalSphere[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelNormalSphere_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelNormalSphere<struct pcl::PointXYZ,struct pcl::Normal> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalSpherePtr_t;

/* "pcl_sample_consensus.pxd":1692
 * ctypedef SampleConsensusModelNormalSphere[cpp.PointXYZRGBA, cpp.Normal] SampleConsensusModelNormalSphere_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelNormalSphere[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelNormalSpherePtr_t
 * ctypedef shared_ptr[SampleConsensusModelNormalSphere[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelNormalSphere_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelNormalSphere[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelNormalSphere_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelNormalSphere[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelNormalSphere_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelNormalSphere<struct pcl::PointXYZI,struct pcl::Normal> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalSphere_PointXYZI_Ptr_t;

/* "pcl_sample_consensus.pxd":1693
 * ctypedef shared_ptr[SampleConsensusModelNormalSphere[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelNormalSpherePtr_t
 * ctypedef shared_ptr[SampleConsensusModelNormalSphere[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelNormalSphere_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelNormalSphere[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelNormalSphere_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelNormalSphere[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelNormalSphere_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalSphere[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelNormalSphereConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelNormalSphere<struct pcl::PointXYZRGB,struct pcl::Normal> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalSphere_PointXYZRGB_Ptr_t;

/* "pcl_sample_consensus.pxd":1694
 * ctypedef shared_ptr[SampleConsensusModelNormalSphere[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelNormalSphere_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelNormalSphere[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelNormalSphere_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelNormalSphere[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelNormalSphere_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelNormalSphere[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelNormalSphereConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalSphere[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelNormalSphere_PointXYZI_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelNormalSphere<struct pcl::PointXYZRGBA,struct pcl::Normal> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalSphere_PointXYZRGBA_Ptr_t;

/* "pcl_sample_consensus.pxd":1695
 * ctypedef shared_ptr[SampleConsensusModelNormalSphere[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelNormalSphere_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelNormalSphere[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelNormalSphere_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalSphere[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelNormalSphereConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelNormalSphere[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelNormalSphere_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalSphere[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelNormalSphere_PointXYZRGB_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelNormalSphere<struct pcl::PointXYZ,struct pcl::Normal>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalSphereConstPtr_t;

/* "pcl_sample_consensus.pxd":1696
 * ctypedef shared_ptr[SampleConsensusModelNormalSphere[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelNormalSphere_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalSphere[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelNormalSphereConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalSphere[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelNormalSphere_PointXYZI_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelNormalSphere[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelNormalSphere_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalSphere[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelNormalSphere_PointXYZRGBA_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelNormalSphere<struct pcl::PointXYZI,struct pcl::Normal>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalSphere_PointXYZI_ConstPtr_t;

/* "pcl_sample_consensus.pxd":1697
 * ctypedef shared_ptr[const SampleConsensusModelNormalSphere[cpp.PointXYZ, cpp.Normal]] SampleConsensusModelNormalSphereConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalSphere[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelNormalSphere_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalSphere[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelNormalSphere_PointXYZRGB_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelNormalSphere[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelNormalSphere_PointXYZRGBA_ConstPtr_t
 * ###
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelNormalSphere<struct pcl::PointXYZRGB,struct pcl::Normal>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalSphere_PointXYZRGB_ConstPtr_t;

/* "pcl_sample_consensus.pxd":1698
 * ctypedef shared_ptr[const SampleConsensusModelNormalSphere[cpp.PointXYZI, cpp.Normal]] SampleConsensusModelNormalSphere_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalSphere[cpp.PointXYZRGB, cpp.Normal]] SampleConsensusModelNormalSphere_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelNormalSphere[cpp.PointXYZRGBA, cpp.Normal]] SampleConsensusModelNormalSphere_PointXYZRGBA_ConstPtr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelNormalSphere<struct pcl::PointXYZRGBA,struct pcl::Normal>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelNormalSphere_PointXYZRGBA_ConstPtr_t;

/* "pcl_sample_consensus.pxd":1784
 * 
 * 
 * ctypedef SampleConsensusModelParallelLine[cpp.PointXYZ] SampleConsensusModelParallelLine_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelParallelLine[cpp.PointXYZI] SampleConsensusModelParallelLine_PointXYZI_t
 * ctypedef SampleConsensusModelParallelLine[cpp.PointXYZRGB] SampleConsensusModelParallelLine_PointXYZRGB_t
 */
typedef pcl::SampleConsensusModelParallelLine<struct pcl::PointXYZ>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelParallelLine_t;

/* "pcl_sample_consensus.pxd":1785
 * 
 * ctypedef SampleConsensusModelParallelLine[cpp.PointXYZ] SampleConsensusModelParallelLine_t
 * ctypedef SampleConsensusModelParallelLine[cpp.PointXYZI] SampleConsensusModelParallelLine_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelParallelLine[cpp.PointXYZRGB] SampleConsensusModelParallelLine_PointXYZRGB_t
 * ctypedef SampleConsensusModelParallelLine[cpp.PointXYZRGBA] SampleConsensusModelParallelLine_PointXYZRGBA_t
 */
typedef pcl::SampleConsensusModelParallelLine<struct pcl::PointXYZI>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelParallelLine_PointXYZI_t;

/* "pcl_sample_consensus.pxd":1786
 * ctypedef SampleConsensusModelParallelLine[cpp.PointXYZ] SampleConsensusModelParallelLine_t
 * ctypedef SampleConsensusModelParallelLine[cpp.PointXYZI] SampleConsensusModelParallelLine_PointXYZI_t
 * ctypedef SampleConsensusModelParallelLine[cpp.PointXYZRGB] SampleConsensusModelParallelLine_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelParallelLine[cpp.PointXYZRGBA] SampleConsensusModelParallelLine_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelParallelLine[cpp.PointXYZ]] SampleConsensusModelParallelLinePtr_t
 */
typedef pcl::SampleConsensusModelParallelLine<struct pcl::PointXYZRGB>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelParallelLine_PointXYZRGB_t;

/* "pcl_sample_consensus.pxd":1787
 * ctypedef SampleConsensusModelParallelLine[cpp.PointXYZI] SampleConsensusModelParallelLine_PointXYZI_t
 * ctypedef SampleConsensusModelParallelLine[cpp.PointXYZRGB] SampleConsensusModelParallelLine_PointXYZRGB_t
 * ctypedef SampleConsensusModelParallelLine[cpp.PointXYZRGBA] SampleConsensusModelParallelLine_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelParallelLine[cpp.PointXYZ]] SampleConsensusModelParallelLinePtr_t
 * ctypedef shared_ptr[SampleConsensusModelParallelLine[cpp.PointXYZI]] SampleConsensusModelParallelLine_PointXYZI_Ptr_t
 */
typedef pcl::SampleConsensusModelParallelLine<struct pcl::PointXYZRGBA>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelParallelLine_PointXYZRGBA_t;

/* "pcl_sample_consensus.pxd":1788
 * ctypedef SampleConsensusModelParallelLine[cpp.PointXYZRGB] SampleConsensusModelParallelLine_PointXYZRGB_t
 * ctypedef SampleConsensusModelParallelLine[cpp.PointXYZRGBA] SampleConsensusModelParallelLine_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelParallelLine[cpp.PointXYZ]] SampleConsensusModelParallelLinePtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelParallelLine[cpp.PointXYZI]] SampleConsensusModelParallelLine_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelParallelLine[cpp.PointXYZRGB]] SampleConsensusModelParallelLine_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelParallelLine<struct pcl::PointXYZ> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelParallelLinePtr_t;

/* "pcl_sample_consensus.pxd":1789
 * ctypedef SampleConsensusModelParallelLine[cpp.PointXYZRGBA] SampleConsensusModelParallelLine_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelParallelLine[cpp.PointXYZ]] SampleConsensusModelParallelLinePtr_t
 * ctypedef shared_ptr[SampleConsensusModelParallelLine[cpp.PointXYZI]] SampleConsensusModelParallelLine_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelParallelLine[cpp.PointXYZRGB]] SampleConsensusModelParallelLine_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelParallelLine[cpp.PointXYZRGBA]] SampleConsensusModelParallelLine_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelParallelLine<struct pcl::PointXYZI> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelParallelLine_PointXYZI_Ptr_t;

/* "pcl_sample_consensus.pxd":1790
 * ctypedef shared_ptr[SampleConsensusModelParallelLine[cpp.PointXYZ]] SampleConsensusModelParallelLinePtr_t
 * ctypedef shared_ptr[SampleConsensusModelParallelLine[cpp.PointXYZI]] SampleConsensusModelParallelLine_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelParallelLine[cpp.PointXYZRGB]] SampleConsensusModelParallelLine_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelParallelLine[cpp.PointXYZRGBA]] SampleConsensusModelParallelLine_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelParallelLine[cpp.PointXYZ]] SampleConsensusModelParallelLineConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelParallelLine<struct pcl::PointXYZRGB> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelParallelLine_PointXYZRGB_Ptr_t;

/* "pcl_sample_consensus.pxd":1791
 * ctypedef shared_ptr[SampleConsensusModelParallelLine[cpp.PointXYZI]] SampleConsensusModelParallelLine_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelParallelLine[cpp.PointXYZRGB]] SampleConsensusModelParallelLine_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelParallelLine[cpp.PointXYZRGBA]] SampleConsensusModelParallelLine_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelParallelLine[cpp.PointXYZ]] SampleConsensusModelParallelLineConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelParallelLine[cpp.PointXYZI]] SampleConsensusModelParallelLine_PointXYZI_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelParallelLine<struct pcl::PointXYZRGBA> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelParallelLine_PointXYZRGBA_Ptr_t;

/* "pcl_sample_consensus.pxd":1792
 * ctypedef shared_ptr[SampleConsensusModelParallelLine[cpp.PointXYZRGB]] SampleConsensusModelParallelLine_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelParallelLine[cpp.PointXYZRGBA]] SampleConsensusModelParallelLine_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelParallelLine[cpp.PointXYZ]] SampleConsensusModelParallelLineConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelParallelLine[cpp.PointXYZI]] SampleConsensusModelParallelLine_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelParallelLine[cpp.PointXYZRGB]] SampleConsensusModelParallelLine_PointXYZRGB_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelParallelLine<struct pcl::PointXYZ>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelParallelLineConstPtr_t;

/* "pcl_sample_consensus.pxd":1793
 * ctypedef shared_ptr[SampleConsensusModelParallelLine[cpp.PointXYZRGBA]] SampleConsensusModelParallelLine_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelParallelLine[cpp.PointXYZ]] SampleConsensusModelParallelLineConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelParallelLine[cpp.PointXYZI]] SampleConsensusModelParallelLine_PointXYZI_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelParallelLine[cpp.PointXYZRGB]] SampleConsensusModelParallelLine_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelParallelLine[cpp.PointXYZRGBA]] SampleConsensusModelParallelLine_PointXYZRGBA_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelParallelLine<struct pcl::PointXYZI>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelParallelLine_PointXYZI_ConstPtr_t;

/* "pcl_sample_consensus.pxd":1794
 * ctypedef shared_ptr[const SampleConsensusModelParallelLine[cpp.PointXYZ]] SampleConsensusModelParallelLineConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelParallelLine[cpp.PointXYZI]] SampleConsensusModelParallelLine_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelParallelLine[cpp.PointXYZRGB]] SampleConsensusModelParallelLine_PointXYZRGB_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelParallelLine[cpp.PointXYZRGBA]] SampleConsensusModelParallelLine_PointXYZRGBA_ConstPtr_t
 * ###
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelParallelLine<struct pcl::PointXYZRGB>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelParallelLine_PointXYZRGB_ConstPtr_t;

/* "pcl_sample_consensus.pxd":1795
 * ctypedef shared_ptr[const SampleConsensusModelParallelLine[cpp.PointXYZI]] SampleConsensusModelParallelLine_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelParallelLine[cpp.PointXYZRGB]] SampleConsensusModelParallelLine_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelParallelLine[cpp.PointXYZRGBA]] SampleConsensusModelParallelLine_PointXYZRGBA_ConstPtr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelParallelLine<struct pcl::PointXYZRGBA>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelParallelLine_PointXYZRGBA_ConstPtr_t;

/* "pcl_sample_consensus.pxd":1882
 * 
 * 
 * ctypedef SampleConsensusModelParallelPlane[cpp.PointXYZ] SampleConsensusModelParallelPlane_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelParallelPlane[cpp.PointXYZI] SampleConsensusModelParallelPlane_PointXYZI_t
 * ctypedef SampleConsensusModelParallelPlane[cpp.PointXYZRGB] SampleConsensusModelParallelPlane_PointXYZRGB_t
 */
typedef pcl::SampleConsensusModelParallelPlane<struct pcl::PointXYZ>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelParallelPlane_t;

/* "pcl_sample_consensus.pxd":1883
 * 
 * ctypedef SampleConsensusModelParallelPlane[cpp.PointXYZ] SampleConsensusModelParallelPlane_t
 * ctypedef SampleConsensusModelParallelPlane[cpp.PointXYZI] SampleConsensusModelParallelPlane_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelParallelPlane[cpp.PointXYZRGB] SampleConsensusModelParallelPlane_PointXYZRGB_t
 * ctypedef SampleConsensusModelParallelPlane[cpp.PointXYZRGBA] SampleConsensusModelParallelPlane_PointXYZRGBA_t
 */
typedef pcl::SampleConsensusModelParallelPlane<struct pcl::PointXYZI>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelParallelPlane_PointXYZI_t;

/* "pcl_sample_consensus.pxd":1884
 * ctypedef SampleConsensusModelParallelPlane[cpp.PointXYZ] SampleConsensusModelParallelPlane_t
 * ctypedef SampleConsensusModelParallelPlane[cpp.PointXYZI] SampleConsensusModelParallelPlane_PointXYZI_t
 * ctypedef SampleConsensusModelParallelPlane[cpp.PointXYZRGB] SampleConsensusModelParallelPlane_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelParallelPlane[cpp.PointXYZRGBA] SampleConsensusModelParallelPlane_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelParallelPlane[cpp.PointXYZ]] SampleConsensusModelParallelPlanePtr_t
 */
typedef pcl::SampleConsensusModelParallelPlane<struct pcl::PointXYZRGB>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelParallelPlane_PointXYZRGB_t;

/* "pcl_sample_consensus.pxd":1885
 * ctypedef SampleConsensusModelParallelPlane[cpp.PointXYZI] SampleConsensusModelParallelPlane_PointXYZI_t
 * ctypedef SampleConsensusModelParallelPlane[cpp.PointXYZRGB] SampleConsensusModelParallelPlane_PointXYZRGB_t
 * ctypedef SampleConsensusModelParallelPlane[cpp.PointXYZRGBA] SampleConsensusModelParallelPlane_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelParallelPlane[cpp.PointXYZ]] SampleConsensusModelParallelPlanePtr_t
 * ctypedef shared_ptr[SampleConsensusModelParallelPlane[cpp.PointXYZI]] SampleConsensusModelParallelPlane_PointXYZI_Ptr_t
 */
typedef pcl::SampleConsensusModelParallelPlane<struct pcl::PointXYZRGBA>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelParallelPlane_PointXYZRGBA_t;

/* "pcl_sample_consensus.pxd":1886
 * ctypedef SampleConsensusModelParallelPlane[cpp.PointXYZRGB] SampleConsensusModelParallelPlane_PointXYZRGB_t
 * ctypedef SampleConsensusModelParallelPlane[cpp.PointXYZRGBA] SampleConsensusModelParallelPlane_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelParallelPlane[cpp.PointXYZ]] SampleConsensusModelParallelPlanePtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelParallelPlane[cpp.PointXYZI]] SampleConsensusModelParallelPlane_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelParallelPlane[cpp.PointXYZRGB]] SampleConsensusModelParallelPlane_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelParallelPlane<struct pcl::PointXYZ> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelParallelPlanePtr_t;

/* "pcl_sample_consensus.pxd":1887
 * ctypedef SampleConsensusModelParallelPlane[cpp.PointXYZRGBA] SampleConsensusModelParallelPlane_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelParallelPlane[cpp.PointXYZ]] SampleConsensusModelParallelPlanePtr_t
 * ctypedef shared_ptr[SampleConsensusModelParallelPlane[cpp.PointXYZI]] SampleConsensusModelParallelPlane_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelParallelPlane[cpp.PointXYZRGB]] SampleConsensusModelParallelPlane_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelParallelPlane[cpp.PointXYZRGBA]] SampleConsensusModelParallelPlane_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelParallelPlane<struct pcl::PointXYZI> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelParallelPlane_PointXYZI_Ptr_t;

/* "pcl_sample_consensus.pxd":1888
 * ctypedef shared_ptr[SampleConsensusModelParallelPlane[cpp.PointXYZ]] SampleConsensusModelParallelPlanePtr_t
 * ctypedef shared_ptr[SampleConsensusModelParallelPlane[cpp.PointXYZI]] SampleConsensusModelParallelPlane_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelParallelPlane[cpp.PointXYZRGB]] SampleConsensusModelParallelPlane_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelParallelPlane[cpp.PointXYZRGBA]] SampleConsensusModelParallelPlane_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelParallelPlane[cpp.PointXYZ]] SampleConsensusModelParallelPlaneConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelParallelPlane<struct pcl::PointXYZRGB> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelParallelPlane_PointXYZRGB_Ptr_t;

/* "pcl_sample_consensus.pxd":1889
 * ctypedef shared_ptr[SampleConsensusModelParallelPlane[cpp.PointXYZI]] SampleConsensusModelParallelPlane_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelParallelPlane[cpp.PointXYZRGB]] SampleConsensusModelParallelPlane_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelParallelPlane[cpp.PointXYZRGBA]] SampleConsensusModelParallelPlane_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelParallelPlane[cpp.PointXYZ]] SampleConsensusModelParallelPlaneConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelParallelPlane[cpp.PointXYZI]] SampleConsensusModelParallelPlane_PointXYZI_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelParallelPlane<struct pcl::PointXYZRGBA> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelParallelPlane_PointXYZRGBA_Ptr_t;

/* "pcl_sample_consensus.pxd":1890
 * ctypedef shared_ptr[SampleConsensusModelParallelPlane[cpp.PointXYZRGB]] SampleConsensusModelParallelPlane_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelParallelPlane[cpp.PointXYZRGBA]] SampleConsensusModelParallelPlane_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelParallelPlane[cpp.PointXYZ]] SampleConsensusModelParallelPlaneConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelParallelPlane[cpp.PointXYZI]] SampleConsensusModelParallelPlane_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelParallelPlane[cpp.PointXYZRGB]] SampleConsensusModelParallelPlane_PointXYZRGB_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelParallelPlane<struct pcl::PointXYZ>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelParallelPlaneConstPtr_t;

/* "pcl_sample_consensus.pxd":1891
 * ctypedef shared_ptr[SampleConsensusModelParallelPlane[cpp.PointXYZRGBA]] SampleConsensusModelParallelPlane_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelParallelPlane[cpp.PointXYZ]] SampleConsensusModelParallelPlaneConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelParallelPlane[cpp.PointXYZI]] SampleConsensusModelParallelPlane_PointXYZI_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelParallelPlane[cpp.PointXYZRGB]] SampleConsensusModelParallelPlane_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelParallelPlane[cpp.PointXYZRGBA]] SampleConsensusModelParallelPlane_PointXYZRGBA_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelParallelPlane<struct pcl::PointXYZI>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelParallelPlane_PointXYZI_ConstPtr_t;

/* "pcl_sample_consensus.pxd":1892
 * ctypedef shared_ptr[const SampleConsensusModelParallelPlane[cpp.PointXYZ]] SampleConsensusModelParallelPlaneConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelParallelPlane[cpp.PointXYZI]] SampleConsensusModelParallelPlane_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelParallelPlane[cpp.PointXYZRGB]] SampleConsensusModelParallelPlane_PointXYZRGB_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelParallelPlane[cpp.PointXYZRGBA]] SampleConsensusModelParallelPlane_PointXYZRGBA_ConstPtr_t
 * ###
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelParallelPlane<struct pcl::PointXYZRGB>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelParallelPlane_PointXYZRGB_ConstPtr_t;

/* "pcl_sample_consensus.pxd":1893
 * ctypedef shared_ptr[const SampleConsensusModelParallelPlane[cpp.PointXYZI]] SampleConsensusModelParallelPlane_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelParallelPlane[cpp.PointXYZRGB]] SampleConsensusModelParallelPlane_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelParallelPlane[cpp.PointXYZRGBA]] SampleConsensusModelParallelPlane_PointXYZRGBA_ConstPtr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelParallelPlane<struct pcl::PointXYZRGBA>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelParallelPlane_PointXYZRGBA_ConstPtr_t;

/* "pcl_sample_consensus.pxd":1984
 * 
 * 
 * ctypedef SampleConsensusModelPerpendicularPlane[cpp.PointXYZ] SampleConsensusModelPerpendicularPlane_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelPerpendicularPlane[cpp.PointXYZI] SampleConsensusModelPerpendicularPlane_PointXYZI_t
 * ctypedef SampleConsensusModelPerpendicularPlane[cpp.PointXYZRGB] SampleConsensusModelPerpendicularPlane_PointXYZRGB_t
 */
typedef pcl::SampleConsensusModelPerpendicularPlane<struct pcl::PointXYZ>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelPerpendicularPlane_t;

/* "pcl_sample_consensus.pxd":1985
 * 
 * ctypedef SampleConsensusModelPerpendicularPlane[cpp.PointXYZ] SampleConsensusModelPerpendicularPlane_t
 * ctypedef SampleConsensusModelPerpendicularPlane[cpp.PointXYZI] SampleConsensusModelPerpendicularPlane_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelPerpendicularPlane[cpp.PointXYZRGB] SampleConsensusModelPerpendicularPlane_PointXYZRGB_t
 * ctypedef SampleConsensusModelPerpendicularPlane[cpp.PointXYZRGBA] SampleConsensusModelPerpendicularPlane_PointXYZRGBA_t
 */
typedef pcl::SampleConsensusModelPerpendicularPlane<struct pcl::PointXYZI>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelPerpendicularPlane_PointXYZI_t;

/* "pcl_sample_consensus.pxd":1986
 * ctypedef SampleConsensusModelPerpendicularPlane[cpp.PointXYZ] SampleConsensusModelPerpendicularPlane_t
 * ctypedef SampleConsensusModelPerpendicularPlane[cpp.PointXYZI] SampleConsensusModelPerpendicularPlane_PointXYZI_t
 * ctypedef SampleConsensusModelPerpendicularPlane[cpp.PointXYZRGB] SampleConsensusModelPerpendicularPlane_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelPerpendicularPlane[cpp.PointXYZRGBA] SampleConsensusModelPerpendicularPlane_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelPerpendicularPlane[cpp.PointXYZ]] SampleConsensusModelPerpendicularPlanePtr_t
 */
typedef pcl::SampleConsensusModelPerpendicularPlane<struct pcl::PointXYZRGB>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelPerpendicularPlane_PointXYZRGB_t;

/* "pcl_sample_consensus.pxd":1987
 * ctypedef SampleConsensusModelPerpendicularPlane[cpp.PointXYZI] SampleConsensusModelPerpendicularPlane_PointXYZI_t
 * ctypedef SampleConsensusModelPerpendicularPlane[cpp.PointXYZRGB] SampleConsensusModelPerpendicularPlane_PointXYZRGB_t
 * ctypedef SampleConsensusModelPerpendicularPlane[cpp.PointXYZRGBA] SampleConsensusModelPerpendicularPlane_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelPerpendicularPlane[cpp.PointXYZ]] SampleConsensusModelPerpendicularPlanePtr_t
 * ctypedef shared_ptr[SampleConsensusModelPerpendicularPlane[cpp.PointXYZI]] SampleConsensusModelPerpendicularPlane_PointXYZI_Ptr_t
 */
typedef pcl::SampleConsensusModelPerpendicularPlane<struct pcl::PointXYZRGBA>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelPerpendicularPlane_PointXYZRGBA_t;

/* "pcl_sample_consensus.pxd":1988
 * ctypedef SampleConsensusModelPerpendicularPlane[cpp.PointXYZRGB] SampleConsensusModelPerpendicularPlane_PointXYZRGB_t
 * ctypedef SampleConsensusModelPerpendicularPlane[cpp.PointXYZRGBA] SampleConsensusModelPerpendicularPlane_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelPerpendicularPlane[cpp.PointXYZ]] SampleConsensusModelPerpendicularPlanePtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelPerpendicularPlane[cpp.PointXYZI]] SampleConsensusModelPerpendicularPlane_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelPerpendicularPlane[cpp.PointXYZRGB]] SampleConsensusModelPerpendicularPlane_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelPerpendicularPlane<struct pcl::PointXYZ> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelPerpendicularPlanePtr_t;

/* "pcl_sample_consensus.pxd":1989
 * ctypedef SampleConsensusModelPerpendicularPlane[cpp.PointXYZRGBA] SampleConsensusModelPerpendicularPlane_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelPerpendicularPlane[cpp.PointXYZ]] SampleConsensusModelPerpendicularPlanePtr_t
 * ctypedef shared_ptr[SampleConsensusModelPerpendicularPlane[cpp.PointXYZI]] SampleConsensusModelPerpendicularPlane_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelPerpendicularPlane[cpp.PointXYZRGB]] SampleConsensusModelPerpendicularPlane_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelPerpendicularPlane[cpp.PointXYZRGBA]] SampleConsensusModelPerpendicularPlane_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelPerpendicularPlane<struct pcl::PointXYZI> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelPerpendicularPlane_PointXYZI_Ptr_t;

/* "pcl_sample_consensus.pxd":1990
 * ctypedef shared_ptr[SampleConsensusModelPerpendicularPlane[cpp.PointXYZ]] SampleConsensusModelPerpendicularPlanePtr_t
 * ctypedef shared_ptr[SampleConsensusModelPerpendicularPlane[cpp.PointXYZI]] SampleConsensusModelPerpendicularPlane_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelPerpendicularPlane[cpp.PointXYZRGB]] SampleConsensusModelPerpendicularPlane_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelPerpendicularPlane[cpp.PointXYZRGBA]] SampleConsensusModelPerpendicularPlane_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelPerpendicularPlane[cpp.PointXYZ]] SampleConsensusModelPerpendicularPlaneConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelPerpendicularPlane<struct pcl::PointXYZRGB> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelPerpendicularPlane_PointXYZRGB_Ptr_t;

/* "pcl_sample_consensus.pxd":1991
 * ctypedef shared_ptr[SampleConsensusModelPerpendicularPlane[cpp.PointXYZI]] SampleConsensusModelPerpendicularPlane_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelPerpendicularPlane[cpp.PointXYZRGB]] SampleConsensusModelPerpendicularPlane_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelPerpendicularPlane[cpp.PointXYZRGBA]] SampleConsensusModelPerpendicularPlane_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelPerpendicularPlane[cpp.PointXYZ]] SampleConsensusModelPerpendicularPlaneConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelPerpendicularPlane[cpp.PointXYZI]] SampleConsensusModelPerpendicularPlane_PointXYZI_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelPerpendicularPlane<struct pcl::PointXYZRGBA> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelPerpendicularPlane_PointXYZRGBA_Ptr_t;

/* "pcl_sample_consensus.pxd":1992
 * ctypedef shared_ptr[SampleConsensusModelPerpendicularPlane[cpp.PointXYZRGB]] SampleConsensusModelPerpendicularPlane_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelPerpendicularPlane[cpp.PointXYZRGBA]] SampleConsensusModelPerpendicularPlane_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelPerpendicularPlane[cpp.PointXYZ]] SampleConsensusModelPerpendicularPlaneConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelPerpendicularPlane[cpp.PointXYZI]] SampleConsensusModelPerpendicularPlane_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelPerpendicularPlane[cpp.PointXYZRGB]] SampleConsensusModelPerpendicularPlane_PointXYZRGB_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelPerpendicularPlane<struct pcl::PointXYZ>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelPerpendicularPlaneConstPtr_t;

/* "pcl_sample_consensus.pxd":1993
 * ctypedef shared_ptr[SampleConsensusModelPerpendicularPlane[cpp.PointXYZRGBA]] SampleConsensusModelPerpendicularPlane_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelPerpendicularPlane[cpp.PointXYZ]] SampleConsensusModelPerpendicularPlaneConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelPerpendicularPlane[cpp.PointXYZI]] SampleConsensusModelPerpendicularPlane_PointXYZI_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelPerpendicularPlane[cpp.PointXYZRGB]] SampleConsensusModelPerpendicularPlane_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelPerpendicularPlane[cpp.PointXYZRGBA]] SampleConsensusModelPerpendicularPlane_PointXYZRGBA_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelPerpendicularPlane<struct pcl::PointXYZI>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelPerpendicularPlane_PointXYZI_ConstPtr_t;

/* "pcl_sample_consensus.pxd":1994
 * ctypedef shared_ptr[const SampleConsensusModelPerpendicularPlane[cpp.PointXYZ]] SampleConsensusModelPerpendicularPlaneConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelPerpendicularPlane[cpp.PointXYZI]] SampleConsensusModelPerpendicularPlane_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelPerpendicularPlane[cpp.PointXYZRGB]] SampleConsensusModelPerpendicularPlane_PointXYZRGB_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelPerpendicularPlane[cpp.PointXYZRGBA]] SampleConsensusModelPerpendicularPlane_PointXYZRGBA_ConstPtr_t
 * ###
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelPerpendicularPlane<struct pcl::PointXYZRGB>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelPerpendicularPlane_PointXYZRGB_ConstPtr_t;

/* "pcl_sample_consensus.pxd":1995
 * ctypedef shared_ptr[const SampleConsensusModelPerpendicularPlane[cpp.PointXYZI]] SampleConsensusModelPerpendicularPlane_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelPerpendicularPlane[cpp.PointXYZRGB]] SampleConsensusModelPerpendicularPlane_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelPerpendicularPlane[cpp.PointXYZRGBA]] SampleConsensusModelPerpendicularPlane_PointXYZRGBA_ConstPtr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelPerpendicularPlane<struct pcl::PointXYZRGBA>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelPerpendicularPlane_PointXYZRGBA_ConstPtr_t;

/* "pcl_sample_consensus.pxd":2096
 * 
 * 
 * ctypedef SampleConsensusModelRegistration[cpp.PointXYZ] SampleConsensusModelRegistration_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelRegistration[cpp.PointXYZI] SampleConsensusModelRegistration_PointXYZI_t
 * ctypedef SampleConsensusModelRegistration[cpp.PointXYZRGB] SampleConsensusModelRegistration_PointXYZRGB_t
 */
typedef pcl::SampleConsensusModelRegistration<struct pcl::PointXYZ>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelRegistration_t;

/* "pcl_sample_consensus.pxd":2097
 * 
 * ctypedef SampleConsensusModelRegistration[cpp.PointXYZ] SampleConsensusModelRegistration_t
 * ctypedef SampleConsensusModelRegistration[cpp.PointXYZI] SampleConsensusModelRegistration_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelRegistration[cpp.PointXYZRGB] SampleConsensusModelRegistration_PointXYZRGB_t
 * ctypedef SampleConsensusModelRegistration[cpp.PointXYZRGBA] SampleConsensusModelRegistration_PointXYZRGBA_t
 */
typedef pcl::SampleConsensusModelRegistration<struct pcl::PointXYZI>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelRegistration_PointXYZI_t;

/* "pcl_sample_consensus.pxd":2098
 * ctypedef SampleConsensusModelRegistration[cpp.PointXYZ] SampleConsensusModelRegistration_t
 * ctypedef SampleConsensusModelRegistration[cpp.PointXYZI] SampleConsensusModelRegistration_PointXYZI_t
 * ctypedef SampleConsensusModelRegistration[cpp.PointXYZRGB] SampleConsensusModelRegistration_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelRegistration[cpp.PointXYZRGBA] SampleConsensusModelRegistration_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelRegistration[cpp.PointXYZ]] SampleConsensusModelRegistrationPtr_t
 */
typedef pcl::SampleConsensusModelRegistration<struct pcl::PointXYZRGB>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelRegistration_PointXYZRGB_t;

/* "pcl_sample_consensus.pxd":2099
 * ctypedef SampleConsensusModelRegistration[cpp.PointXYZI] SampleConsensusModelRegistration_PointXYZI_t
 * ctypedef SampleConsensusModelRegistration[cpp.PointXYZRGB] SampleConsensusModelRegistration_PointXYZRGB_t
 * ctypedef SampleConsensusModelRegistration[cpp.PointXYZRGBA] SampleConsensusModelRegistration_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelRegistration[cpp.PointXYZ]] SampleConsensusModelRegistrationPtr_t
 * ctypedef shared_ptr[SampleConsensusModelRegistration[cpp.PointXYZI]] SampleConsensusModelRegistration_PointXYZI_Ptr_t
 */
typedef pcl::SampleConsensusModelRegistration<struct pcl::PointXYZRGBA>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelRegistration_PointXYZRGBA_t;

/* "pcl_sample_consensus.pxd":2100
 * ctypedef SampleConsensusModelRegistration[cpp.PointXYZRGB] SampleConsensusModelRegistration_PointXYZRGB_t
 * ctypedef SampleConsensusModelRegistration[cpp.PointXYZRGBA] SampleConsensusModelRegistration_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelRegistration[cpp.PointXYZ]] SampleConsensusModelRegistrationPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelRegistration[cpp.PointXYZI]] SampleConsensusModelRegistration_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelRegistration[cpp.PointXYZRGB]] SampleConsensusModelRegistration_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelRegistration<struct pcl::PointXYZ> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelRegistrationPtr_t;

/* "pcl_sample_consensus.pxd":2101
 * ctypedef SampleConsensusModelRegistration[cpp.PointXYZRGBA] SampleConsensusModelRegistration_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelRegistration[cpp.PointXYZ]] SampleConsensusModelRegistrationPtr_t
 * ctypedef shared_ptr[SampleConsensusModelRegistration[cpp.PointXYZI]] SampleConsensusModelRegistration_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelRegistration[cpp.PointXYZRGB]] SampleConsensusModelRegistration_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelRegistration[cpp.PointXYZRGBA]] SampleConsensusModelRegistration_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelRegistration<struct pcl::PointXYZI> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelRegistration_PointXYZI_Ptr_t;

/* "pcl_sample_consensus.pxd":2102
 * ctypedef shared_ptr[SampleConsensusModelRegistration[cpp.PointXYZ]] SampleConsensusModelRegistrationPtr_t
 * ctypedef shared_ptr[SampleConsensusModelRegistration[cpp.PointXYZI]] SampleConsensusModelRegistration_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelRegistration[cpp.PointXYZRGB]] SampleConsensusModelRegistration_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelRegistration[cpp.PointXYZRGBA]] SampleConsensusModelRegistration_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelRegistration[cpp.PointXYZ]] SampleConsensusModelRegistrationConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelRegistration<struct pcl::PointXYZRGB> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelRegistration_PointXYZRGB_Ptr_t;

/* "pcl_sample_consensus.pxd":2103
 * ctypedef shared_ptr[SampleConsensusModelRegistration[cpp.PointXYZI]] SampleConsensusModelRegistration_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelRegistration[cpp.PointXYZRGB]] SampleConsensusModelRegistration_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelRegistration[cpp.PointXYZRGBA]] SampleConsensusModelRegistration_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelRegistration[cpp.PointXYZ]] SampleConsensusModelRegistrationConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelRegistration[cpp.PointXYZI]] SampleConsensusModelRegistration_PointXYZI_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelRegistration<struct pcl::PointXYZRGBA> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelRegistration_PointXYZRGBA_Ptr_t;

/* "pcl_sample_consensus.pxd":2104
 * ctypedef shared_ptr[SampleConsensusModelRegistration[cpp.PointXYZRGB]] SampleConsensusModelRegistration_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelRegistration[cpp.PointXYZRGBA]] SampleConsensusModelRegistration_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelRegistration[cpp.PointXYZ]] SampleConsensusModelRegistrationConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelRegistration[cpp.PointXYZI]] SampleConsensusModelRegistration_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelRegistration[cpp.PointXYZRGB]] SampleConsensusModelRegistration_PointXYZRGB_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelRegistration<struct pcl::PointXYZ>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelRegistrationConstPtr_t;

/* "pcl_sample_consensus.pxd":2105
 * ctypedef shared_ptr[SampleConsensusModelRegistration[cpp.PointXYZRGBA]] SampleConsensusModelRegistration_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelRegistration[cpp.PointXYZ]] SampleConsensusModelRegistrationConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelRegistration[cpp.PointXYZI]] SampleConsensusModelRegistration_PointXYZI_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelRegistration[cpp.PointXYZRGB]] SampleConsensusModelRegistration_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelRegistration[cpp.PointXYZRGBA]] SampleConsensusModelRegistration_PointXYZRGBA_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelRegistration<struct pcl::PointXYZI>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelRegistration_PointXYZI_ConstPtr_t;

/* "pcl_sample_consensus.pxd":2106
 * ctypedef shared_ptr[const SampleConsensusModelRegistration[cpp.PointXYZ]] SampleConsensusModelRegistrationConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelRegistration[cpp.PointXYZI]] SampleConsensusModelRegistration_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelRegistration[cpp.PointXYZRGB]] SampleConsensusModelRegistration_PointXYZRGB_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelRegistration[cpp.PointXYZRGBA]] SampleConsensusModelRegistration_PointXYZRGBA_ConstPtr_t
 * ###
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelRegistration<struct pcl::PointXYZRGB>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelRegistration_PointXYZRGB_ConstPtr_t;

/* "pcl_sample_consensus.pxd":2107
 * ctypedef shared_ptr[const SampleConsensusModelRegistration[cpp.PointXYZI]] SampleConsensusModelRegistration_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelRegistration[cpp.PointXYZRGB]] SampleConsensusModelRegistration_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelRegistration[cpp.PointXYZRGBA]] SampleConsensusModelRegistration_PointXYZRGBA_ConstPtr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelRegistration<struct pcl::PointXYZRGBA>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelRegistration_PointXYZRGBA_ConstPtr_t;

/* "pcl_sample_consensus.pxd":2208
 * 
 * 
 * ctypedef SampleConsensusModelStick[cpp.PointXYZ] SampleConsensusModelStick_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelStick[cpp.PointXYZI] SampleConsensusModelStick_PointXYZI_t
 * ctypedef SampleConsensusModelStick[cpp.PointXYZRGB] SampleConsensusModelStick_PointXYZRGB_t
 */
typedef pcl::SampleConsensusModelStick<struct pcl::PointXYZ>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelStick_t;

/* "pcl_sample_consensus.pxd":2209
 * 
 * ctypedef SampleConsensusModelStick[cpp.PointXYZ] SampleConsensusModelStick_t
 * ctypedef SampleConsensusModelStick[cpp.PointXYZI] SampleConsensusModelStick_PointXYZI_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelStick[cpp.PointXYZRGB] SampleConsensusModelStick_PointXYZRGB_t
 * ctypedef SampleConsensusModelStick[cpp.PointXYZRGBA] SampleConsensusModelStick_PointXYZRGBA_t
 */
typedef pcl::SampleConsensusModelStick<struct pcl::PointXYZI>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelStick_PointXYZI_t;

/* "pcl_sample_consensus.pxd":2210
 * ctypedef SampleConsensusModelStick[cpp.PointXYZ] SampleConsensusModelStick_t
 * ctypedef SampleConsensusModelStick[cpp.PointXYZI] SampleConsensusModelStick_PointXYZI_t
 * ctypedef SampleConsensusModelStick[cpp.PointXYZRGB] SampleConsensusModelStick_PointXYZRGB_t             # <<<<<<<<<<<<<<
 * ctypedef SampleConsensusModelStick[cpp.PointXYZRGBA] SampleConsensusModelStick_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelStick[cpp.PointXYZ]] SampleConsensusModelStickPtr_t
 */
typedef pcl::SampleConsensusModelStick<struct pcl::PointXYZRGB>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelStick_PointXYZRGB_t;

/* "pcl_sample_consensus.pxd":2211
 * ctypedef SampleConsensusModelStick[cpp.PointXYZI] SampleConsensusModelStick_PointXYZI_t
 * ctypedef SampleConsensusModelStick[cpp.PointXYZRGB] SampleConsensusModelStick_PointXYZRGB_t
 * ctypedef SampleConsensusModelStick[cpp.PointXYZRGBA] SampleConsensusModelStick_PointXYZRGBA_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelStick[cpp.PointXYZ]] SampleConsensusModelStickPtr_t
 * ctypedef shared_ptr[SampleConsensusModelStick[cpp.PointXYZI]] SampleConsensusModelStick_PointXYZI_Ptr_t
 */
typedef pcl::SampleConsensusModelStick<struct pcl::PointXYZRGBA>  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelStick_PointXYZRGBA_t;

/* "pcl_sample_consensus.pxd":2212
 * ctypedef SampleConsensusModelStick[cpp.PointXYZRGB] SampleConsensusModelStick_PointXYZRGB_t
 * ctypedef SampleConsensusModelStick[cpp.PointXYZRGBA] SampleConsensusModelStick_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelStick[cpp.PointXYZ]] SampleConsensusModelStickPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelStick[cpp.PointXYZI]] SampleConsensusModelStick_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelStick[cpp.PointXYZRGB]] SampleConsensusModelStick_PointXYZRGB_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelStick<struct pcl::PointXYZ> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelStickPtr_t;

/* "pcl_sample_consensus.pxd":2213
 * ctypedef SampleConsensusModelStick[cpp.PointXYZRGBA] SampleConsensusModelStick_PointXYZRGBA_t
 * ctypedef shared_ptr[SampleConsensusModelStick[cpp.PointXYZ]] SampleConsensusModelStickPtr_t
 * ctypedef shared_ptr[SampleConsensusModelStick[cpp.PointXYZI]] SampleConsensusModelStick_PointXYZI_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelStick[cpp.PointXYZRGB]] SampleConsensusModelStick_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelStick[cpp.PointXYZRGBA]] SampleConsensusModelStick_PointXYZRGBA_Ptr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelStick<struct pcl::PointXYZI> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelStick_PointXYZI_Ptr_t;

/* "pcl_sample_consensus.pxd":2214
 * ctypedef shared_ptr[SampleConsensusModelStick[cpp.PointXYZ]] SampleConsensusModelStickPtr_t
 * ctypedef shared_ptr[SampleConsensusModelStick[cpp.PointXYZI]] SampleConsensusModelStick_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelStick[cpp.PointXYZRGB]] SampleConsensusModelStick_PointXYZRGB_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[SampleConsensusModelStick[cpp.PointXYZRGBA]] SampleConsensusModelStick_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelStick[cpp.PointXYZ]] SampleConsensusModelStickConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelStick<struct pcl::PointXYZRGB> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelStick_PointXYZRGB_Ptr_t;

/* "pcl_sample_consensus.pxd":2215
 * ctypedef shared_ptr[SampleConsensusModelStick[cpp.PointXYZI]] SampleConsensusModelStick_PointXYZI_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelStick[cpp.PointXYZRGB]] SampleConsensusModelStick_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelStick[cpp.PointXYZRGBA]] SampleConsensusModelStick_PointXYZRGBA_Ptr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelStick[cpp.PointXYZ]] SampleConsensusModelStickConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelStick[cpp.PointXYZI]] SampleConsensusModelStick_PointXYZI_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelStick<struct pcl::PointXYZRGBA> >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelStick_PointXYZRGBA_Ptr_t;

/* "pcl_sample_consensus.pxd":2216
 * ctypedef shared_ptr[SampleConsensusModelStick[cpp.PointXYZRGB]] SampleConsensusModelStick_PointXYZRGB_Ptr_t
 * ctypedef shared_ptr[SampleConsensusModelStick[cpp.PointXYZRGBA]] SampleConsensusModelStick_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelStick[cpp.PointXYZ]] SampleConsensusModelStickConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelStick[cpp.PointXYZI]] SampleConsensusModelStick_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelStick[cpp.PointXYZRGB]] SampleConsensusModelStick_PointXYZRGB_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelStick<struct pcl::PointXYZ>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelStickConstPtr_t;

/* "pcl_sample_consensus.pxd":2217
 * ctypedef shared_ptr[SampleConsensusModelStick[cpp.PointXYZRGBA]] SampleConsensusModelStick_PointXYZRGBA_Ptr_t
 * ctypedef shared_ptr[const SampleConsensusModelStick[cpp.PointXYZ]] SampleConsensusModelStickConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelStick[cpp.PointXYZI]] SampleConsensusModelStick_PointXYZI_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelStick[cpp.PointXYZRGB]] SampleConsensusModelStick_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelStick[cpp.PointXYZRGBA]] SampleConsensusModelStick_PointXYZRGBA_ConstPtr_t
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelStick<struct pcl::PointXYZI>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelStick_PointXYZI_ConstPtr_t;

/* "pcl_sample_consensus.pxd":2218
 * ctypedef shared_ptr[const SampleConsensusModelStick[cpp.PointXYZ]] SampleConsensusModelStickConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelStick[cpp.PointXYZI]] SampleConsensusModelStick_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelStick[cpp.PointXYZRGB]] SampleConsensusModelStick_PointXYZRGB_ConstPtr_t             # <<<<<<<<<<<<<<
 * ctypedef shared_ptr[const SampleConsensusModelStick[cpp.PointXYZRGBA]] SampleConsensusModelStick_PointXYZRGBA_ConstPtr_t
 * ###
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelStick<struct pcl::PointXYZRGB>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelStick_PointXYZRGB_ConstPtr_t;

/* "pcl_sample_consensus.pxd":2219
 * ctypedef shared_ptr[const SampleConsensusModelStick[cpp.PointXYZI]] SampleConsensusModelStick_PointXYZI_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelStick[cpp.PointXYZRGB]] SampleConsensusModelStick_PointXYZRGB_ConstPtr_t
 * ctypedef shared_ptr[const SampleConsensusModelStick[cpp.PointXYZRGBA]] SampleConsensusModelStick_PointXYZRGBA_ConstPtr_t             # <<<<<<<<<<<<<<
 * ###
 * 
 */
typedef boost::shared_ptr<pcl::SampleConsensusModelStick<struct pcl::PointXYZRGBA>  const >  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelStick_PointXYZRGBA_ConstPtr_t;

/* "_pcl.pxd":15
 * 
 * # class override(PointCloud)
 * cdef class PointCloud:             # <<<<<<<<<<<<<<
 *     cdef cpp.PointCloudPtr_t thisptr_shared     # XYZ
 * 
 */
struct __pyx_obj_3pcl_4_pcl_PointCloud {
  PyObject_HEAD
  struct __pyx_vtabstruct_3pcl_4_pcl_PointCloud *__pyx_vtab;
  __pyx_t_3pcl_8pcl_defs_PointCloudPtr_t thisptr_shared;
  Py_ssize_t _shape[2];
  Py_ssize_t _view_count;
};


/* "_pcl.pxd":28
 * 
 * # class override(PointCloud_PointXYZI)
 * cdef class PointCloud_PointXYZI:             # <<<<<<<<<<<<<<
 *     cdef cpp.PointCloud_PointXYZI_Ptr_t thisptr_shared     # XYZI
 * 
 */
struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZI {
  PyObject_HEAD
  struct __pyx_vtabstruct_3pcl_4_pcl_PointCloud_PointXYZI *__pyx_vtab;
  __pyx_t_3pcl_8pcl_defs_PointCloud_PointXYZI_Ptr_t thisptr_shared;
  Py_ssize_t _shape[2];
  Py_ssize_t _view_count;
};


/* "_pcl.pxd":41
 * 
 * # class override(PointCloud_PointXYZRGB)
 * cdef class PointCloud_PointXYZRGB:             # <<<<<<<<<<<<<<
 *     cdef cpp.PointCloud_PointXYZRGB_Ptr_t thisptr_shared
 * 
 */
struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZRGB {
  PyObject_HEAD
  struct __pyx_vtabstruct_3pcl_4_pcl_PointCloud_PointXYZRGB *__pyx_vtab;
  __pyx_t_3pcl_8pcl_defs_PointCloud_PointXYZRGB_Ptr_t thisptr_shared;
  Py_ssize_t _shape[2];
  Py_ssize_t _view_count;
};


/* "_pcl.pxd":54
 * 
 * # class override(PointCloud_PointXYZRGBA)
 * cdef class PointCloud_PointXYZRGBA:             # <<<<<<<<<<<<<<
 *     cdef cpp.PointCloud_PointXYZRGBA_Ptr_t thisptr_shared   # XYZRGBA
 * 
 */
struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZRGBA {
  PyObject_HEAD
  struct __pyx_vtabstruct_3pcl_4_pcl_PointCloud_PointXYZRGBA *__pyx_vtab;
  __pyx_t_3pcl_8pcl_defs_PointCloud_PointXYZRGBA_Ptr_t thisptr_shared;
  Py_ssize_t _shape[2];
  Py_ssize_t _view_count;
};


/* "_pcl.pxd":66
 * 
 * # class override
 * cdef class Vertices:             # <<<<<<<<<<<<<<
 *     cdef cpp.VerticesPtr_t thisptr_shared     # Vertices
 * 
 */
struct __pyx_obj_3pcl_4_pcl_Vertices {
  PyObject_HEAD
  struct __pyx_vtabstruct_3pcl_4_pcl_Vertices *__pyx_vtab;
  __pyx_t_3pcl_8pcl_defs_VerticesPtr_t thisptr_shared;
  Py_ssize_t _shape[2];
  Py_ssize_t _view_count;
};


/* "_pcl.pxd":78
 * 
 * # class override(PointCloud_PointWithViewpoint)
 * cdef class PointCloud_PointWithViewpoint:             # <<<<<<<<<<<<<<
 *     cdef cpp.PointCloud_PointWithViewpoint_Ptr_t thisptr_shared   # PointWithViewpoint
 * 
 */
struct __pyx_obj_3pcl_4_pcl_PointCloud_PointWithViewpoint {
  PyObject_HEAD
  struct __pyx_vtabstruct_3pcl_4_pcl_PointCloud_PointWithViewpoint *__pyx_vtab;
  __pyx_t_3pcl_8pcl_defs_PointCloud_PointWithViewpoint_Ptr_t thisptr_shared;
  Py_ssize_t _shape[2];
  Py_ssize_t _view_count;
};


/* "_pcl.pxd":91
 * 
 * # class override(PointCloud_Normal)
 * cdef class PointCloud_Normal:             # <<<<<<<<<<<<<<
 *     cdef cpp.PointCloud_Normal_Ptr_t thisptr_shared   # Normal
 * 
 */
struct __pyx_obj_3pcl_4_pcl_PointCloud_Normal {
  PyObject_HEAD
  struct __pyx_vtabstruct_3pcl_4_pcl_PointCloud_Normal *__pyx_vtab;
  __pyx_t_3pcl_8pcl_defs_PointCloud_Normal_Ptr_t thisptr_shared;
  Py_ssize_t _shape[2];
  Py_ssize_t _view_count;
};


/* "_pcl.pxd":104
 * 
 * # class override(PointCloud_PointNormal)
 * cdef class PointCloud_PointNormal:             # <<<<<<<<<<<<<<
 *     cdef cpp.PointCloud_PointNormal_Ptr_t thisptr_shared   # PointNormal
 * 
 */
struct __pyx_obj_3pcl_4_pcl_PointCloud_PointNormal {
  PyObject_HEAD
  struct __pyx_vtabstruct_3pcl_4_pcl_PointCloud_PointNormal *__pyx_vtab;
  __pyx_t_3pcl_8pcl_defs_PointCloud_PointNormal_Ptr_t thisptr_shared;
  Py_ssize_t _shape[2];
  Py_ssize_t _view_count;
};


/* "_pcl.pxd":118
 * ## KdTree
 * # class override
 * cdef class KdTree:             # <<<<<<<<<<<<<<
 *     cdef pclkdt.KdTreePtr_t thisptr_shared   # KdTree
 * 
 */
struct __pyx_obj_3pcl_4_pcl_KdTree {
  PyObject_HEAD
  struct __pyx_vtabstruct_3pcl_4_pcl_KdTree *__pyx_vtab;
  __pyx_t_3pcl_10pcl_kdtree_KdTreePtr_t thisptr_shared;
};


/* "_pcl.pxd":135
 * ## RangeImages
 * # class override
 * cdef class RangeImages:             # <<<<<<<<<<<<<<
 *     cdef pcl_rngimg.RangeImagePtr_t thisptr_shared   # RangeImages
 * 
 */
struct __pyx_obj_3pcl_4_pcl_RangeImages {
  PyObject_HEAD
  struct __pyx_vtabstruct_3pcl_4_pcl_RangeImages *__pyx_vtab;
  __pyx_t_3pcl_15pcl_range_image_RangeImagePtr_t thisptr_shared;
};


/* "_pcl.pxd":163
 * ## SampleConsensus
 * # class override
 * cdef class SampleConsensusModel:             # <<<<<<<<<<<<<<
 *     cdef pcl_sac.SampleConsensusModelPtr_t thisptr_shared     # SampleConsensusModel
 * 
 */
struct __pyx_obj_3pcl_4_pcl_SampleConsensusModel {
  PyObject_HEAD
  struct __pyx_vtabstruct_3pcl_4_pcl_SampleConsensusModel *__pyx_vtab;
  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelPtr_t thisptr_shared;
};


/* "_pcl.pxd":170
 *         return self.thisptr_shared.get()
 * 
 * cdef class SampleConsensusModelPlane:             # <<<<<<<<<<<<<<
 *     cdef pcl_sac.SampleConsensusModelPlanePtr_t thisptr_shared     # SampleConsensusModelPlane
 * 
 */
struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelPlane {
  PyObject_HEAD
  struct __pyx_vtabstruct_3pcl_4_pcl_SampleConsensusModelPlane *__pyx_vtab;
  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelPlanePtr_t thisptr_shared;
};


/* "_pcl.pxd":177
 *         return self.thisptr_shared.get()
 * 
 * cdef class SampleConsensusModelSphere:             # <<<<<<<<<<<<<<
 *     cdef pcl_sac.SampleConsensusModelSpherePtr_t thisptr_shared     # SampleConsensusModelSphere
 * 
 */
struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelSphere {
  PyObject_HEAD
  struct __pyx_vtabstruct_3pcl_4_pcl_SampleConsensusModelSphere *__pyx_vtab;
  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelSpherePtr_t thisptr_shared;
};


/* "_pcl.pxd":184
 *         return self.thisptr_shared.get()
 * 
 * cdef class SampleConsensusModelCylinder:             # <<<<<<<<<<<<<<
 *     cdef pcl_sac.SampleConsensusModelCylinderPtr_t thisptr_shared     # SampleConsensusModelSphere
 * 
 */
struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelCylinder {
  PyObject_HEAD
  struct __pyx_vtabstruct_3pcl_4_pcl_SampleConsensusModelCylinder *__pyx_vtab;
  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelCylinderPtr_t thisptr_shared;
};


/* "_pcl.pxd":191
 *         return self.thisptr_shared.get()
 * 
 * cdef class SampleConsensusModelLine:             # <<<<<<<<<<<<<<
 *     cdef pcl_sac.SampleConsensusModelLinePtr_t thisptr_shared     # SampleConsensusModelLine
 * 
 */
struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelLine {
  PyObject_HEAD
  struct __pyx_vtabstruct_3pcl_4_pcl_SampleConsensusModelLine *__pyx_vtab;
  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelLinePtr_t thisptr_shared;
};


/* "_pcl.pxd":198
 *         return self.thisptr_shared.get()
 * 
 * cdef class SampleConsensusModelRegistration:             # <<<<<<<<<<<<<<
 *     cdef pcl_sac.SampleConsensusModelRegistrationPtr_t thisptr_shared     # SampleConsensusModelRegistration
 * 
 */
struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelRegistration {
  PyObject_HEAD
  struct __pyx_vtabstruct_3pcl_4_pcl_SampleConsensusModelRegistration *__pyx_vtab;
  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelRegistrationPtr_t thisptr_shared;
};


/* "_pcl.pxd":205
 *         return self.thisptr_shared.get()
 * 
 * cdef class SampleConsensusModelStick:             # <<<<<<<<<<<<<<
 *     cdef pcl_sac.SampleConsensusModelStickPtr_t thisptr_shared     # SampleConsensusModelStick
 * 
 */
struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelStick {
  PyObject_HEAD
  struct __pyx_vtabstruct_3pcl_4_pcl_SampleConsensusModelStick *__pyx_vtab;
  __pyx_t_3pcl_20pcl_sample_consensus_SampleConsensusModelStickPtr_t thisptr_shared;
};


/* "pcl/pcl_visualization.pxd":16
 * 
 * # class override(PointCloud)
 * cdef class PointCloudColorHandleringCustom:             # <<<<<<<<<<<<<<
 *     cdef vis.PointCloudColorHandlerCustom_Ptr_t thisptr_shared     # PointCloudColorHandlerCustom[PointXYZ]
 * 
 */
struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringCustom {
  PyObject_HEAD
  struct __pyx_vtabstruct_3pcl_17pcl_visualization_PointCloudColorHandleringCustom *__pyx_vtab;
  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerCustom_Ptr_t thisptr_shared;
};


/* "pcl/pcl_visualization.pxd":27
 * 
 * 
 * cdef class PointCloudGeometryHandleringCustom:             # <<<<<<<<<<<<<<
 *     cdef vis.PointCloudGeometryHandlerCustom_Ptr_t thisptr_shared     # PointCloudGeometryHandlerCustom[PointXYZ]
 * 
 */
struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom {
  PyObject_HEAD
  struct __pyx_vtabstruct_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom *__pyx_vtab;
  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudGeometryHandlerCustom_Ptr_t thisptr_shared;
};


/* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringGenericField.pxi":9
 * from boost_shared_ptr cimport sp_assign
 * 
 * cdef class PointCloudColorHandleringGenericField:             # <<<<<<<<<<<<<<
 *     """
 *     """
 */
struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringGenericField {
  PyObject_HEAD
  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerGenericField_t *me;
};


/* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringHSVField.pxi":9
 * from boost_shared_ptr cimport sp_assign
 * 
 * cdef class PointCloudColorHandleringHSVField:             # <<<<<<<<<<<<<<
 *     """
 *     """
 */
struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringHSVField {
  PyObject_HEAD
  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerHSVField_t *me;
};


/* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringRandom.pxi":9
 * from boost_shared_ptr cimport sp_assign
 * 
 * cdef class PointCloudColorHandleringRandom:             # <<<<<<<<<<<<<<
 *     """
 *     """
 */
struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringRandom {
  PyObject_HEAD
  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerRandom_t *me;
};


/* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringRGBField.pxi":9
 * from boost_shared_ptr cimport sp_assign
 * 
 * cdef class PointCloudColorHandleringRGBField:             # <<<<<<<<<<<<<<
 *     """
 *     """
 */
struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringRGBField {
  PyObject_HEAD
  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerRGBField_t *me;
};


/* "pcl/pxi/Visualization/Handler/PointCloudGeometryHandleringCustom.pxi":9
 * from boost_shared_ptr cimport sp_assign
 * 
 * cdef class PointCloudGeometryHandlerCustom:             # <<<<<<<<<<<<<<
 *     """
 *     """
 */
struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandlerCustom {
  PyObject_HEAD
  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudGeometryHandlerCustom_t *me;
};


/* "pcl/pxi/Visualization/Handler/PointCloudGeometryHandleringSurfaceNormal.pxi":9
 * from boost_shared_ptr cimport sp_assign
 * 
 * cdef class PointCloudGeometryHandleringSurfaceNormal:             # <<<<<<<<<<<<<<
 *     """
 *     """
 */
struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandleringSurfaceNormal {
  PyObject_HEAD
  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudGeometryHandlerSurfaceNormal_t *me;
};


/* "pcl/pxi/Visualization/Handler/PointCloudGeometryHandleringXYZ.pxi":9
 * from boost_shared_ptr cimport sp_assign
 * 
 * cdef class PointCloudGeometryHandleringXYZ:             # <<<<<<<<<<<<<<
 *     """
 *     """
 */
struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandleringXYZ {
  PyObject_HEAD
  __pyx_t_3pcl_22pcl_visualization_defs_PointCloudGeometryHandlerXYZ_t *me;
};


/* "pcl/pxi/Visualization/CloudViewing.pxi":9
 * from boost_shared_ptr cimport sp_assign
 * 
 * cdef class CloudViewing:             # <<<<<<<<<<<<<<
 *     """
 *     """
 */
struct __pyx_obj_3pcl_17pcl_visualization_CloudViewing {
  PyObject_HEAD
  struct __pyx_vtabstruct_3pcl_17pcl_visualization_CloudViewing *__pyx_vtab;
  __pyx_t_3pcl_22pcl_visualization_defs_CloudViewerPtr_t thisptr_shared;
};


/* "pcl/pxi/Visualization/PCLVisualizering.pxi":17
 * 
 * 
 * cdef class PCLVisualizering:             # <<<<<<<<<<<<<<
 *     """
 *     """
 */
struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering {
  PyObject_HEAD
  struct __pyx_vtabstruct_3pcl_17pcl_visualization_PCLVisualizering *__pyx_vtab;
  __pyx_t_3pcl_22pcl_visualization_defs_PCLVisualizerPtr_t thisptr_shared;
};


/* "pcl/pxi/Visualization/PCLHistogramViewing.pxi":10
 * from boost_shared_ptr cimport sp_assign
 * 
 * cdef class PCLHistogramViewing:             # <<<<<<<<<<<<<<
 *     """
 *     """
 */
struct __pyx_obj_3pcl_17pcl_visualization_PCLHistogramViewing {
  PyObject_HEAD
  struct __pyx_vtabstruct_3pcl_17pcl_visualization_PCLHistogramViewing *__pyx_vtab;
  __pyx_t_3pcl_22pcl_visualization_defs_PCLHistogramVisualizerPtr_t thisptr_shared;
};



/* "_pcl.pxd":15
 * 
 * # class override(PointCloud)
 * cdef class PointCloud:             # <<<<<<<<<<<<<<
 *     cdef cpp.PointCloudPtr_t thisptr_shared     # XYZ
 * 
 */

struct __pyx_vtabstruct_3pcl_4_pcl_PointCloud {
  pcl::PointCloud<struct pcl::PointXYZ>  *(*thisptr)(struct __pyx_obj_3pcl_4_pcl_PointCloud *);
};
static struct __pyx_vtabstruct_3pcl_4_pcl_PointCloud *__pyx_vtabptr_3pcl_4_pcl_PointCloud;
static CYTHON_INLINE pcl::PointCloud<struct pcl::PointXYZ>  *__pyx_f_3pcl_4_pcl_10PointCloud_thisptr(struct __pyx_obj_3pcl_4_pcl_PointCloud *);


/* "_pcl.pxd":28
 * 
 * # class override(PointCloud_PointXYZI)
 * cdef class PointCloud_PointXYZI:             # <<<<<<<<<<<<<<
 *     cdef cpp.PointCloud_PointXYZI_Ptr_t thisptr_shared     # XYZI
 * 
 */

struct __pyx_vtabstruct_3pcl_4_pcl_PointCloud_PointXYZI {
  pcl::PointCloud<struct pcl::PointXYZI>  *(*thisptr)(struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZI *);
};
static struct __pyx_vtabstruct_3pcl_4_pcl_PointCloud_PointXYZI *__pyx_vtabptr_3pcl_4_pcl_PointCloud_PointXYZI;
static CYTHON_INLINE pcl::PointCloud<struct pcl::PointXYZI>  *__pyx_f_3pcl_4_pcl_20PointCloud_PointXYZI_thisptr(struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZI *);


/* "_pcl.pxd":41
 * 
 * # class override(PointCloud_PointXYZRGB)
 * cdef class PointCloud_PointXYZRGB:             # <<<<<<<<<<<<<<
 *     cdef cpp.PointCloud_PointXYZRGB_Ptr_t thisptr_shared
 * 
 */

struct __pyx_vtabstruct_3pcl_4_pcl_PointCloud_PointXYZRGB {
  pcl::PointCloud<struct pcl::PointXYZRGB>  *(*thisptr)(struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZRGB *);
};
static struct __pyx_vtabstruct_3pcl_4_pcl_PointCloud_PointXYZRGB *__pyx_vtabptr_3pcl_4_pcl_PointCloud_PointXYZRGB;
static CYTHON_INLINE pcl::PointCloud<struct pcl::PointXYZRGB>  *__pyx_f_3pcl_4_pcl_22PointCloud_PointXYZRGB_thisptr(struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZRGB *);


/* "_pcl.pxd":54
 * 
 * # class override(PointCloud_PointXYZRGBA)
 * cdef class PointCloud_PointXYZRGBA:             # <<<<<<<<<<<<<<
 *     cdef cpp.PointCloud_PointXYZRGBA_Ptr_t thisptr_shared   # XYZRGBA
 * 
 */

struct __pyx_vtabstruct_3pcl_4_pcl_PointCloud_PointXYZRGBA {
  pcl::PointCloud<struct pcl::PointXYZRGBA>  *(*thisptr)(struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZRGBA *);
};
static struct __pyx_vtabstruct_3pcl_4_pcl_PointCloud_PointXYZRGBA *__pyx_vtabptr_3pcl_4_pcl_PointCloud_PointXYZRGBA;
static CYTHON_INLINE pcl::PointCloud<struct pcl::PointXYZRGBA>  *__pyx_f_3pcl_4_pcl_23PointCloud_PointXYZRGBA_thisptr(struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZRGBA *);


/* "_pcl.pxd":66
 * 
 * # class override
 * cdef class Vertices:             # <<<<<<<<<<<<<<
 *     cdef cpp.VerticesPtr_t thisptr_shared     # Vertices
 * 
 */

struct __pyx_vtabstruct_3pcl_4_pcl_Vertices {
  pcl::Vertices *(*thisptr)(struct __pyx_obj_3pcl_4_pcl_Vertices *);
};
static struct __pyx_vtabstruct_3pcl_4_pcl_Vertices *__pyx_vtabptr_3pcl_4_pcl_Vertices;
static CYTHON_INLINE pcl::Vertices *__pyx_f_3pcl_4_pcl_8Vertices_thisptr(struct __pyx_obj_3pcl_4_pcl_Vertices *);


/* "_pcl.pxd":78
 * 
 * # class override(PointCloud_PointWithViewpoint)
 * cdef class PointCloud_PointWithViewpoint:             # <<<<<<<<<<<<<<
 *     cdef cpp.PointCloud_PointWithViewpoint_Ptr_t thisptr_shared   # PointWithViewpoint
 * 
 */

struct __pyx_vtabstruct_3pcl_4_pcl_PointCloud_PointWithViewpoint {
  pcl::PointCloud<struct pcl::PointWithViewpoint>  *(*thisptr)(struct __pyx_obj_3pcl_4_pcl_PointCloud_PointWithViewpoint *);
};
static struct __pyx_vtabstruct_3pcl_4_pcl_PointCloud_PointWithViewpoint *__pyx_vtabptr_3pcl_4_pcl_PointCloud_PointWithViewpoint;
static CYTHON_INLINE pcl::PointCloud<struct pcl::PointWithViewpoint>  *__pyx_f_3pcl_4_pcl_29PointCloud_PointWithViewpoint_thisptr(struct __pyx_obj_3pcl_4_pcl_PointCloud_PointWithViewpoint *);


/* "_pcl.pxd":91
 * 
 * # class override(PointCloud_Normal)
 * cdef class PointCloud_Normal:             # <<<<<<<<<<<<<<
 *     cdef cpp.PointCloud_Normal_Ptr_t thisptr_shared   # Normal
 * 
 */

struct __pyx_vtabstruct_3pcl_4_pcl_PointCloud_Normal {
  pcl::PointCloud<struct pcl::Normal>  *(*thisptr)(struct __pyx_obj_3pcl_4_pcl_PointCloud_Normal *);
};
static struct __pyx_vtabstruct_3pcl_4_pcl_PointCloud_Normal *__pyx_vtabptr_3pcl_4_pcl_PointCloud_Normal;
static CYTHON_INLINE pcl::PointCloud<struct pcl::Normal>  *__pyx_f_3pcl_4_pcl_17PointCloud_Normal_thisptr(struct __pyx_obj_3pcl_4_pcl_PointCloud_Normal *);


/* "_pcl.pxd":104
 * 
 * # class override(PointCloud_PointNormal)
 * cdef class PointCloud_PointNormal:             # <<<<<<<<<<<<<<
 *     cdef cpp.PointCloud_PointNormal_Ptr_t thisptr_shared   # PointNormal
 * 
 */

struct __pyx_vtabstruct_3pcl_4_pcl_PointCloud_PointNormal {
  pcl::PointCloud<struct pcl::PointNormal>  *(*thisptr)(struct __pyx_obj_3pcl_4_pcl_PointCloud_PointNormal *);
};
static struct __pyx_vtabstruct_3pcl_4_pcl_PointCloud_PointNormal *__pyx_vtabptr_3pcl_4_pcl_PointCloud_PointNormal;
static CYTHON_INLINE pcl::PointCloud<struct pcl::PointNormal>  *__pyx_f_3pcl_4_pcl_22PointCloud_PointNormal_thisptr(struct __pyx_obj_3pcl_4_pcl_PointCloud_PointNormal *);


/* "_pcl.pxd":118
 * ## KdTree
 * # class override
 * cdef class KdTree:             # <<<<<<<<<<<<<<
 *     cdef pclkdt.KdTreePtr_t thisptr_shared   # KdTree
 * 
 */

struct __pyx_vtabstruct_3pcl_4_pcl_KdTree {
  pcl::search::KdTree<struct pcl::PointXYZ>  *(*thisptr)(struct __pyx_obj_3pcl_4_pcl_KdTree *);
};
static struct __pyx_vtabstruct_3pcl_4_pcl_KdTree *__pyx_vtabptr_3pcl_4_pcl_KdTree;
static CYTHON_INLINE pcl::search::KdTree<struct pcl::PointXYZ>  *__pyx_f_3pcl_4_pcl_6KdTree_thisptr(struct __pyx_obj_3pcl_4_pcl_KdTree *);


/* "_pcl.pxd":135
 * ## RangeImages
 * # class override
 * cdef class RangeImages:             # <<<<<<<<<<<<<<
 *     cdef pcl_rngimg.RangeImagePtr_t thisptr_shared   # RangeImages
 * 
 */

struct __pyx_vtabstruct_3pcl_4_pcl_RangeImages {
  pcl::RangeImage *(*thisptr)(struct __pyx_obj_3pcl_4_pcl_RangeImages *);
};
static struct __pyx_vtabstruct_3pcl_4_pcl_RangeImages *__pyx_vtabptr_3pcl_4_pcl_RangeImages;
static CYTHON_INLINE pcl::RangeImage *__pyx_f_3pcl_4_pcl_11RangeImages_thisptr(struct __pyx_obj_3pcl_4_pcl_RangeImages *);


/* "_pcl.pxd":163
 * ## SampleConsensus
 * # class override
 * cdef class SampleConsensusModel:             # <<<<<<<<<<<<<<
 *     cdef pcl_sac.SampleConsensusModelPtr_t thisptr_shared     # SampleConsensusModel
 * 
 */

struct __pyx_vtabstruct_3pcl_4_pcl_SampleConsensusModel {
  pcl::SampleConsensusModel<struct pcl::PointXYZ>  *(*thisptr)(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModel *);
};
static struct __pyx_vtabstruct_3pcl_4_pcl_SampleConsensusModel *__pyx_vtabptr_3pcl_4_pcl_SampleConsensusModel;
static CYTHON_INLINE pcl::SampleConsensusModel<struct pcl::PointXYZ>  *__pyx_f_3pcl_4_pcl_20SampleConsensusModel_thisptr(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModel *);


/* "_pcl.pxd":170
 *         return self.thisptr_shared.get()
 * 
 * cdef class SampleConsensusModelPlane:             # <<<<<<<<<<<<<<
 *     cdef pcl_sac.SampleConsensusModelPlanePtr_t thisptr_shared     # SampleConsensusModelPlane
 * 
 */

struct __pyx_vtabstruct_3pcl_4_pcl_SampleConsensusModelPlane {
  pcl::SampleConsensusModelPlane<struct pcl::PointXYZ>  *(*thisptr)(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelPlane *);
};
static struct __pyx_vtabstruct_3pcl_4_pcl_SampleConsensusModelPlane *__pyx_vtabptr_3pcl_4_pcl_SampleConsensusModelPlane;
static CYTHON_INLINE pcl::SampleConsensusModelPlane<struct pcl::PointXYZ>  *__pyx_f_3pcl_4_pcl_25SampleConsensusModelPlane_thisptr(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelPlane *);


/* "_pcl.pxd":177
 *         return self.thisptr_shared.get()
 * 
 * cdef class SampleConsensusModelSphere:             # <<<<<<<<<<<<<<
 *     cdef pcl_sac.SampleConsensusModelSpherePtr_t thisptr_shared     # SampleConsensusModelSphere
 * 
 */

struct __pyx_vtabstruct_3pcl_4_pcl_SampleConsensusModelSphere {
  pcl::SampleConsensusModelSphere<struct pcl::PointXYZ>  *(*thisptr)(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelSphere *);
};
static struct __pyx_vtabstruct_3pcl_4_pcl_SampleConsensusModelSphere *__pyx_vtabptr_3pcl_4_pcl_SampleConsensusModelSphere;
static CYTHON_INLINE pcl::SampleConsensusModelSphere<struct pcl::PointXYZ>  *__pyx_f_3pcl_4_pcl_26SampleConsensusModelSphere_thisptr(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelSphere *);


/* "_pcl.pxd":184
 *         return self.thisptr_shared.get()
 * 
 * cdef class SampleConsensusModelCylinder:             # <<<<<<<<<<<<<<
 *     cdef pcl_sac.SampleConsensusModelCylinderPtr_t thisptr_shared     # SampleConsensusModelSphere
 * 
 */

struct __pyx_vtabstruct_3pcl_4_pcl_SampleConsensusModelCylinder {
  pcl::SampleConsensusModelCylinder<struct pcl::PointXYZ,struct pcl::Normal>  *(*thisptr)(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelCylinder *);
};
static struct __pyx_vtabstruct_3pcl_4_pcl_SampleConsensusModelCylinder *__pyx_vtabptr_3pcl_4_pcl_SampleConsensusModelCylinder;
static CYTHON_INLINE pcl::SampleConsensusModelCylinder<struct pcl::PointXYZ,struct pcl::Normal>  *__pyx_f_3pcl_4_pcl_28SampleConsensusModelCylinder_thisptr(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelCylinder *);


/* "_pcl.pxd":191
 *         return self.thisptr_shared.get()
 * 
 * cdef class SampleConsensusModelLine:             # <<<<<<<<<<<<<<
 *     cdef pcl_sac.SampleConsensusModelLinePtr_t thisptr_shared     # SampleConsensusModelLine
 * 
 */

struct __pyx_vtabstruct_3pcl_4_pcl_SampleConsensusModelLine {
  pcl::SampleConsensusModelLine<struct pcl::PointXYZ>  *(*thisptr)(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelLine *);
};
static struct __pyx_vtabstruct_3pcl_4_pcl_SampleConsensusModelLine *__pyx_vtabptr_3pcl_4_pcl_SampleConsensusModelLine;
static CYTHON_INLINE pcl::SampleConsensusModelLine<struct pcl::PointXYZ>  *__pyx_f_3pcl_4_pcl_24SampleConsensusModelLine_thisptr(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelLine *);


/* "_pcl.pxd":198
 *         return self.thisptr_shared.get()
 * 
 * cdef class SampleConsensusModelRegistration:             # <<<<<<<<<<<<<<
 *     cdef pcl_sac.SampleConsensusModelRegistrationPtr_t thisptr_shared     # SampleConsensusModelRegistration
 * 
 */

struct __pyx_vtabstruct_3pcl_4_pcl_SampleConsensusModelRegistration {
  pcl::SampleConsensusModelRegistration<struct pcl::PointXYZ>  *(*thisptr)(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelRegistration *);
};
static struct __pyx_vtabstruct_3pcl_4_pcl_SampleConsensusModelRegistration *__pyx_vtabptr_3pcl_4_pcl_SampleConsensusModelRegistration;
static CYTHON_INLINE pcl::SampleConsensusModelRegistration<struct pcl::PointXYZ>  *__pyx_f_3pcl_4_pcl_32SampleConsensusModelRegistration_thisptr(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelRegistration *);


/* "_pcl.pxd":205
 *         return self.thisptr_shared.get()
 * 
 * cdef class SampleConsensusModelStick:             # <<<<<<<<<<<<<<
 *     cdef pcl_sac.SampleConsensusModelStickPtr_t thisptr_shared     # SampleConsensusModelStick
 * 
 */

struct __pyx_vtabstruct_3pcl_4_pcl_SampleConsensusModelStick {
  pcl::SampleConsensusModelStick<struct pcl::PointXYZ>  *(*thisptr)(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelStick *);
};
static struct __pyx_vtabstruct_3pcl_4_pcl_SampleConsensusModelStick *__pyx_vtabptr_3pcl_4_pcl_SampleConsensusModelStick;
static CYTHON_INLINE pcl::SampleConsensusModelStick<struct pcl::PointXYZ>  *__pyx_f_3pcl_4_pcl_25SampleConsensusModelStick_thisptr(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelStick *);


/* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringCustom.pxi":13
 * from boost_shared_ptr cimport sp_assign
 * 
 * cdef class PointCloudColorHandleringCustom:             # <<<<<<<<<<<<<<
 *     """
 *     """
 */

struct __pyx_vtabstruct_3pcl_17pcl_visualization_PointCloudColorHandleringCustom {
  pcl::visualization::PointCloudColorHandlerCustom<struct pcl::PointXYZ>  *(*thisptr)(struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringCustom *);
};
static struct __pyx_vtabstruct_3pcl_17pcl_visualization_PointCloudColorHandleringCustom *__pyx_vtabptr_3pcl_17pcl_visualization_PointCloudColorHandleringCustom;
static CYTHON_INLINE pcl::visualization::PointCloudColorHandlerCustom<struct pcl::PointXYZ>  *__pyx_f_3pcl_17pcl_visualization_31PointCloudColorHandleringCustom_thisptr(struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringCustom *);


/* "pcl/pcl_visualization.pxd":27
 * 
 * 
 * cdef class PointCloudGeometryHandleringCustom:             # <<<<<<<<<<<<<<
 *     cdef vis.PointCloudGeometryHandlerCustom_Ptr_t thisptr_shared     # PointCloudGeometryHandlerCustom[PointXYZ]
 * 
 */

struct __pyx_vtabstruct_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom {
  pcl::visualization::PointCloudGeometryHandlerCustom<struct pcl::PointXYZ>  *(*thisptr)(struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom *);
};
static struct __pyx_vtabstruct_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom *__pyx_vtabptr_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom;
static CYTHON_INLINE pcl::visualization::PointCloudGeometryHandlerCustom<struct pcl::PointXYZ>  *__pyx_f_3pcl_17pcl_visualization_34PointCloudGeometryHandleringCustom_thisptr(struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom *);


/* "pcl/pxi/Visualization/CloudViewing.pxi":9
 * from boost_shared_ptr cimport sp_assign
 * 
 * cdef class CloudViewing:             # <<<<<<<<<<<<<<
 *     """
 *     """
 */

struct __pyx_vtabstruct_3pcl_17pcl_visualization_CloudViewing {
  pcl::visualization::CloudViewer *(*thisptr)(struct __pyx_obj_3pcl_17pcl_visualization_CloudViewing *);
};
static struct __pyx_vtabstruct_3pcl_17pcl_visualization_CloudViewing *__pyx_vtabptr_3pcl_17pcl_visualization_CloudViewing;
static CYTHON_INLINE pcl::visualization::CloudViewer *__pyx_f_3pcl_17pcl_visualization_12CloudViewing_thisptr(struct __pyx_obj_3pcl_17pcl_visualization_CloudViewing *);


/* "pcl/pxi/Visualization/PCLVisualizering.pxi":17
 * 
 * 
 * cdef class PCLVisualizering:             # <<<<<<<<<<<<<<
 *     """
 *     """
 */

struct __pyx_vtabstruct_3pcl_17pcl_visualization_PCLVisualizering {
  pcl::visualization::PCLVisualizer *(*thisptr)(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *);
};
static struct __pyx_vtabstruct_3pcl_17pcl_visualization_PCLVisualizering *__pyx_vtabptr_3pcl_17pcl_visualization_PCLVisualizering;
static CYTHON_INLINE pcl::visualization::PCLVisualizer *__pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *);


/* "pcl/pxi/Visualization/PCLHistogramViewing.pxi":10
 * from boost_shared_ptr cimport sp_assign
 * 
 * cdef class PCLHistogramViewing:             # <<<<<<<<<<<<<<
 *     """
 *     """
 */

struct __pyx_vtabstruct_3pcl_17pcl_visualization_PCLHistogramViewing {
  pcl::visualization::PCLHistogramVisualizer *(*thisptr)(struct __pyx_obj_3pcl_17pcl_visualization_PCLHistogramViewing *);
};
static struct __pyx_vtabstruct_3pcl_17pcl_visualization_PCLHistogramViewing *__pyx_vtabptr_3pcl_17pcl_visualization_PCLHistogramViewing;
static CYTHON_INLINE pcl::visualization::PCLHistogramVisualizer *__pyx_f_3pcl_17pcl_visualization_19PCLHistogramViewing_thisptr(struct __pyx_obj_3pcl_17pcl_visualization_PCLHistogramViewing *);

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* KeywordStringCheck.proto */
static CYTHON_INLINE int __Pyx_CheckKeywordStrings(PyObject *kwdict, const char* function_name, int kw_allowed);

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

/* ArgTypeTest.proto */
static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact);

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = PyThreadState_GET();
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* WriteUnraisableException.proto */
static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename,
                                  int full_traceback, int nogil);

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* DictGetItem.proto */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (!PyErr_Occurred()) {
            PyObject* args = PyTuple_Pack(1, key);
            if (likely(args))
                PyErr_SetObject(PyExc_KeyError, args);
            Py_XDECREF(args);
        }
        return NULL;
    }
    Py_INCREF(value);
    return value;
}
#else
    #define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#endif

/* RaiseTooManyValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

/* RaiseNeedMoreValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

/* RaiseNoneIterError.proto */
static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

/* ExtTypeTest.proto */
static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type);

/* SaveResetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
#else
#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)
#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)
#endif

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* GetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_GetException(type, value, tb)  __Pyx__GetException(__pyx_tstate, type, value, tb)
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* SetVTable.proto */
static int __Pyx_SetVtable(PyObject *dict, void *vtable);

/* GetVTable.proto */
static void* __Pyx_GetVtable(PyObject *dict);

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* ImportFrom.proto */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

/* CodeObjectCache.proto */
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* None.proto */
#include <new>

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__pcl_3a__3a_visualization_3a__3a_RenderingProperties(enum pcl::visualization::RenderingProperties value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__pcl_3a__3a_visualization_3a__3a_RenderingRepresentationProperties(enum pcl::visualization::RenderingRepresentationProperties value);

/* Print.proto */
static int __Pyx_Print(PyObject*, PyObject *, int);
#if CYTHON_COMPILING_IN_PYPY || PY_MAJOR_VERSION >= 3
static PyObject* __pyx_print = 0;
static PyObject* __pyx_print_kwargs = 0;
#endif

/* RealImag.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #define __Pyx_CREAL(z) ((z).real())
    #define __Pyx_CIMAG(z) ((z).imag())
  #else
    #define __Pyx_CREAL(z) (__real__(z))
    #define __Pyx_CIMAG(z) (__imag__(z))
  #endif
#else
    #define __Pyx_CREAL(z) ((z).real)
    #define __Pyx_CIMAG(z) ((z).imag)
#endif
#if defined(__cplusplus) && CYTHON_CCOMPLEX\
        && (defined(_WIN32) || defined(__clang__) || (defined(__GNUC__) && (__GNUC__ >= 5 || __GNUC__ == 4 && __GNUC_MINOR__ >= 4 )) || __cplusplus >= 201103)
    #define __Pyx_SET_CREAL(z,x) ((z).real(x))
    #define __Pyx_SET_CIMAG(z,y) ((z).imag(y))
#else
    #define __Pyx_SET_CREAL(z,x) __Pyx_CREAL(z) = (x)
    #define __Pyx_SET_CIMAG(z,y) __Pyx_CIMAG(z) = (y)
#endif

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq_float(a, b)   ((a)==(b))
    #define __Pyx_c_sum_float(a, b)  ((a)+(b))
    #define __Pyx_c_diff_float(a, b) ((a)-(b))
    #define __Pyx_c_prod_float(a, b) ((a)*(b))
    #define __Pyx_c_quot_float(a, b) ((a)/(b))
    #define __Pyx_c_neg_float(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_float(z) ((z)==(float)0)
    #define __Pyx_c_conj_float(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_float(z)     (::std::abs(z))
        #define __Pyx_c_pow_float(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_float(z) ((z)==0)
    #define __Pyx_c_conj_float(z)    (conjf(z))
    #if 1
        #define __Pyx_c_abs_float(z)     (cabsf(z))
        #define __Pyx_c_pow_float(a, b)  (cpowf(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sum_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_diff_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prod_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_neg_float(__pyx_t_float_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_float(__pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conj_float(__pyx_t_float_complex);
    #if 1
        static CYTHON_INLINE float __Pyx_c_abs_float(__pyx_t_float_complex);
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_pow_float(__pyx_t_float_complex, __pyx_t_float_complex);
    #endif
#endif

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq_double(a, b)   ((a)==(b))
    #define __Pyx_c_sum_double(a, b)  ((a)+(b))
    #define __Pyx_c_diff_double(a, b) ((a)-(b))
    #define __Pyx_c_prod_double(a, b) ((a)*(b))
    #define __Pyx_c_quot_double(a, b) ((a)/(b))
    #define __Pyx_c_neg_double(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_double(z) ((z)==(double)0)
    #define __Pyx_c_conj_double(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (::std::abs(z))
        #define __Pyx_c_pow_double(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_double(z) ((z)==0)
    #define __Pyx_c_conj_double(z)    (conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (cabs(z))
        #define __Pyx_c_pow_double(a, b)  (cpow(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex);
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex);
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex, __pyx_t_double_complex);
    #endif
#endif

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__NPY_TYPES(enum NPY_TYPES value);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* PrintOne.proto */
static int __Pyx_PrintOne(PyObject* stream, PyObject *o);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* PyIdentifierFromString.proto */
#if !defined(__Pyx_PyIdentifier_FromString)
#if PY_MAJOR_VERSION < 3
  #define __Pyx_PyIdentifier_FromString(s) PyString_FromString(s)
#else
  #define __Pyx_PyIdentifier_FromString(s) PyUnicode_FromString(s)
#endif
#endif

/* ModuleImport.proto */
static PyObject *__Pyx_ImportModule(const char *name);

/* TypeImport.proto */
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name, size_t size, int strict);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

static CYTHON_INLINE pcl::visualization::CloudViewer *__pyx_f_3pcl_17pcl_visualization_12CloudViewing_thisptr(struct __pyx_obj_3pcl_17pcl_visualization_CloudViewing *__pyx_v_self); /* proto*/
static CYTHON_INLINE pcl::visualization::PCLVisualizer *__pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self); /* proto*/
static CYTHON_INLINE pcl::visualization::PCLHistogramVisualizer *__pyx_f_3pcl_17pcl_visualization_19PCLHistogramViewing_thisptr(struct __pyx_obj_3pcl_17pcl_visualization_PCLHistogramViewing *__pyx_v_self); /* proto*/
static CYTHON_INLINE pcl::PointCloud<struct pcl::PointXYZ>  *__pyx_f_3pcl_4_pcl_10PointCloud_thisptr(struct __pyx_obj_3pcl_4_pcl_PointCloud *__pyx_v_self); /* proto*/
static CYTHON_INLINE pcl::PointCloud<struct pcl::PointXYZI>  *__pyx_f_3pcl_4_pcl_20PointCloud_PointXYZI_thisptr(struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZI *__pyx_v_self); /* proto*/
static CYTHON_INLINE pcl::PointCloud<struct pcl::PointXYZRGB>  *__pyx_f_3pcl_4_pcl_22PointCloud_PointXYZRGB_thisptr(struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZRGB *__pyx_v_self); /* proto*/
static CYTHON_INLINE pcl::PointCloud<struct pcl::PointXYZRGBA>  *__pyx_f_3pcl_4_pcl_23PointCloud_PointXYZRGBA_thisptr(struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZRGBA *__pyx_v_self); /* proto*/
static CYTHON_INLINE pcl::Vertices *__pyx_f_3pcl_4_pcl_8Vertices_thisptr(struct __pyx_obj_3pcl_4_pcl_Vertices *__pyx_v_self); /* proto*/
static CYTHON_INLINE pcl::PointCloud<struct pcl::PointWithViewpoint>  *__pyx_f_3pcl_4_pcl_29PointCloud_PointWithViewpoint_thisptr(struct __pyx_obj_3pcl_4_pcl_PointCloud_PointWithViewpoint *__pyx_v_self); /* proto*/
static CYTHON_INLINE pcl::PointCloud<struct pcl::Normal>  *__pyx_f_3pcl_4_pcl_17PointCloud_Normal_thisptr(struct __pyx_obj_3pcl_4_pcl_PointCloud_Normal *__pyx_v_self); /* proto*/
static CYTHON_INLINE pcl::PointCloud<struct pcl::PointNormal>  *__pyx_f_3pcl_4_pcl_22PointCloud_PointNormal_thisptr(struct __pyx_obj_3pcl_4_pcl_PointCloud_PointNormal *__pyx_v_self); /* proto*/
static CYTHON_INLINE pcl::search::KdTree<struct pcl::PointXYZ>  *__pyx_f_3pcl_4_pcl_6KdTree_thisptr(struct __pyx_obj_3pcl_4_pcl_KdTree *__pyx_v_self); /* proto*/
static CYTHON_INLINE pcl::RangeImage *__pyx_f_3pcl_4_pcl_11RangeImages_thisptr(struct __pyx_obj_3pcl_4_pcl_RangeImages *__pyx_v_self); /* proto*/
static CYTHON_INLINE pcl::SampleConsensusModel<struct pcl::PointXYZ>  *__pyx_f_3pcl_4_pcl_20SampleConsensusModel_thisptr(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModel *__pyx_v_self); /* proto*/
static CYTHON_INLINE pcl::SampleConsensusModelPlane<struct pcl::PointXYZ>  *__pyx_f_3pcl_4_pcl_25SampleConsensusModelPlane_thisptr(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelPlane *__pyx_v_self); /* proto*/
static CYTHON_INLINE pcl::SampleConsensusModelSphere<struct pcl::PointXYZ>  *__pyx_f_3pcl_4_pcl_26SampleConsensusModelSphere_thisptr(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelSphere *__pyx_v_self); /* proto*/
static CYTHON_INLINE pcl::SampleConsensusModelCylinder<struct pcl::PointXYZ,struct pcl::Normal>  *__pyx_f_3pcl_4_pcl_28SampleConsensusModelCylinder_thisptr(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelCylinder *__pyx_v_self); /* proto*/
static CYTHON_INLINE pcl::SampleConsensusModelLine<struct pcl::PointXYZ>  *__pyx_f_3pcl_4_pcl_24SampleConsensusModelLine_thisptr(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelLine *__pyx_v_self); /* proto*/
static CYTHON_INLINE pcl::SampleConsensusModelRegistration<struct pcl::PointXYZ>  *__pyx_f_3pcl_4_pcl_32SampleConsensusModelRegistration_thisptr(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelRegistration *__pyx_v_self); /* proto*/
static CYTHON_INLINE pcl::SampleConsensusModelStick<struct pcl::PointXYZ>  *__pyx_f_3pcl_4_pcl_25SampleConsensusModelStick_thisptr(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelStick *__pyx_v_self); /* proto*/
static CYTHON_INLINE pcl::visualization::PointCloudColorHandlerCustom<struct pcl::PointXYZ>  *__pyx_f_3pcl_17pcl_visualization_31PointCloudColorHandleringCustom_thisptr(struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringCustom *__pyx_v_self); /* proto*/
static CYTHON_INLINE pcl::visualization::PointCloudGeometryHandlerCustom<struct pcl::PointXYZ>  *__pyx_f_3pcl_17pcl_visualization_34PointCloudGeometryHandleringCustom_thisptr(struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom *__pyx_v_self); /* proto*/

/* Module declarations from 'libc.stddef' */

/* Module declarations from 'libcpp.vector' */

/* Module declarations from 'libc.string' */

/* Module declarations from 'libcpp.string' */

/* Module declarations from 'libcpp' */

/* Module declarations from 'pcl.boost_shared_ptr' */

/* Module declarations from 'pcl.vector' */

/* Module declarations from 'pcl.eigen' */

/* Module declarations from 'pcl.pcl_defs' */

/* Module declarations from 'pcl.pcl_range_image' */

/* Module declarations from 'pcl.pcl_visualization_defs' */

/* Module declarations from 'cpython.buffer' */

/* Module declarations from 'libc.stdio' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.type' */
static PyTypeObject *__pyx_ptype_7cpython_4type_type = 0;

/* Module declarations from 'cpython.version' */

/* Module declarations from 'cpython.exc' */

/* Module declarations from 'cpython.module' */

/* Module declarations from 'cpython.mem' */

/* Module declarations from 'cpython.tuple' */

/* Module declarations from 'cpython.list' */

/* Module declarations from 'cpython.sequence' */

/* Module declarations from 'cpython.mapping' */

/* Module declarations from 'cpython.iterator' */

/* Module declarations from 'cpython.number' */

/* Module declarations from 'cpython.int' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.bool' */
static PyTypeObject *__pyx_ptype_7cpython_4bool_bool = 0;

/* Module declarations from 'cpython.long' */

/* Module declarations from 'cpython.float' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.complex' */
static PyTypeObject *__pyx_ptype_7cpython_7complex_complex = 0;

/* Module declarations from 'cpython.string' */

/* Module declarations from 'cpython.unicode' */

/* Module declarations from 'cpython.dict' */

/* Module declarations from 'cpython.instance' */

/* Module declarations from 'cpython.function' */

/* Module declarations from 'cpython.method' */

/* Module declarations from 'cpython.weakref' */

/* Module declarations from 'cpython.getargs' */

/* Module declarations from 'cpython.pythread' */

/* Module declarations from 'cpython.pystate' */

/* Module declarations from 'cpython.cobject' */

/* Module declarations from 'cpython.oldbuffer' */

/* Module declarations from 'cpython.set' */

/* Module declarations from 'cpython.bytes' */

/* Module declarations from 'cpython.pycapsule' */

/* Module declarations from 'cpython' */

/* Module declarations from 'cpython.object' */

/* Module declarations from 'cpython.ref' */

/* Module declarations from 'libc.stdlib' */

/* Module declarations from 'numpy' */

/* Module declarations from 'numpy' */
static PyTypeObject *__pyx_ptype_5numpy_dtype = 0;
static PyTypeObject *__pyx_ptype_5numpy_flatiter = 0;
static PyTypeObject *__pyx_ptype_5numpy_broadcast = 0;
static PyTypeObject *__pyx_ptype_5numpy_ndarray = 0;
static PyTypeObject *__pyx_ptype_5numpy_ufunc = 0;
static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *, char *, char *, int *); /*proto*/
static CYTHON_INLINE int __pyx_f_5numpy_import_array(void); /*proto*/

/* Module declarations from 'cython' */

/* Module declarations from 'pcl.pcl_kdtree' */

/* Module declarations from 'pcl.pcl_features' */

/* Module declarations from 'pcl.pcl_sample_consensus' */

/* Module declarations from 'pcl._pcl' */
static PyTypeObject *__pyx_ptype_3pcl_4_pcl_PointCloud = 0;
static PyTypeObject *__pyx_ptype_3pcl_4_pcl_PointCloud_PointXYZI = 0;
static PyTypeObject *__pyx_ptype_3pcl_4_pcl_PointCloud_PointXYZRGB = 0;
static PyTypeObject *__pyx_ptype_3pcl_4_pcl_PointCloud_PointXYZRGBA = 0;
static PyTypeObject *__pyx_ptype_3pcl_4_pcl_Vertices = 0;
static PyTypeObject *__pyx_ptype_3pcl_4_pcl_PointCloud_PointWithViewpoint = 0;
static PyTypeObject *__pyx_ptype_3pcl_4_pcl_PointCloud_Normal = 0;
static PyTypeObject *__pyx_ptype_3pcl_4_pcl_PointCloud_PointNormal = 0;
static PyTypeObject *__pyx_ptype_3pcl_4_pcl_KdTree = 0;
static PyTypeObject *__pyx_ptype_3pcl_4_pcl_RangeImages = 0;
static PyTypeObject *__pyx_ptype_3pcl_4_pcl_SampleConsensusModel = 0;
static PyTypeObject *__pyx_ptype_3pcl_4_pcl_SampleConsensusModelPlane = 0;
static PyTypeObject *__pyx_ptype_3pcl_4_pcl_SampleConsensusModelSphere = 0;
static PyTypeObject *__pyx_ptype_3pcl_4_pcl_SampleConsensusModelCylinder = 0;
static PyTypeObject *__pyx_ptype_3pcl_4_pcl_SampleConsensusModelLine = 0;
static PyTypeObject *__pyx_ptype_3pcl_4_pcl_SampleConsensusModelRegistration = 0;
static PyTypeObject *__pyx_ptype_3pcl_4_pcl_SampleConsensusModelStick = 0;

/* Module declarations from 'pcl.pcl_visualization' */
static PyTypeObject *__pyx_ptype_3pcl_17pcl_visualization_PointCloudColorHandleringCustom = 0;
static PyTypeObject *__pyx_ptype_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom = 0;
static PyTypeObject *__pyx_ptype_3pcl_17pcl_visualization_PointCloudColorHandleringGenericField = 0;
static PyTypeObject *__pyx_ptype_3pcl_17pcl_visualization_PointCloudColorHandleringHSVField = 0;
static PyTypeObject *__pyx_ptype_3pcl_17pcl_visualization_PointCloudColorHandleringRandom = 0;
static PyTypeObject *__pyx_ptype_3pcl_17pcl_visualization_PointCloudColorHandleringRGBField = 0;
static PyTypeObject *__pyx_ptype_3pcl_17pcl_visualization_PointCloudGeometryHandlerCustom = 0;
static PyTypeObject *__pyx_ptype_3pcl_17pcl_visualization_PointCloudGeometryHandleringSurfaceNormal = 0;
static PyTypeObject *__pyx_ptype_3pcl_17pcl_visualization_PointCloudGeometryHandleringXYZ = 0;
static PyTypeObject *__pyx_ptype_3pcl_17pcl_visualization_CloudViewing = 0;
static PyTypeObject *__pyx_ptype_3pcl_17pcl_visualization_PCLVisualizering = 0;
static PyTypeObject *__pyx_ptype_3pcl_17pcl_visualization_PCLHistogramViewing = 0;
static std::string __pyx_convert_string_from_py_std__in_string(PyObject *); /*proto*/
#define __Pyx_MODULE_NAME "pcl.pcl_visualization"
int __pyx_module_is_main_pcl__pcl_visualization = 0;

/* Implementation of 'pcl.pcl_visualization' */
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_RuntimeError;
static PyObject *__pyx_builtin_ImportError;
static const char __pyx_k_b[] = "b";
static const char __pyx_k_g[] = "g";
static const char __pyx_k_r[] = "r";
static const char __pyx_k_x[] = "x";
static const char __pyx_k_y[] = "y";
static const char __pyx_k_z[] = "z";
static const char __pyx_k_id[] = "id";
static const char __pyx_k_np[] = "np";
static const char __pyx_k_pc[] = "pc";
static const char __pyx_k_end[] = "end";
static const char __pyx_k_file[] = "file";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_name[] = "name";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_text[] = "text";
static const char __pyx_k_time[] = "time";
static const char __pyx_k_xpos[] = "xpos";
static const char __pyx_k_ypos[] = "ypos";
static const char __pyx_k_cinit[] = "__cinit__";
static const char __pyx_k_cloud[] = "cloud";
static const char __pyx_k_hsize[] = "hsize";
static const char __pyx_k_level[] = "level";
static const char __pyx_k_max_x[] = "max_x";
static const char __pyx_k_max_y[] = "max_y";
static const char __pyx_k_max_z[] = "max_z";
static const char __pyx_k_min_x[] = "min_x";
static const char __pyx_k_min_y[] = "min_y";
static const char __pyx_k_min_z[] = "min_z";
static const char __pyx_k_numpy[] = "numpy";
static const char __pyx_k_print[] = "print";
static const char __pyx_k_range[] = "range";
static const char __pyx_k_scale[] = "scale";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_normal[] = "normal";
static const char __pyx_k_visual[] = "visual";
static const char __pyx_k_dealloc[] = "__dealloc__";
static const char __pyx_k_numbers[] = "numbers";
static const char __pyx_k_Sequence[] = "Sequence";
static const char __pyx_k_fontsize[] = "fontsize";
static const char __pyx_k_propName[] = "propName";
static const char __pyx_k_propType[] = "propType";
static const char __pyx_k_viewport[] = "viewport";
static const char __pyx_k_cloudname[] = "cloudname";
static const char __pyx_k_propValue[] = "propValue";
static const char __pyx_k_viewpoint[] = "viewpoint";
static const char __pyx_k_win_width[] = "win_width";
static const char __pyx_k_ValueError[] = "ValueError";
static const char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static const char __pyx_k_win_height[] = "win_height";
static const char __pyx_k_ImportError[] = "ImportError";
static const char __pyx_k_collections[] = "collections";
static const char __pyx_k_RuntimeError[] = "RuntimeError";
static const char __pyx_k_force_redraw[] = "force_redraw";
static const char __pyx_k_color_handler[] = "color_handler";
static const char __pyx_k_millis_to_wait[] = "millis_to_wait";
static const char __pyx_k_PCLVISUALIZER_COLOR[] = "PCLVISUALIZER_COLOR";
static const char __pyx_k_PCLVISUALIZER_OPACITY[] = "PCLVISUALIZER_OPACITY";
static const char __pyx_k_PCLVISUALIZER_FONT_SIZE[] = "PCLVISUALIZER_FONT_SIZE";
static const char __pyx_k_PCLVISUALIZER_LINE_WIDTH[] = "PCLVISUALIZER_LINE_WIDTH";
static const char __pyx_k_PCLVISUALIZER_POINT_SIZE[] = "PCLVISUALIZER_POINT_SIZE";
static const char __pyx_k_ndarray_is_not_C_contiguous[] = "ndarray is not C contiguous";
static const char __pyx_k_PCLVISUALIZER_REPRESENTATION[] = "PCLVISUALIZER_REPRESENTATION";
static const char __pyx_k_numpy_core_multiarray_failed_to[] = "numpy.core.multiarray failed to import";
static const char __pyx_k_unknown_dtype_code_in_numpy_pxd[] = "unknown dtype code in numpy.pxd (%d)";
static const char __pyx_k_Format_string_allocated_too_shor[] = "Format string allocated too short, see comment in numpy.pxd";
static const char __pyx_k_Non_native_byte_order_not_suppor[] = "Non-native byte order not supported";
static const char __pyx_k_PCLVISUALIZER_IMMEDIATE_RENDERIN[] = "PCLVISUALIZER_IMMEDIATE_RENDERING";
static const char __pyx_k_PCLVISUALIZER_REPRESENTATION_POI[] = "PCLVISUALIZER_REPRESENTATION_POINTS";
static const char __pyx_k_PCLVISUALIZER_REPRESENTATION_SUR[] = "PCLVISUALIZER_REPRESENTATION_SURFACE";
static const char __pyx_k_PCLVISUALIZER_REPRESENTATION_WIR[] = "PCLVISUALIZER_REPRESENTATION_WIREFRAME";
static const char __pyx_k_ndarray_is_not_Fortran_contiguou[] = "ndarray is not Fortran contiguous";
static const char __pyx_k_numpy_core_umath_failed_to_impor[] = "numpy.core.umath failed to import";
static const char __pyx_k_Format_string_allocated_too_shor_2[] = "Format string allocated too short.";
static PyObject *__pyx_kp_u_Format_string_allocated_too_shor;
static PyObject *__pyx_kp_u_Format_string_allocated_too_shor_2;
static PyObject *__pyx_n_s_ImportError;
static PyObject *__pyx_kp_u_Non_native_byte_order_not_suppor;
static PyObject *__pyx_n_s_PCLVISUALIZER_COLOR;
static PyObject *__pyx_n_s_PCLVISUALIZER_FONT_SIZE;
static PyObject *__pyx_n_s_PCLVISUALIZER_IMMEDIATE_RENDERIN;
static PyObject *__pyx_n_s_PCLVISUALIZER_LINE_WIDTH;
static PyObject *__pyx_n_s_PCLVISUALIZER_OPACITY;
static PyObject *__pyx_n_s_PCLVISUALIZER_POINT_SIZE;
static PyObject *__pyx_n_s_PCLVISUALIZER_REPRESENTATION;
static PyObject *__pyx_n_s_PCLVISUALIZER_REPRESENTATION_POI;
static PyObject *__pyx_n_s_PCLVISUALIZER_REPRESENTATION_SUR;
static PyObject *__pyx_n_s_PCLVISUALIZER_REPRESENTATION_WIR;
static PyObject *__pyx_n_s_RuntimeError;
static PyObject *__pyx_n_s_Sequence;
static PyObject *__pyx_n_s_ValueError;
static PyObject *__pyx_n_s_b;
static PyObject *__pyx_n_s_cinit;
static PyObject *__pyx_n_b_cloud;
static PyObject *__pyx_n_s_cloud;
static PyObject *__pyx_n_s_cloudname;
static PyObject *__pyx_n_s_collections;
static PyObject *__pyx_n_s_color_handler;
static PyObject *__pyx_n_s_dealloc;
static PyObject *__pyx_n_s_end;
static PyObject *__pyx_n_s_file;
static PyObject *__pyx_n_s_fontsize;
static PyObject *__pyx_n_s_force_redraw;
static PyObject *__pyx_n_s_g;
static PyObject *__pyx_n_s_hsize;
static PyObject *__pyx_n_s_id;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_level;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_max_x;
static PyObject *__pyx_n_s_max_y;
static PyObject *__pyx_n_s_max_z;
static PyObject *__pyx_n_s_millis_to_wait;
static PyObject *__pyx_n_s_min_x;
static PyObject *__pyx_n_s_min_y;
static PyObject *__pyx_n_s_min_z;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_kp_u_ndarray_is_not_C_contiguous;
static PyObject *__pyx_kp_u_ndarray_is_not_Fortran_contiguou;
static PyObject *__pyx_n_s_normal;
static PyObject *__pyx_n_s_np;
static PyObject *__pyx_n_s_numbers;
static PyObject *__pyx_n_s_numpy;
static PyObject *__pyx_kp_s_numpy_core_multiarray_failed_to;
static PyObject *__pyx_kp_s_numpy_core_umath_failed_to_impor;
static PyObject *__pyx_n_s_pc;
static PyObject *__pyx_n_s_print;
static PyObject *__pyx_n_s_propName;
static PyObject *__pyx_n_s_propType;
static PyObject *__pyx_n_s_propValue;
static PyObject *__pyx_n_s_pyx_vtable;
static PyObject *__pyx_n_s_r;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_scale;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_text;
static PyObject *__pyx_n_s_time;
static PyObject *__pyx_kp_u_unknown_dtype_code_in_numpy_pxd;
static PyObject *__pyx_n_s_viewpoint;
static PyObject *__pyx_n_s_viewport;
static PyObject *__pyx_n_b_visual;
static PyObject *__pyx_n_s_win_height;
static PyObject *__pyx_n_s_win_width;
static PyObject *__pyx_n_s_x;
static PyObject *__pyx_n_s_xpos;
static PyObject *__pyx_n_s_y;
static PyObject *__pyx_n_s_ypos;
static PyObject *__pyx_n_s_z;
static int __pyx_pf_3pcl_17pcl_visualization_31PointCloudColorHandleringCustom___cinit__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringCustom *__pyx_v_self); /* proto */
static int __pyx_pf_3pcl_17pcl_visualization_31PointCloudColorHandleringCustom_2__cinit__(struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringCustom *__pyx_v_self, struct __pyx_obj_3pcl_4_pcl_PointCloud *__pyx_v_pc, int __pyx_v_r, int __pyx_v_g, int __pyx_v_b); /* proto */
static void __pyx_pf_3pcl_17pcl_visualization_31PointCloudColorHandleringCustom_4__dealloc__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringCustom *__pyx_v_self); /* proto */
static int __pyx_pf_3pcl_17pcl_visualization_37PointCloudColorHandleringGenericField___cinit__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringGenericField *__pyx_v_self); /* proto */
static void __pyx_pf_3pcl_17pcl_visualization_37PointCloudColorHandleringGenericField_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringGenericField *__pyx_v_self); /* proto */
static int __pyx_pf_3pcl_17pcl_visualization_33PointCloudColorHandleringHSVField___cinit__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringHSVField *__pyx_v_self); /* proto */
static void __pyx_pf_3pcl_17pcl_visualization_33PointCloudColorHandleringHSVField_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringHSVField *__pyx_v_self); /* proto */
static int __pyx_pf_3pcl_17pcl_visualization_31PointCloudColorHandleringRandom___cinit__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringRandom *__pyx_v_self); /* proto */
static void __pyx_pf_3pcl_17pcl_visualization_31PointCloudColorHandleringRandom_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringRandom *__pyx_v_self); /* proto */
static int __pyx_pf_3pcl_17pcl_visualization_33PointCloudColorHandleringRGBField___cinit__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringRGBField *__pyx_v_self); /* proto */
static void __pyx_pf_3pcl_17pcl_visualization_33PointCloudColorHandleringRGBField_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringRGBField *__pyx_v_self); /* proto */
static int __pyx_pf_3pcl_17pcl_visualization_31PointCloudGeometryHandlerCustom___cinit__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandlerCustom *__pyx_v_self); /* proto */
static void __pyx_pf_3pcl_17pcl_visualization_31PointCloudGeometryHandlerCustom_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandlerCustom *__pyx_v_self); /* proto */
static int __pyx_pf_3pcl_17pcl_visualization_41PointCloudGeometryHandleringSurfaceNormal___cinit__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandleringSurfaceNormal *__pyx_v_self); /* proto */
static void __pyx_pf_3pcl_17pcl_visualization_41PointCloudGeometryHandleringSurfaceNormal_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandleringSurfaceNormal *__pyx_v_self); /* proto */
static int __pyx_pf_3pcl_17pcl_visualization_31PointCloudGeometryHandleringXYZ___cinit__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandleringXYZ *__pyx_v_self); /* proto */
static void __pyx_pf_3pcl_17pcl_visualization_31PointCloudGeometryHandleringXYZ_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandleringXYZ *__pyx_v_self); /* proto */
static int __pyx_pf_3pcl_17pcl_visualization_12CloudViewing___cinit__(struct __pyx_obj_3pcl_17pcl_visualization_CloudViewing *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_12CloudViewing_2ShowMonochromeCloud(struct __pyx_obj_3pcl_17pcl_visualization_CloudViewing *__pyx_v_self, struct __pyx_obj_3pcl_4_pcl_PointCloud *__pyx_v_pc, PyObject *__pyx_v_cloudname); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_12CloudViewing_4ShowGrayCloud(struct __pyx_obj_3pcl_17pcl_visualization_CloudViewing *__pyx_v_self, struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZI *__pyx_v_pc, PyObject *__pyx_v_cloudname); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_12CloudViewing_6ShowColorCloud(struct __pyx_obj_3pcl_17pcl_visualization_CloudViewing *__pyx_v_self, struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZRGB *__pyx_v_pc, PyObject *__pyx_v_cloudname); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_12CloudViewing_8ShowColorACloud(struct __pyx_obj_3pcl_17pcl_visualization_CloudViewing *__pyx_v_self, struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZRGBA *__pyx_v_pc, PyObject *__pyx_v_cloudname); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_12CloudViewing_10WasStopped(struct __pyx_obj_3pcl_17pcl_visualization_CloudViewing *__pyx_v_self, int __pyx_v_millis_to_wait); /* proto */
static int __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering___cinit__(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_2SetFullScreen(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, bool __pyx_v_mode); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_4SetWindowBorders(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, bool __pyx_v_mode); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_6Spin(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_8SpinOnce(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, int __pyx_v_millis_to_wait, bool __pyx_v_force_redraw); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_10AddCoordinateSystem(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, double __pyx_v_scale, int __pyx_v_viewpoint); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_12AddCoordinateSystem(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, double __pyx_v_scale, float __pyx_v_x, float __pyx_v_y, float __pyx_v_z, int __pyx_v_viewpoint); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_14removeCoordinateSystem(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, int __pyx_v_viewport); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_16RemovePointCloud(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, std::string __pyx_v_id, int __pyx_v_viewport); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_18RemovePolygonMesh(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, std::string __pyx_v_id, int __pyx_v_viewport); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_20RemoveShape(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, std::string __pyx_v_id, int __pyx_v_viewport); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_22RemoveText3D(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, std::string __pyx_v_id, int __pyx_v_viewport); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_24RemoveAllPointClouds(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, int __pyx_v_viewport); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_26RemoveAllShapes(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, int __pyx_v_viewport); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_28SetBackgroundColor(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, int __pyx_v_r, int __pyx_v_g, int __pyx_v_b); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_30AddText(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, std::string __pyx_v_text, int __pyx_v_xpos, int __pyx_v_ypos, PyObject *__pyx_v_id, int __pyx_v_viewport); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_32AddText(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, std::string __pyx_v_text, int __pyx_v_xpos, int __pyx_v_ypos, double __pyx_v_r, double __pyx_v_g, double __pyx_v_b, PyObject *__pyx_v_id, int __pyx_v_viewport); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_34AddText(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, std::string __pyx_v_text, int __pyx_v_xpos, int __pyx_v_ypos, int __pyx_v_fontsize, double __pyx_v_r, double __pyx_v_g, double __pyx_v_b, PyObject *__pyx_v_id, int __pyx_v_viewport); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_36UpdateText(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, std::string __pyx_v_text, int __pyx_v_xpos, int __pyx_v_ypos, PyObject *__pyx_v_id); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_38UpdateText(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, std::string __pyx_v_text, int __pyx_v_xpos, int __pyx_v_ypos, double __pyx_v_r, double __pyx_v_g, double __pyx_v_b, PyObject *__pyx_v_id); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_40UpdateText(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, std::string __pyx_v_text, int __pyx_v_xpos, int __pyx_v_ypos, int __pyx_v_fontsize, double __pyx_v_r, double __pyx_v_g, double __pyx_v_b, PyObject *__pyx_v_id); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_42AddPointCloud(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, struct __pyx_obj_3pcl_4_pcl_PointCloud *__pyx_v_cloud, PyObject *__pyx_v_id, int __pyx_v_viewport); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_44AddPointCloud_ColorHandler(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, struct __pyx_obj_3pcl_4_pcl_PointCloud *__pyx_v_cloud, struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringCustom *__pyx_v_color_handler, PyObject *__pyx_v_id, PyObject *__pyx_v_viewport); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_46AddPointCloud_ColorHandler(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, CYTHON_UNUSED struct __pyx_obj_3pcl_4_pcl_RangeImages *__pyx_v_cloud, CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringCustom *__pyx_v_color_handler, CYTHON_UNUSED PyObject *__pyx_v_id, CYTHON_UNUSED int __pyx_v_viewport); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_48AddPointCloudNormals(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, struct __pyx_obj_3pcl_4_pcl_PointCloud *__pyx_v_cloud, struct __pyx_obj_3pcl_4_pcl_PointCloud_Normal *__pyx_v_normal, int __pyx_v_level, double __pyx_v_scale, PyObject *__pyx_v_id, int __pyx_v_viewport); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_50SetPointCloudRenderingProperties(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, int __pyx_v_propType, int __pyx_v_propValue, PyObject *__pyx_v_propName); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_52InitCameraParameters(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_54WasStopped(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_56ResetStoppedFlag(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_58Close(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_60AddCube(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, double __pyx_v_min_x, double __pyx_v_max_x, double __pyx_v_min_y, double __pyx_v_max_y, double __pyx_v_min_z, double __pyx_v_max_z, double __pyx_v_r, double __pyx_v_g, double __pyx_v_b, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_62AddCone(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_64AddCircle(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_66AddPlane(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_68AddLine(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_70AddSphere(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_72AddCylinder(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_74AddCircle(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self); /* proto */
static int __pyx_pf_3pcl_17pcl_visualization_19PCLHistogramViewing___cinit__(struct __pyx_obj_3pcl_17pcl_visualization_PCLHistogramViewing *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_19PCLHistogramViewing_2SpinOnce(struct __pyx_obj_3pcl_17pcl_visualization_PCLHistogramViewing *__pyx_v_self, CYTHON_UNUSED int __pyx_v_time, CYTHON_UNUSED bool __pyx_v_force_redraw); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_19PCLHistogramViewing_4AddFeatureHistogram(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PCLHistogramViewing *__pyx_v_self, CYTHON_UNUSED struct __pyx_obj_3pcl_4_pcl_PointCloud *__pyx_v_cloud, CYTHON_UNUSED int __pyx_v_hsize, CYTHON_UNUSED PyObject *__pyx_v_cloudname, CYTHON_UNUSED int __pyx_v_win_width, CYTHON_UNUSED int __pyx_v_win_height); /* proto */
static PyObject *__pyx_pf_3pcl_17pcl_visualization_19PCLHistogramViewing_6Spin(struct __pyx_obj_3pcl_17pcl_visualization_PCLHistogramViewing *__pyx_v_self); /* proto */
static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /* proto */
static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info); /* proto */
static PyObject *__pyx_tp_new_3pcl_17pcl_visualization_PointCloudColorHandleringCustom(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_3pcl_17pcl_visualization_PointCloudColorHandleringGenericField(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_3pcl_17pcl_visualization_PointCloudColorHandleringHSVField(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_3pcl_17pcl_visualization_PointCloudColorHandleringRandom(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_3pcl_17pcl_visualization_PointCloudColorHandleringRGBField(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_3pcl_17pcl_visualization_PointCloudGeometryHandlerCustom(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_3pcl_17pcl_visualization_PointCloudGeometryHandleringSurfaceNormal(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_3pcl_17pcl_visualization_PointCloudGeometryHandleringXYZ(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_3pcl_17pcl_visualization_CloudViewing(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_3pcl_17pcl_visualization_PCLVisualizering(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_3pcl_17pcl_visualization_PCLHistogramViewing(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_int_0;
static PyObject *__pyx_tuple_;
static PyObject *__pyx_tuple__2;
static PyObject *__pyx_tuple__3;
static PyObject *__pyx_tuple__4;
static PyObject *__pyx_tuple__5;
static PyObject *__pyx_tuple__6;
static PyObject *__pyx_tuple__7;
static PyObject *__pyx_tuple__8;
static PyObject *__pyx_tuple__9;

/* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringCustom.pxi":18
 *     # cdef pcl_vis.PointCloudColorHandlerCustom_t *me
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         pass
 * 
 */

/* Python wrapper */
static int __pyx_pw_3pcl_17pcl_visualization_31PointCloudColorHandleringCustom_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_3pcl_17pcl_visualization_31PointCloudColorHandleringCustom_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_31PointCloudColorHandleringCustom___cinit__(((struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringCustom *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3pcl_17pcl_visualization_31PointCloudColorHandleringCustom___cinit__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringCustom *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringCustom.pxi":22
 * 
 *     # void sp_assign[T](shared_ptr[T] &p, T *value)
 *     def __cinit__(self, _pcl.PointCloud pc, int r, int g, int b):             # <<<<<<<<<<<<<<
 *         sp_assign(self.thisptr_shared, new pcl_vis.PointCloudColorHandlerCustom[cpp.PointXYZ](pc.thisptr_shared, r, g, b))
 *         pass
 */

/* Python wrapper */
static int __pyx_pw_3pcl_17pcl_visualization_31PointCloudColorHandleringCustom_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_3pcl_17pcl_visualization_31PointCloudColorHandleringCustom_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_3pcl_4_pcl_PointCloud *__pyx_v_pc = 0;
  int __pyx_v_r;
  int __pyx_v_g;
  int __pyx_v_b;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pc,&__pyx_n_s_r,&__pyx_n_s_g,&__pyx_n_s_b,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_pc)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_r)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 1); __PYX_ERR(0, 22, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_g)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 2); __PYX_ERR(0, 22, __pyx_L3_error)
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_b)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 3); __PYX_ERR(0, 22, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 22, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_pc = ((struct __pyx_obj_3pcl_4_pcl_PointCloud *)values[0]);
    __pyx_v_r = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_r == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 22, __pyx_L3_error)
    __pyx_v_g = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_g == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 22, __pyx_L3_error)
    __pyx_v_b = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_b == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 22, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 22, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PointCloudColorHandleringCustom.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pc), __pyx_ptype_3pcl_4_pcl_PointCloud, 1, "pc", 0))) __PYX_ERR(0, 22, __pyx_L1_error)
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_31PointCloudColorHandleringCustom_2__cinit__(((struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringCustom *)__pyx_v_self), __pyx_v_pc, __pyx_v_r, __pyx_v_g, __pyx_v_b);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3pcl_17pcl_visualization_31PointCloudColorHandleringCustom_2__cinit__(struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringCustom *__pyx_v_self, struct __pyx_obj_3pcl_4_pcl_PointCloud *__pyx_v_pc, int __pyx_v_r, int __pyx_v_g, int __pyx_v_b) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringCustom.pxi":23
 *     # void sp_assign[T](shared_ptr[T] &p, T *value)
 *     def __cinit__(self, _pcl.PointCloud pc, int r, int g, int b):
 *         sp_assign(self.thisptr_shared, new pcl_vis.PointCloudColorHandlerCustom[cpp.PointXYZ](pc.thisptr_shared, r, g, b))             # <<<<<<<<<<<<<<
 *         pass
 * 
 */
  sp_assign<pcl::visualization::PointCloudColorHandlerCustom<struct pcl::PointXYZ> >(__pyx_v_self->thisptr_shared, new pcl::visualization::PointCloudColorHandlerCustom<struct pcl::PointXYZ> (__pyx_v_pc->thisptr_shared, __pyx_v_r, __pyx_v_g, __pyx_v_b));

  /* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringCustom.pxi":22
 * 
 *     # void sp_assign[T](shared_ptr[T] &p, T *value)
 *     def __cinit__(self, _pcl.PointCloud pc, int r, int g, int b):             # <<<<<<<<<<<<<<
 *         sp_assign(self.thisptr_shared, new pcl_vis.PointCloudColorHandlerCustom[cpp.PointXYZ](pc.thisptr_shared, r, g, b))
 *         pass
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringCustom.pxi":30
 *     #     pass
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         # del self.me
 *         pass
 */

/* Python wrapper */
static void __pyx_pw_3pcl_17pcl_visualization_31PointCloudColorHandleringCustom_5__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_3pcl_17pcl_visualization_31PointCloudColorHandleringCustom_5__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_3pcl_17pcl_visualization_31PointCloudColorHandleringCustom_4__dealloc__(((struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringCustom *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_3pcl_17pcl_visualization_31PointCloudColorHandleringCustom_4__dealloc__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringCustom *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringGenericField.pxi":14
 *     cdef pcl_vis.PointCloudColorHandlerGenericField_t *me
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         print('__cinit__')
 *         pass
 */

/* Python wrapper */
static int __pyx_pw_3pcl_17pcl_visualization_37PointCloudColorHandleringGenericField_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_3pcl_17pcl_visualization_37PointCloudColorHandleringGenericField_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_37PointCloudColorHandleringGenericField___cinit__(((struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringGenericField *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3pcl_17pcl_visualization_37PointCloudColorHandleringGenericField___cinit__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringGenericField *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringGenericField.pxi":15
 * 
 *     def __cinit__(self):
 *         print('__cinit__')             # <<<<<<<<<<<<<<
 *         pass
 * 
 */
  if (__Pyx_PrintOne(0, __pyx_n_s_cinit) < 0) __PYX_ERR(1, 15, __pyx_L1_error)

  /* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringGenericField.pxi":14
 *     cdef pcl_vis.PointCloudColorHandlerGenericField_t *me
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         print('__cinit__')
 *         pass
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PointCloudColorHandleringGenericField.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringGenericField.pxi":18
 *         pass
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         print('__dealloc__')
 *         # del self.me
 */

/* Python wrapper */
static void __pyx_pw_3pcl_17pcl_visualization_37PointCloudColorHandleringGenericField_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_3pcl_17pcl_visualization_37PointCloudColorHandleringGenericField_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_3pcl_17pcl_visualization_37PointCloudColorHandleringGenericField_2__dealloc__(((struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringGenericField *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_3pcl_17pcl_visualization_37PointCloudColorHandleringGenericField_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringGenericField *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringGenericField.pxi":19
 * 
 *     def __dealloc__(self):
 *         print('__dealloc__')             # <<<<<<<<<<<<<<
 *         # del self.me
 *         pass
 */
  if (__Pyx_PrintOne(0, __pyx_n_s_dealloc) < 0) __PYX_ERR(1, 19, __pyx_L1_error)

  /* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringGenericField.pxi":18
 *         pass
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         print('__dealloc__')
 *         # del self.me
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("pcl.pcl_visualization.PointCloudColorHandleringGenericField.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename, 0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringHSVField.pxi":14
 *     cdef pcl_vis.PointCloudColorHandlerHSVField_t *me
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         print('__cinit__')
 *         pass
 */

/* Python wrapper */
static int __pyx_pw_3pcl_17pcl_visualization_33PointCloudColorHandleringHSVField_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_3pcl_17pcl_visualization_33PointCloudColorHandleringHSVField_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_33PointCloudColorHandleringHSVField___cinit__(((struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringHSVField *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3pcl_17pcl_visualization_33PointCloudColorHandleringHSVField___cinit__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringHSVField *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringHSVField.pxi":15
 * 
 *     def __cinit__(self):
 *         print('__cinit__')             # <<<<<<<<<<<<<<
 *         pass
 * 
 */
  if (__Pyx_PrintOne(0, __pyx_n_s_cinit) < 0) __PYX_ERR(2, 15, __pyx_L1_error)

  /* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringHSVField.pxi":14
 *     cdef pcl_vis.PointCloudColorHandlerHSVField_t *me
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         print('__cinit__')
 *         pass
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PointCloudColorHandleringHSVField.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringHSVField.pxi":18
 *         pass
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         print('__dealloc__')
 *         # del self.me
 */

/* Python wrapper */
static void __pyx_pw_3pcl_17pcl_visualization_33PointCloudColorHandleringHSVField_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_3pcl_17pcl_visualization_33PointCloudColorHandleringHSVField_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_3pcl_17pcl_visualization_33PointCloudColorHandleringHSVField_2__dealloc__(((struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringHSVField *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_3pcl_17pcl_visualization_33PointCloudColorHandleringHSVField_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringHSVField *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringHSVField.pxi":19
 * 
 *     def __dealloc__(self):
 *         print('__dealloc__')             # <<<<<<<<<<<<<<
 *         # del self.me
 *         pass
 */
  if (__Pyx_PrintOne(0, __pyx_n_s_dealloc) < 0) __PYX_ERR(2, 19, __pyx_L1_error)

  /* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringHSVField.pxi":18
 *         pass
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         print('__dealloc__')
 *         # del self.me
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("pcl.pcl_visualization.PointCloudColorHandleringHSVField.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename, 0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringRandom.pxi":14
 *     cdef pcl_vis.PointCloudColorHandlerRandom_t *me
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         print('__cinit__')
 *         pass
 */

/* Python wrapper */
static int __pyx_pw_3pcl_17pcl_visualization_31PointCloudColorHandleringRandom_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_3pcl_17pcl_visualization_31PointCloudColorHandleringRandom_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_31PointCloudColorHandleringRandom___cinit__(((struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringRandom *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3pcl_17pcl_visualization_31PointCloudColorHandleringRandom___cinit__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringRandom *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringRandom.pxi":15
 * 
 *     def __cinit__(self):
 *         print('__cinit__')             # <<<<<<<<<<<<<<
 *         pass
 * 
 */
  if (__Pyx_PrintOne(0, __pyx_n_s_cinit) < 0) __PYX_ERR(3, 15, __pyx_L1_error)

  /* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringRandom.pxi":14
 *     cdef pcl_vis.PointCloudColorHandlerRandom_t *me
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         print('__cinit__')
 *         pass
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PointCloudColorHandleringRandom.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringRandom.pxi":18
 *         pass
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         print('__dealloc__')
 *         # del self.me
 */

/* Python wrapper */
static void __pyx_pw_3pcl_17pcl_visualization_31PointCloudColorHandleringRandom_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_3pcl_17pcl_visualization_31PointCloudColorHandleringRandom_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_3pcl_17pcl_visualization_31PointCloudColorHandleringRandom_2__dealloc__(((struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringRandom *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_3pcl_17pcl_visualization_31PointCloudColorHandleringRandom_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringRandom *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringRandom.pxi":19
 * 
 *     def __dealloc__(self):
 *         print('__dealloc__')             # <<<<<<<<<<<<<<
 *         # del self.me
 *         pass
 */
  if (__Pyx_PrintOne(0, __pyx_n_s_dealloc) < 0) __PYX_ERR(3, 19, __pyx_L1_error)

  /* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringRandom.pxi":18
 *         pass
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         print('__dealloc__')
 *         # del self.me
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("pcl.pcl_visualization.PointCloudColorHandleringRandom.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename, 0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringRGBField.pxi":14
 *     cdef pcl_vis.PointCloudColorHandlerRGBField_t *me
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         print('__cinit__')
 *         pass
 */

/* Python wrapper */
static int __pyx_pw_3pcl_17pcl_visualization_33PointCloudColorHandleringRGBField_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_3pcl_17pcl_visualization_33PointCloudColorHandleringRGBField_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_33PointCloudColorHandleringRGBField___cinit__(((struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringRGBField *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3pcl_17pcl_visualization_33PointCloudColorHandleringRGBField___cinit__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringRGBField *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringRGBField.pxi":15
 * 
 *     def __cinit__(self):
 *         print('__cinit__')             # <<<<<<<<<<<<<<
 *         pass
 * 
 */
  if (__Pyx_PrintOne(0, __pyx_n_s_cinit) < 0) __PYX_ERR(4, 15, __pyx_L1_error)

  /* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringRGBField.pxi":14
 *     cdef pcl_vis.PointCloudColorHandlerRGBField_t *me
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         print('__cinit__')
 *         pass
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PointCloudColorHandleringRGBField.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringRGBField.pxi":18
 *         pass
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         print('__dealloc__')
 *         # del self.me
 */

/* Python wrapper */
static void __pyx_pw_3pcl_17pcl_visualization_33PointCloudColorHandleringRGBField_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_3pcl_17pcl_visualization_33PointCloudColorHandleringRGBField_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_3pcl_17pcl_visualization_33PointCloudColorHandleringRGBField_2__dealloc__(((struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringRGBField *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_3pcl_17pcl_visualization_33PointCloudColorHandleringRGBField_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringRGBField *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringRGBField.pxi":19
 * 
 *     def __dealloc__(self):
 *         print('__dealloc__')             # <<<<<<<<<<<<<<
 *         # del self.me
 *         pass
 */
  if (__Pyx_PrintOne(0, __pyx_n_s_dealloc) < 0) __PYX_ERR(4, 19, __pyx_L1_error)

  /* "pcl/pxi/Visualization/Handler/PointCloudColorHandleringRGBField.pxi":18
 *         pass
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         print('__dealloc__')
 *         # del self.me
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("pcl.pcl_visualization.PointCloudColorHandleringRGBField.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename, 0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "pcl/pxi/Visualization/Handler/PointCloudGeometryHandleringCustom.pxi":14
 *     cdef pcl_vis.PointCloudGeometryHandlerCustom_t *me
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         print('__cinit__')
 *         pass
 */

/* Python wrapper */
static int __pyx_pw_3pcl_17pcl_visualization_31PointCloudGeometryHandlerCustom_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_3pcl_17pcl_visualization_31PointCloudGeometryHandlerCustom_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_31PointCloudGeometryHandlerCustom___cinit__(((struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandlerCustom *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3pcl_17pcl_visualization_31PointCloudGeometryHandlerCustom___cinit__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandlerCustom *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pcl/pxi/Visualization/Handler/PointCloudGeometryHandleringCustom.pxi":15
 * 
 *     def __cinit__(self):
 *         print('__cinit__')             # <<<<<<<<<<<<<<
 *         pass
 * 
 */
  if (__Pyx_PrintOne(0, __pyx_n_s_cinit) < 0) __PYX_ERR(5, 15, __pyx_L1_error)

  /* "pcl/pxi/Visualization/Handler/PointCloudGeometryHandleringCustom.pxi":14
 *     cdef pcl_vis.PointCloudGeometryHandlerCustom_t *me
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         print('__cinit__')
 *         pass
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PointCloudGeometryHandlerCustom.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/Handler/PointCloudGeometryHandleringCustom.pxi":18
 *         pass
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         print('__dealloc__')
 *         # del self.me
 */

/* Python wrapper */
static void __pyx_pw_3pcl_17pcl_visualization_31PointCloudGeometryHandlerCustom_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_3pcl_17pcl_visualization_31PointCloudGeometryHandlerCustom_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_3pcl_17pcl_visualization_31PointCloudGeometryHandlerCustom_2__dealloc__(((struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandlerCustom *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_3pcl_17pcl_visualization_31PointCloudGeometryHandlerCustom_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandlerCustom *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pcl/pxi/Visualization/Handler/PointCloudGeometryHandleringCustom.pxi":19
 * 
 *     def __dealloc__(self):
 *         print('__dealloc__')             # <<<<<<<<<<<<<<
 *         # del self.me
 *         pass
 */
  if (__Pyx_PrintOne(0, __pyx_n_s_dealloc) < 0) __PYX_ERR(5, 19, __pyx_L1_error)

  /* "pcl/pxi/Visualization/Handler/PointCloudGeometryHandleringCustom.pxi":18
 *         pass
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         print('__dealloc__')
 *         # del self.me
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("pcl.pcl_visualization.PointCloudGeometryHandlerCustom.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename, 0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "pcl/pxi/Visualization/Handler/PointCloudGeometryHandleringSurfaceNormal.pxi":14
 *     cdef pcl_vis.PointCloudGeometryHandlerSurfaceNormal_t *me
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         print('__cinit__')
 *         pass
 */

/* Python wrapper */
static int __pyx_pw_3pcl_17pcl_visualization_41PointCloudGeometryHandleringSurfaceNormal_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_3pcl_17pcl_visualization_41PointCloudGeometryHandleringSurfaceNormal_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_41PointCloudGeometryHandleringSurfaceNormal___cinit__(((struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandleringSurfaceNormal *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3pcl_17pcl_visualization_41PointCloudGeometryHandleringSurfaceNormal___cinit__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandleringSurfaceNormal *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pcl/pxi/Visualization/Handler/PointCloudGeometryHandleringSurfaceNormal.pxi":15
 * 
 *     def __cinit__(self):
 *         print('__cinit__')             # <<<<<<<<<<<<<<
 *         pass
 * 
 */
  if (__Pyx_PrintOne(0, __pyx_n_s_cinit) < 0) __PYX_ERR(6, 15, __pyx_L1_error)

  /* "pcl/pxi/Visualization/Handler/PointCloudGeometryHandleringSurfaceNormal.pxi":14
 *     cdef pcl_vis.PointCloudGeometryHandlerSurfaceNormal_t *me
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         print('__cinit__')
 *         pass
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PointCloudGeometryHandleringSurfaceNormal.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/Handler/PointCloudGeometryHandleringSurfaceNormal.pxi":18
 *         pass
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         print('__dealloc__')
 *         # del self.me
 */

/* Python wrapper */
static void __pyx_pw_3pcl_17pcl_visualization_41PointCloudGeometryHandleringSurfaceNormal_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_3pcl_17pcl_visualization_41PointCloudGeometryHandleringSurfaceNormal_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_3pcl_17pcl_visualization_41PointCloudGeometryHandleringSurfaceNormal_2__dealloc__(((struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandleringSurfaceNormal *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_3pcl_17pcl_visualization_41PointCloudGeometryHandleringSurfaceNormal_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandleringSurfaceNormal *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pcl/pxi/Visualization/Handler/PointCloudGeometryHandleringSurfaceNormal.pxi":19
 * 
 *     def __dealloc__(self):
 *         print('__dealloc__')             # <<<<<<<<<<<<<<
 *         # del self.me
 *         pass
 */
  if (__Pyx_PrintOne(0, __pyx_n_s_dealloc) < 0) __PYX_ERR(6, 19, __pyx_L1_error)

  /* "pcl/pxi/Visualization/Handler/PointCloudGeometryHandleringSurfaceNormal.pxi":18
 *         pass
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         print('__dealloc__')
 *         # del self.me
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("pcl.pcl_visualization.PointCloudGeometryHandleringSurfaceNormal.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename, 0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "pcl/pxi/Visualization/Handler/PointCloudGeometryHandleringXYZ.pxi":14
 *     cdef pcl_vis.PointCloudGeometryHandlerXYZ_t *me
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         print('__cinit__')
 *         pass
 */

/* Python wrapper */
static int __pyx_pw_3pcl_17pcl_visualization_31PointCloudGeometryHandleringXYZ_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_3pcl_17pcl_visualization_31PointCloudGeometryHandleringXYZ_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_31PointCloudGeometryHandleringXYZ___cinit__(((struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandleringXYZ *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3pcl_17pcl_visualization_31PointCloudGeometryHandleringXYZ___cinit__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandleringXYZ *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pcl/pxi/Visualization/Handler/PointCloudGeometryHandleringXYZ.pxi":15
 * 
 *     def __cinit__(self):
 *         print('__cinit__')             # <<<<<<<<<<<<<<
 *         pass
 * 
 */
  if (__Pyx_PrintOne(0, __pyx_n_s_cinit) < 0) __PYX_ERR(7, 15, __pyx_L1_error)

  /* "pcl/pxi/Visualization/Handler/PointCloudGeometryHandleringXYZ.pxi":14
 *     cdef pcl_vis.PointCloudGeometryHandlerXYZ_t *me
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         print('__cinit__')
 *         pass
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PointCloudGeometryHandleringXYZ.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/Handler/PointCloudGeometryHandleringXYZ.pxi":18
 *         pass
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         print('__dealloc__')
 *         # del self.me
 */

/* Python wrapper */
static void __pyx_pw_3pcl_17pcl_visualization_31PointCloudGeometryHandleringXYZ_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_3pcl_17pcl_visualization_31PointCloudGeometryHandleringXYZ_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_3pcl_17pcl_visualization_31PointCloudGeometryHandleringXYZ_2__dealloc__(((struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandleringXYZ *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_3pcl_17pcl_visualization_31PointCloudGeometryHandleringXYZ_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandleringXYZ *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pcl/pxi/Visualization/Handler/PointCloudGeometryHandleringXYZ.pxi":19
 * 
 *     def __dealloc__(self):
 *         print('__dealloc__')             # <<<<<<<<<<<<<<
 *         # del self.me
 *         pass
 */
  if (__Pyx_PrintOne(0, __pyx_n_s_dealloc) < 0) __PYX_ERR(7, 19, __pyx_L1_error)

  /* "pcl/pxi/Visualization/Handler/PointCloudGeometryHandleringXYZ.pxi":18
 *         pass
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         print('__dealloc__')
 *         # del self.me
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("pcl.pcl_visualization.PointCloudGeometryHandleringXYZ.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename, 0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "pcl/pxi/Visualization/CloudViewing.pxi":15
 *     cdef pclvis.CloudViewerPtr_t thisptr_shared
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         # self.me = new pclvis.CloudViewer()
 *         # sp_assign(<cpp.shared_ptr[pclvis.CloudViewer]> self.thisptr_shared, new pclvis.CloudViewer('cloud'))
 */

/* Python wrapper */
static int __pyx_pw_3pcl_17pcl_visualization_12CloudViewing_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_3pcl_17pcl_visualization_12CloudViewing_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_12CloudViewing___cinit__(((struct __pyx_obj_3pcl_17pcl_visualization_CloudViewing *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3pcl_17pcl_visualization_12CloudViewing___cinit__(struct __pyx_obj_3pcl_17pcl_visualization_CloudViewing *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pcl/pxi/Visualization/CloudViewing.pxi":18
 *         # self.me = new pclvis.CloudViewer()
 *         # sp_assign(<cpp.shared_ptr[pclvis.CloudViewer]> self.thisptr_shared, new pclvis.CloudViewer('cloud'))
 *         sp_assign(self.thisptr_shared, new pclvis.CloudViewer('cloud'))             # <<<<<<<<<<<<<<
 * 
 *     cdef inline pclvis.CloudViewer *thisptr(self) nogil:
 */
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_n_b_cloud); if (unlikely(PyErr_Occurred())) __PYX_ERR(8, 18, __pyx_L1_error)
  sp_assign<pcl::visualization::CloudViewer>(__pyx_v_self->thisptr_shared, new pcl::visualization::CloudViewer(__pyx_t_1));

  /* "pcl/pxi/Visualization/CloudViewing.pxi":15
 *     cdef pclvis.CloudViewerPtr_t thisptr_shared
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         # self.me = new pclvis.CloudViewer()
 *         # sp_assign(<cpp.shared_ptr[pclvis.CloudViewer]> self.thisptr_shared, new pclvis.CloudViewer('cloud'))
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.CloudViewing.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/CloudViewing.pxi":20
 *         sp_assign(self.thisptr_shared, new pclvis.CloudViewer('cloud'))
 * 
 *     cdef inline pclvis.CloudViewer *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying CloudViewer
 *         return self.thisptr_shared.get()
 */

static CYTHON_INLINE pcl::visualization::CloudViewer *__pyx_f_3pcl_17pcl_visualization_12CloudViewing_thisptr(struct __pyx_obj_3pcl_17pcl_visualization_CloudViewing *__pyx_v_self) {
  pcl::visualization::CloudViewer *__pyx_r;

  /* "pcl/pxi/Visualization/CloudViewing.pxi":22
 *     cdef inline pclvis.CloudViewer *thisptr(self) nogil:
 *         # Shortcut to get raw pointer to underlying CloudViewer
 *         return self.thisptr_shared.get()             # <<<<<<<<<<<<<<
 * 
 *     def ShowMonochromeCloud(self, _pcl.PointCloud pc, cloudname=b'cloud'):
 */
  __pyx_r = __pyx_v_self->thisptr_shared.get();
  goto __pyx_L0;

  /* "pcl/pxi/Visualization/CloudViewing.pxi":20
 *         sp_assign(self.thisptr_shared, new pclvis.CloudViewer('cloud'))
 * 
 *     cdef inline pclvis.CloudViewer *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying CloudViewer
 *         return self.thisptr_shared.get()
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "pcl/pxi/Visualization/CloudViewing.pxi":24
 *         return self.thisptr_shared.get()
 * 
 *     def ShowMonochromeCloud(self, _pcl.PointCloud pc, cloudname=b'cloud'):             # <<<<<<<<<<<<<<
 *         self.thisptr().showCloud(pc.thisptr_shared, <string> cloudname)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_12CloudViewing_3ShowMonochromeCloud(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_12CloudViewing_2ShowMonochromeCloud[] = "CloudViewing.ShowMonochromeCloud(self, PointCloud pc, cloudname=b'cloud')";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_12CloudViewing_3ShowMonochromeCloud(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_3pcl_4_pcl_PointCloud *__pyx_v_pc = 0;
  PyObject *__pyx_v_cloudname = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ShowMonochromeCloud (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pc,&__pyx_n_s_cloudname,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)__pyx_n_b_cloud);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_pc)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_cloudname);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "ShowMonochromeCloud") < 0)) __PYX_ERR(8, 24, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_pc = ((struct __pyx_obj_3pcl_4_pcl_PointCloud *)values[0]);
    __pyx_v_cloudname = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ShowMonochromeCloud", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(8, 24, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.CloudViewing.ShowMonochromeCloud", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pc), __pyx_ptype_3pcl_4_pcl_PointCloud, 1, "pc", 0))) __PYX_ERR(8, 24, __pyx_L1_error)
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_12CloudViewing_2ShowMonochromeCloud(((struct __pyx_obj_3pcl_17pcl_visualization_CloudViewing *)__pyx_v_self), __pyx_v_pc, __pyx_v_cloudname);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_12CloudViewing_2ShowMonochromeCloud(struct __pyx_obj_3pcl_17pcl_visualization_CloudViewing *__pyx_v_self, struct __pyx_obj_3pcl_4_pcl_PointCloud *__pyx_v_pc, PyObject *__pyx_v_cloudname) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  __Pyx_RefNannySetupContext("ShowMonochromeCloud", 0);

  /* "pcl/pxi/Visualization/CloudViewing.pxi":25
 * 
 *     def ShowMonochromeCloud(self, _pcl.PointCloud pc, cloudname=b'cloud'):
 *         self.thisptr().showCloud(pc.thisptr_shared, <string> cloudname)             # <<<<<<<<<<<<<<
 * 
 *     def ShowGrayCloud(self, _pcl.PointCloud_PointXYZI pc, cloudname=b'cloud'):
 */
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_v_cloudname); if (unlikely(PyErr_Occurred())) __PYX_ERR(8, 25, __pyx_L1_error)
  __pyx_f_3pcl_17pcl_visualization_12CloudViewing_thisptr(__pyx_v_self)->showCloud(__pyx_v_pc->thisptr_shared, ((std::string)__pyx_t_1));

  /* "pcl/pxi/Visualization/CloudViewing.pxi":24
 *         return self.thisptr_shared.get()
 * 
 *     def ShowMonochromeCloud(self, _pcl.PointCloud pc, cloudname=b'cloud'):             # <<<<<<<<<<<<<<
 *         self.thisptr().showCloud(pc.thisptr_shared, <string> cloudname)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.CloudViewing.ShowMonochromeCloud", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/CloudViewing.pxi":27
 *         self.thisptr().showCloud(pc.thisptr_shared, <string> cloudname)
 * 
 *     def ShowGrayCloud(self, _pcl.PointCloud_PointXYZI pc, cloudname=b'cloud'):             # <<<<<<<<<<<<<<
 *         self.thisptr().showCloud(pc.thisptr_shared, <string> cloudname)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_12CloudViewing_5ShowGrayCloud(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_12CloudViewing_4ShowGrayCloud[] = "CloudViewing.ShowGrayCloud(self, PointCloud_PointXYZI pc, cloudname=b'cloud')";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_12CloudViewing_5ShowGrayCloud(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZI *__pyx_v_pc = 0;
  PyObject *__pyx_v_cloudname = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ShowGrayCloud (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pc,&__pyx_n_s_cloudname,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)__pyx_n_b_cloud);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_pc)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_cloudname);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "ShowGrayCloud") < 0)) __PYX_ERR(8, 27, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_pc = ((struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZI *)values[0]);
    __pyx_v_cloudname = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ShowGrayCloud", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(8, 27, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.CloudViewing.ShowGrayCloud", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pc), __pyx_ptype_3pcl_4_pcl_PointCloud_PointXYZI, 1, "pc", 0))) __PYX_ERR(8, 27, __pyx_L1_error)
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_12CloudViewing_4ShowGrayCloud(((struct __pyx_obj_3pcl_17pcl_visualization_CloudViewing *)__pyx_v_self), __pyx_v_pc, __pyx_v_cloudname);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_12CloudViewing_4ShowGrayCloud(struct __pyx_obj_3pcl_17pcl_visualization_CloudViewing *__pyx_v_self, struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZI *__pyx_v_pc, PyObject *__pyx_v_cloudname) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  __Pyx_RefNannySetupContext("ShowGrayCloud", 0);

  /* "pcl/pxi/Visualization/CloudViewing.pxi":28
 * 
 *     def ShowGrayCloud(self, _pcl.PointCloud_PointXYZI pc, cloudname=b'cloud'):
 *         self.thisptr().showCloud(pc.thisptr_shared, <string> cloudname)             # <<<<<<<<<<<<<<
 * 
 *     def ShowColorCloud(self, _pcl.PointCloud_PointXYZRGB pc, cloudname=b'cloud'):
 */
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_v_cloudname); if (unlikely(PyErr_Occurred())) __PYX_ERR(8, 28, __pyx_L1_error)
  __pyx_f_3pcl_17pcl_visualization_12CloudViewing_thisptr(__pyx_v_self)->showCloud(__pyx_v_pc->thisptr_shared, ((std::string)__pyx_t_1));

  /* "pcl/pxi/Visualization/CloudViewing.pxi":27
 *         self.thisptr().showCloud(pc.thisptr_shared, <string> cloudname)
 * 
 *     def ShowGrayCloud(self, _pcl.PointCloud_PointXYZI pc, cloudname=b'cloud'):             # <<<<<<<<<<<<<<
 *         self.thisptr().showCloud(pc.thisptr_shared, <string> cloudname)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.CloudViewing.ShowGrayCloud", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/CloudViewing.pxi":30
 *         self.thisptr().showCloud(pc.thisptr_shared, <string> cloudname)
 * 
 *     def ShowColorCloud(self, _pcl.PointCloud_PointXYZRGB pc, cloudname=b'cloud'):             # <<<<<<<<<<<<<<
 *         self.thisptr().showCloud(pc.thisptr_shared, <string> cloudname)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_12CloudViewing_7ShowColorCloud(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_12CloudViewing_6ShowColorCloud[] = "CloudViewing.ShowColorCloud(self, PointCloud_PointXYZRGB pc, cloudname=b'cloud')";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_12CloudViewing_7ShowColorCloud(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZRGB *__pyx_v_pc = 0;
  PyObject *__pyx_v_cloudname = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ShowColorCloud (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pc,&__pyx_n_s_cloudname,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)__pyx_n_b_cloud);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_pc)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_cloudname);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "ShowColorCloud") < 0)) __PYX_ERR(8, 30, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_pc = ((struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZRGB *)values[0]);
    __pyx_v_cloudname = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ShowColorCloud", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(8, 30, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.CloudViewing.ShowColorCloud", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pc), __pyx_ptype_3pcl_4_pcl_PointCloud_PointXYZRGB, 1, "pc", 0))) __PYX_ERR(8, 30, __pyx_L1_error)
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_12CloudViewing_6ShowColorCloud(((struct __pyx_obj_3pcl_17pcl_visualization_CloudViewing *)__pyx_v_self), __pyx_v_pc, __pyx_v_cloudname);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_12CloudViewing_6ShowColorCloud(struct __pyx_obj_3pcl_17pcl_visualization_CloudViewing *__pyx_v_self, struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZRGB *__pyx_v_pc, PyObject *__pyx_v_cloudname) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  __Pyx_RefNannySetupContext("ShowColorCloud", 0);

  /* "pcl/pxi/Visualization/CloudViewing.pxi":31
 * 
 *     def ShowColorCloud(self, _pcl.PointCloud_PointXYZRGB pc, cloudname=b'cloud'):
 *         self.thisptr().showCloud(pc.thisptr_shared, <string> cloudname)             # <<<<<<<<<<<<<<
 * 
 *     def ShowColorACloud(self, _pcl.PointCloud_PointXYZRGBA pc, cloudname=b'cloud'):
 */
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_v_cloudname); if (unlikely(PyErr_Occurred())) __PYX_ERR(8, 31, __pyx_L1_error)
  __pyx_f_3pcl_17pcl_visualization_12CloudViewing_thisptr(__pyx_v_self)->showCloud(__pyx_v_pc->thisptr_shared, ((std::string)__pyx_t_1));

  /* "pcl/pxi/Visualization/CloudViewing.pxi":30
 *         self.thisptr().showCloud(pc.thisptr_shared, <string> cloudname)
 * 
 *     def ShowColorCloud(self, _pcl.PointCloud_PointXYZRGB pc, cloudname=b'cloud'):             # <<<<<<<<<<<<<<
 *         self.thisptr().showCloud(pc.thisptr_shared, <string> cloudname)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.CloudViewing.ShowColorCloud", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/CloudViewing.pxi":33
 *         self.thisptr().showCloud(pc.thisptr_shared, <string> cloudname)
 * 
 *     def ShowColorACloud(self, _pcl.PointCloud_PointXYZRGBA pc, cloudname=b'cloud'):             # <<<<<<<<<<<<<<
 *         self.thisptr().showCloud(pc.thisptr_shared, <string> cloudname)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_12CloudViewing_9ShowColorACloud(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_12CloudViewing_8ShowColorACloud[] = "CloudViewing.ShowColorACloud(self, PointCloud_PointXYZRGBA pc, cloudname=b'cloud')";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_12CloudViewing_9ShowColorACloud(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZRGBA *__pyx_v_pc = 0;
  PyObject *__pyx_v_cloudname = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ShowColorACloud (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pc,&__pyx_n_s_cloudname,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)__pyx_n_b_cloud);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_pc)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_cloudname);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "ShowColorACloud") < 0)) __PYX_ERR(8, 33, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_pc = ((struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZRGBA *)values[0]);
    __pyx_v_cloudname = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ShowColorACloud", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(8, 33, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.CloudViewing.ShowColorACloud", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pc), __pyx_ptype_3pcl_4_pcl_PointCloud_PointXYZRGBA, 1, "pc", 0))) __PYX_ERR(8, 33, __pyx_L1_error)
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_12CloudViewing_8ShowColorACloud(((struct __pyx_obj_3pcl_17pcl_visualization_CloudViewing *)__pyx_v_self), __pyx_v_pc, __pyx_v_cloudname);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_12CloudViewing_8ShowColorACloud(struct __pyx_obj_3pcl_17pcl_visualization_CloudViewing *__pyx_v_self, struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZRGBA *__pyx_v_pc, PyObject *__pyx_v_cloudname) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  __Pyx_RefNannySetupContext("ShowColorACloud", 0);

  /* "pcl/pxi/Visualization/CloudViewing.pxi":34
 * 
 *     def ShowColorACloud(self, _pcl.PointCloud_PointXYZRGBA pc, cloudname=b'cloud'):
 *         self.thisptr().showCloud(pc.thisptr_shared, <string> cloudname)             # <<<<<<<<<<<<<<
 * 
 *     def WasStopped(self, int millis_to_wait = 1):
 */
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_v_cloudname); if (unlikely(PyErr_Occurred())) __PYX_ERR(8, 34, __pyx_L1_error)
  __pyx_f_3pcl_17pcl_visualization_12CloudViewing_thisptr(__pyx_v_self)->showCloud(__pyx_v_pc->thisptr_shared, ((std::string)__pyx_t_1));

  /* "pcl/pxi/Visualization/CloudViewing.pxi":33
 *         self.thisptr().showCloud(pc.thisptr_shared, <string> cloudname)
 * 
 *     def ShowColorACloud(self, _pcl.PointCloud_PointXYZRGBA pc, cloudname=b'cloud'):             # <<<<<<<<<<<<<<
 *         self.thisptr().showCloud(pc.thisptr_shared, <string> cloudname)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.CloudViewing.ShowColorACloud", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/CloudViewing.pxi":36
 *         self.thisptr().showCloud(pc.thisptr_shared, <string> cloudname)
 * 
 *     def WasStopped(self, int millis_to_wait = 1):             # <<<<<<<<<<<<<<
 *         return self.thisptr().wasStopped(millis_to_wait)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_12CloudViewing_11WasStopped(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_12CloudViewing_10WasStopped[] = "CloudViewing.WasStopped(self, int millis_to_wait=1)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_12CloudViewing_11WasStopped(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_millis_to_wait;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("WasStopped (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_millis_to_wait,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_millis_to_wait);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "WasStopped") < 0)) __PYX_ERR(8, 36, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_millis_to_wait = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_millis_to_wait == (int)-1) && PyErr_Occurred())) __PYX_ERR(8, 36, __pyx_L3_error)
    } else {
      __pyx_v_millis_to_wait = ((int)1);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("WasStopped", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(8, 36, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.CloudViewing.WasStopped", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_12CloudViewing_10WasStopped(((struct __pyx_obj_3pcl_17pcl_visualization_CloudViewing *)__pyx_v_self), __pyx_v_millis_to_wait);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_12CloudViewing_10WasStopped(struct __pyx_obj_3pcl_17pcl_visualization_CloudViewing *__pyx_v_self, int __pyx_v_millis_to_wait) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("WasStopped", 0);

  /* "pcl/pxi/Visualization/CloudViewing.pxi":37
 * 
 *     def WasStopped(self, int millis_to_wait = 1):
 *         return self.thisptr().wasStopped(millis_to_wait)             # <<<<<<<<<<<<<<
 * 
 *     # def SpinOnce(self, int millis_to_wait = 1):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_f_3pcl_17pcl_visualization_12CloudViewing_thisptr(__pyx_v_self)->wasStopped(__pyx_v_millis_to_wait)); if (unlikely(!__pyx_t_1)) __PYX_ERR(8, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcl/pxi/Visualization/CloudViewing.pxi":36
 *         self.thisptr().showCloud(pc.thisptr_shared, <string> cloudname)
 * 
 *     def WasStopped(self, int millis_to_wait = 1):             # <<<<<<<<<<<<<<
 *         return self.thisptr().wasStopped(millis_to_wait)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcl.pcl_visualization.CloudViewing.WasStopped", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":22
 *     cdef pclvis.PCLVisualizerPtr_t thisptr_shared
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         sp_assign(self.thisptr_shared, new pclvis.PCLVisualizer('visual', True))
 * 
 */

/* Python wrapper */
static int __pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering___cinit__(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering___cinit__(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":23
 * 
 *     def __cinit__(self):
 *         sp_assign(self.thisptr_shared, new pclvis.PCLVisualizer('visual', True))             # <<<<<<<<<<<<<<
 * 
 *     cdef inline pclvis.PCLVisualizer *thisptr(self) nogil:
 */
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_n_b_visual); if (unlikely(PyErr_Occurred())) __PYX_ERR(9, 23, __pyx_L1_error)
  sp_assign<pcl::visualization::PCLVisualizer>(__pyx_v_self->thisptr_shared, new pcl::visualization::PCLVisualizer(__pyx_t_1, 1));

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":22
 *     cdef pclvis.PCLVisualizerPtr_t thisptr_shared
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         sp_assign(self.thisptr_shared, new pclvis.PCLVisualizer('visual', True))
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":25
 *         sp_assign(self.thisptr_shared, new pclvis.PCLVisualizer('visual', True))
 * 
 *     cdef inline pclvis.PCLVisualizer *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying PCLVisualizer
 *         return self.thisptr_shared.get()
 */

static CYTHON_INLINE pcl::visualization::PCLVisualizer *__pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self) {
  pcl::visualization::PCLVisualizer *__pyx_r;

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":27
 *     cdef inline pclvis.PCLVisualizer *thisptr(self) nogil:
 *         # Shortcut to get raw pointer to underlying PCLVisualizer
 *         return self.thisptr_shared.get()             # <<<<<<<<<<<<<<
 * 
 *     def SetFullScreen(self, bool mode):
 */
  __pyx_r = __pyx_v_self->thisptr_shared.get();
  goto __pyx_L0;

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":25
 *         sp_assign(self.thisptr_shared, new pclvis.PCLVisualizer('visual', True))
 * 
 *     cdef inline pclvis.PCLVisualizer *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying PCLVisualizer
 *         return self.thisptr_shared.get()
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":29
 *         return self.thisptr_shared.get()
 * 
 *     def SetFullScreen(self, bool mode):             # <<<<<<<<<<<<<<
 *         self.thisptr().setFullScreen(mode)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_3SetFullScreen(PyObject *__pyx_v_self, PyObject *__pyx_arg_mode); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_2SetFullScreen[] = "PCLVisualizering.SetFullScreen(self, bool mode)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_3SetFullScreen(PyObject *__pyx_v_self, PyObject *__pyx_arg_mode) {
  bool __pyx_v_mode;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SetFullScreen (wrapper)", 0);
  assert(__pyx_arg_mode); {
    __pyx_v_mode = __Pyx_PyObject_IsTrue(__pyx_arg_mode); if (unlikely((__pyx_v_mode == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(9, 29, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.SetFullScreen", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_2SetFullScreen(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self), ((bool)__pyx_v_mode));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_2SetFullScreen(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, bool __pyx_v_mode) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SetFullScreen", 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":30
 * 
 *     def SetFullScreen(self, bool mode):
 *         self.thisptr().setFullScreen(mode)             # <<<<<<<<<<<<<<
 * 
 *     def SetWindowBorders(self, bool mode):
 */
  __pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(__pyx_v_self)->setFullScreen(__pyx_v_mode);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":29
 *         return self.thisptr_shared.get()
 * 
 *     def SetFullScreen(self, bool mode):             # <<<<<<<<<<<<<<
 *         self.thisptr().setFullScreen(mode)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":32
 *         self.thisptr().setFullScreen(mode)
 * 
 *     def SetWindowBorders(self, bool mode):             # <<<<<<<<<<<<<<
 *         self.thisptr().setWindowBorders(mode)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_5SetWindowBorders(PyObject *__pyx_v_self, PyObject *__pyx_arg_mode); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_4SetWindowBorders[] = "PCLVisualizering.SetWindowBorders(self, bool mode)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_5SetWindowBorders(PyObject *__pyx_v_self, PyObject *__pyx_arg_mode) {
  bool __pyx_v_mode;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SetWindowBorders (wrapper)", 0);
  assert(__pyx_arg_mode); {
    __pyx_v_mode = __Pyx_PyObject_IsTrue(__pyx_arg_mode); if (unlikely((__pyx_v_mode == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(9, 32, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.SetWindowBorders", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_4SetWindowBorders(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self), ((bool)__pyx_v_mode));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_4SetWindowBorders(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, bool __pyx_v_mode) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SetWindowBorders", 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":33
 * 
 *     def SetWindowBorders(self, bool mode):
 *         self.thisptr().setWindowBorders(mode)             # <<<<<<<<<<<<<<
 * 
 *     def Spin(self):
 */
  __pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(__pyx_v_self)->setWindowBorders(__pyx_v_mode);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":32
 *         self.thisptr().setFullScreen(mode)
 * 
 *     def SetWindowBorders(self, bool mode):             # <<<<<<<<<<<<<<
 *         self.thisptr().setWindowBorders(mode)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":35
 *         self.thisptr().setWindowBorders(mode)
 * 
 *     def Spin(self):             # <<<<<<<<<<<<<<
 *         self.thisptr().spin()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_7Spin(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_6Spin[] = "PCLVisualizering.Spin(self)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_7Spin(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Spin (wrapper)", 0);
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_6Spin(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_6Spin(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Spin", 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":36
 * 
 *     def Spin(self):
 *         self.thisptr().spin()             # <<<<<<<<<<<<<<
 * 
 *     def SpinOnce(self, int millis_to_wait = 1, bool force_redraw = False):
 */
  __pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(__pyx_v_self)->spin();

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":35
 *         self.thisptr().setWindowBorders(mode)
 * 
 *     def Spin(self):             # <<<<<<<<<<<<<<
 *         self.thisptr().spin()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":38
 *         self.thisptr().spin()
 * 
 *     def SpinOnce(self, int millis_to_wait = 1, bool force_redraw = False):             # <<<<<<<<<<<<<<
 *         self.thisptr().spinOnce (millis_to_wait, force_redraw)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_9SpinOnce(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_8SpinOnce[] = "PCLVisualizering.SpinOnce(self, int millis_to_wait=1, bool force_redraw=False)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_9SpinOnce(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_millis_to_wait;
  bool __pyx_v_force_redraw;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SpinOnce (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_millis_to_wait,&__pyx_n_s_force_redraw,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_millis_to_wait);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_force_redraw);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "SpinOnce") < 0)) __PYX_ERR(9, 38, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_millis_to_wait = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_millis_to_wait == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 38, __pyx_L3_error)
    } else {
      __pyx_v_millis_to_wait = ((int)1);
    }
    if (values[1]) {
      __pyx_v_force_redraw = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_force_redraw == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(9, 38, __pyx_L3_error)
    } else {
      __pyx_v_force_redraw = ((bool)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("SpinOnce", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(9, 38, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.SpinOnce", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_8SpinOnce(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self), __pyx_v_millis_to_wait, __pyx_v_force_redraw);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_8SpinOnce(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, int __pyx_v_millis_to_wait, bool __pyx_v_force_redraw) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SpinOnce", 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":39
 * 
 *     def SpinOnce(self, int millis_to_wait = 1, bool force_redraw = False):
 *         self.thisptr().spinOnce (millis_to_wait, force_redraw)             # <<<<<<<<<<<<<<
 * 
 *     def AddCoordinateSystem(self, double scale = 1.0, int viewpoint = 0):
 */
  __pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(__pyx_v_self)->spinOnce(__pyx_v_millis_to_wait, __pyx_v_force_redraw);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":38
 *         self.thisptr().spin()
 * 
 *     def SpinOnce(self, int millis_to_wait = 1, bool force_redraw = False):             # <<<<<<<<<<<<<<
 *         self.thisptr().spinOnce (millis_to_wait, force_redraw)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":41
 *         self.thisptr().spinOnce (millis_to_wait, force_redraw)
 * 
 *     def AddCoordinateSystem(self, double scale = 1.0, int viewpoint = 0):             # <<<<<<<<<<<<<<
 *         self.thisptr().addCoordinateSystem(scale, viewpoint)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_11AddCoordinateSystem(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_10AddCoordinateSystem[] = "PCLVisualizering.AddCoordinateSystem(self, double scale=1.0, int viewpoint=0)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_11AddCoordinateSystem(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_scale;
  int __pyx_v_viewpoint;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddCoordinateSystem (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_scale,&__pyx_n_s_viewpoint,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_scale);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_viewpoint);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AddCoordinateSystem") < 0)) __PYX_ERR(9, 41, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_scale = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_scale == (double)-1) && PyErr_Occurred())) __PYX_ERR(9, 41, __pyx_L3_error)
    } else {
      __pyx_v_scale = ((double)1.0);
    }
    if (values[1]) {
      __pyx_v_viewpoint = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_viewpoint == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 41, __pyx_L3_error)
    } else {
      __pyx_v_viewpoint = ((int)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AddCoordinateSystem", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(9, 41, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.AddCoordinateSystem", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_10AddCoordinateSystem(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self), __pyx_v_scale, __pyx_v_viewpoint);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_10AddCoordinateSystem(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, double __pyx_v_scale, int __pyx_v_viewpoint) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddCoordinateSystem", 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":42
 * 
 *     def AddCoordinateSystem(self, double scale = 1.0, int viewpoint = 0):
 *         self.thisptr().addCoordinateSystem(scale, viewpoint)             # <<<<<<<<<<<<<<
 * 
 *     def AddCoordinateSystem(self, double scale, float x, float y, float z, int viewpoint = 0):
 */
  __pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(__pyx_v_self)->addCoordinateSystem(__pyx_v_scale, __pyx_v_viewpoint);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":41
 *         self.thisptr().spinOnce (millis_to_wait, force_redraw)
 * 
 *     def AddCoordinateSystem(self, double scale = 1.0, int viewpoint = 0):             # <<<<<<<<<<<<<<
 *         self.thisptr().addCoordinateSystem(scale, viewpoint)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":44
 *         self.thisptr().addCoordinateSystem(scale, viewpoint)
 * 
 *     def AddCoordinateSystem(self, double scale, float x, float y, float z, int viewpoint = 0):             # <<<<<<<<<<<<<<
 *         self.thisptr().addCoordinateSystem(scale, x, y, z, viewpoint)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_13AddCoordinateSystem(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_12AddCoordinateSystem[] = "PCLVisualizering.AddCoordinateSystem(self, double scale, float x, float y, float z, int viewpoint=0)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_13AddCoordinateSystem(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_scale;
  float __pyx_v_x;
  float __pyx_v_y;
  float __pyx_v_z;
  int __pyx_v_viewpoint;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddCoordinateSystem (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_scale,&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_z,&__pyx_n_s_viewpoint,0};
    PyObject* values[5] = {0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_scale)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddCoordinateSystem", 0, 4, 5, 1); __PYX_ERR(9, 44, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddCoordinateSystem", 0, 4, 5, 2); __PYX_ERR(9, 44, __pyx_L3_error)
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_z)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddCoordinateSystem", 0, 4, 5, 3); __PYX_ERR(9, 44, __pyx_L3_error)
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_viewpoint);
          if (value) { values[4] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AddCoordinateSystem") < 0)) __PYX_ERR(9, 44, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_scale = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_scale == (double)-1) && PyErr_Occurred())) __PYX_ERR(9, 44, __pyx_L3_error)
    __pyx_v_x = __pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) __PYX_ERR(9, 44, __pyx_L3_error)
    __pyx_v_y = __pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) __PYX_ERR(9, 44, __pyx_L3_error)
    __pyx_v_z = __pyx_PyFloat_AsFloat(values[3]); if (unlikely((__pyx_v_z == (float)-1) && PyErr_Occurred())) __PYX_ERR(9, 44, __pyx_L3_error)
    if (values[4]) {
      __pyx_v_viewpoint = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_viewpoint == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 44, __pyx_L3_error)
    } else {
      __pyx_v_viewpoint = ((int)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AddCoordinateSystem", 0, 4, 5, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(9, 44, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.AddCoordinateSystem", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_12AddCoordinateSystem(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self), __pyx_v_scale, __pyx_v_x, __pyx_v_y, __pyx_v_z, __pyx_v_viewpoint);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_12AddCoordinateSystem(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, double __pyx_v_scale, float __pyx_v_x, float __pyx_v_y, float __pyx_v_z, int __pyx_v_viewpoint) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddCoordinateSystem", 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":45
 * 
 *     def AddCoordinateSystem(self, double scale, float x, float y, float z, int viewpoint = 0):
 *         self.thisptr().addCoordinateSystem(scale, x, y, z, viewpoint)             # <<<<<<<<<<<<<<
 * 
 *     # void addCoordinateSystem (double scale, const eigen3.Affine3f& t, int viewport)
 */
  __pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(__pyx_v_self)->addCoordinateSystem(__pyx_v_scale, __pyx_v_x, __pyx_v_y, __pyx_v_z, __pyx_v_viewpoint);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":44
 *         self.thisptr().addCoordinateSystem(scale, viewpoint)
 * 
 *     def AddCoordinateSystem(self, double scale, float x, float y, float z, int viewpoint = 0):             # <<<<<<<<<<<<<<
 *         self.thisptr().addCoordinateSystem(scale, x, y, z, viewpoint)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":50
 * 
 *     # return bool
 *     def removeCoordinateSystem (self, int viewport):             # <<<<<<<<<<<<<<
 *         return self.thisptr().removeCoordinateSystem (viewport)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_15removeCoordinateSystem(PyObject *__pyx_v_self, PyObject *__pyx_arg_viewport); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_14removeCoordinateSystem[] = "PCLVisualizering.removeCoordinateSystem(self, int viewport)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_15removeCoordinateSystem(PyObject *__pyx_v_self, PyObject *__pyx_arg_viewport) {
  int __pyx_v_viewport;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("removeCoordinateSystem (wrapper)", 0);
  assert(__pyx_arg_viewport); {
    __pyx_v_viewport = __Pyx_PyInt_As_int(__pyx_arg_viewport); if (unlikely((__pyx_v_viewport == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 50, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.removeCoordinateSystem", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_14removeCoordinateSystem(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self), ((int)__pyx_v_viewport));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_14removeCoordinateSystem(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, int __pyx_v_viewport) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("removeCoordinateSystem", 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":51
 *     # return bool
 *     def removeCoordinateSystem (self, int viewport):
 *         return self.thisptr().removeCoordinateSystem (viewport)             # <<<<<<<<<<<<<<
 * 
 *     # return bool
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(__pyx_v_self)->removeCoordinateSystem(__pyx_v_viewport)); if (unlikely(!__pyx_t_1)) __PYX_ERR(9, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":50
 * 
 *     # return bool
 *     def removeCoordinateSystem (self, int viewport):             # <<<<<<<<<<<<<<
 *         return self.thisptr().removeCoordinateSystem (viewport)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.removeCoordinateSystem", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":54
 * 
 *     # return bool
 *     def RemovePointCloud(self, string id, int viewport):             # <<<<<<<<<<<<<<
 *         return self.thisptr().removePointCloud (id, viewport)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_17RemovePointCloud(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_16RemovePointCloud[] = "PCLVisualizering.RemovePointCloud(self, string id, int viewport)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_17RemovePointCloud(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  std::string __pyx_v_id;
  int __pyx_v_viewport;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("RemovePointCloud (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_id,&__pyx_n_s_viewport,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_id)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_viewport)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("RemovePointCloud", 1, 2, 2, 1); __PYX_ERR(9, 54, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "RemovePointCloud") < 0)) __PYX_ERR(9, 54, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_id = __pyx_convert_string_from_py_std__in_string(values[0]); if (unlikely(PyErr_Occurred())) __PYX_ERR(9, 54, __pyx_L3_error)
    __pyx_v_viewport = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_viewport == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 54, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("RemovePointCloud", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(9, 54, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.RemovePointCloud", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_16RemovePointCloud(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self), __pyx_v_id, __pyx_v_viewport);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_16RemovePointCloud(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, std::string __pyx_v_id, int __pyx_v_viewport) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("RemovePointCloud", 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":55
 *     # return bool
 *     def RemovePointCloud(self, string id, int viewport):
 *         return self.thisptr().removePointCloud (id, viewport)             # <<<<<<<<<<<<<<
 * 
 *     def RemovePolygonMesh(self, string id, int viewport):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(__pyx_v_self)->removePointCloud(__pyx_v_id, __pyx_v_viewport)); if (unlikely(!__pyx_t_1)) __PYX_ERR(9, 55, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":54
 * 
 *     # return bool
 *     def RemovePointCloud(self, string id, int viewport):             # <<<<<<<<<<<<<<
 *         return self.thisptr().removePointCloud (id, viewport)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.RemovePointCloud", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":57
 *         return self.thisptr().removePointCloud (id, viewport)
 * 
 *     def RemovePolygonMesh(self, string id, int viewport):             # <<<<<<<<<<<<<<
 *         return self.thisptr().removePolygonMesh (id, viewport)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_19RemovePolygonMesh(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_18RemovePolygonMesh[] = "PCLVisualizering.RemovePolygonMesh(self, string id, int viewport)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_19RemovePolygonMesh(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  std::string __pyx_v_id;
  int __pyx_v_viewport;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("RemovePolygonMesh (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_id,&__pyx_n_s_viewport,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_id)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_viewport)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("RemovePolygonMesh", 1, 2, 2, 1); __PYX_ERR(9, 57, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "RemovePolygonMesh") < 0)) __PYX_ERR(9, 57, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_id = __pyx_convert_string_from_py_std__in_string(values[0]); if (unlikely(PyErr_Occurred())) __PYX_ERR(9, 57, __pyx_L3_error)
    __pyx_v_viewport = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_viewport == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 57, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("RemovePolygonMesh", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(9, 57, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.RemovePolygonMesh", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_18RemovePolygonMesh(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self), __pyx_v_id, __pyx_v_viewport);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_18RemovePolygonMesh(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, std::string __pyx_v_id, int __pyx_v_viewport) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("RemovePolygonMesh", 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":58
 * 
 *     def RemovePolygonMesh(self, string id, int viewport):
 *         return self.thisptr().removePolygonMesh (id, viewport)             # <<<<<<<<<<<<<<
 * 
 *     def RemoveShape(self, string id, int viewport):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(__pyx_v_self)->removePolygonMesh(__pyx_v_id, __pyx_v_viewport)); if (unlikely(!__pyx_t_1)) __PYX_ERR(9, 58, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":57
 *         return self.thisptr().removePointCloud (id, viewport)
 * 
 *     def RemovePolygonMesh(self, string id, int viewport):             # <<<<<<<<<<<<<<
 *         return self.thisptr().removePolygonMesh (id, viewport)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.RemovePolygonMesh", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":60
 *         return self.thisptr().removePolygonMesh (id, viewport)
 * 
 *     def RemoveShape(self, string id, int viewport):             # <<<<<<<<<<<<<<
 *         return self.thisptr().removeShape (id, viewport)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_21RemoveShape(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_20RemoveShape[] = "PCLVisualizering.RemoveShape(self, string id, int viewport)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_21RemoveShape(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  std::string __pyx_v_id;
  int __pyx_v_viewport;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("RemoveShape (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_id,&__pyx_n_s_viewport,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_id)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_viewport)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("RemoveShape", 1, 2, 2, 1); __PYX_ERR(9, 60, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "RemoveShape") < 0)) __PYX_ERR(9, 60, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_id = __pyx_convert_string_from_py_std__in_string(values[0]); if (unlikely(PyErr_Occurred())) __PYX_ERR(9, 60, __pyx_L3_error)
    __pyx_v_viewport = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_viewport == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 60, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("RemoveShape", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(9, 60, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.RemoveShape", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_20RemoveShape(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self), __pyx_v_id, __pyx_v_viewport);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_20RemoveShape(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, std::string __pyx_v_id, int __pyx_v_viewport) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("RemoveShape", 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":61
 * 
 *     def RemoveShape(self, string id, int viewport):
 *         return self.thisptr().removeShape (id, viewport)             # <<<<<<<<<<<<<<
 * 
 *     def RemoveText3D(self, string id, int viewport):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(__pyx_v_self)->removeShape(__pyx_v_id, __pyx_v_viewport)); if (unlikely(!__pyx_t_1)) __PYX_ERR(9, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":60
 *         return self.thisptr().removePolygonMesh (id, viewport)
 * 
 *     def RemoveShape(self, string id, int viewport):             # <<<<<<<<<<<<<<
 *         return self.thisptr().removeShape (id, viewport)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.RemoveShape", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":63
 *         return self.thisptr().removeShape (id, viewport)
 * 
 *     def RemoveText3D(self, string id, int viewport):             # <<<<<<<<<<<<<<
 *         return self.thisptr().removeText3D (id, viewport)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_23RemoveText3D(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_22RemoveText3D[] = "PCLVisualizering.RemoveText3D(self, string id, int viewport)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_23RemoveText3D(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  std::string __pyx_v_id;
  int __pyx_v_viewport;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("RemoveText3D (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_id,&__pyx_n_s_viewport,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_id)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_viewport)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("RemoveText3D", 1, 2, 2, 1); __PYX_ERR(9, 63, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "RemoveText3D") < 0)) __PYX_ERR(9, 63, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_id = __pyx_convert_string_from_py_std__in_string(values[0]); if (unlikely(PyErr_Occurred())) __PYX_ERR(9, 63, __pyx_L3_error)
    __pyx_v_viewport = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_viewport == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 63, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("RemoveText3D", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(9, 63, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.RemoveText3D", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_22RemoveText3D(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self), __pyx_v_id, __pyx_v_viewport);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_22RemoveText3D(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, std::string __pyx_v_id, int __pyx_v_viewport) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("RemoveText3D", 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":64
 * 
 *     def RemoveText3D(self, string id, int viewport):
 *         return self.thisptr().removeText3D (id, viewport)             # <<<<<<<<<<<<<<
 * 
 *     def RemoveAllPointClouds(self, int viewport):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(__pyx_v_self)->removeText3D(__pyx_v_id, __pyx_v_viewport)); if (unlikely(!__pyx_t_1)) __PYX_ERR(9, 64, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":63
 *         return self.thisptr().removeShape (id, viewport)
 * 
 *     def RemoveText3D(self, string id, int viewport):             # <<<<<<<<<<<<<<
 *         return self.thisptr().removeText3D (id, viewport)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.RemoveText3D", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":66
 *         return self.thisptr().removeText3D (id, viewport)
 * 
 *     def RemoveAllPointClouds(self, int viewport):             # <<<<<<<<<<<<<<
 *         return self.thisptr().removeAllPointClouds (viewport)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_25RemoveAllPointClouds(PyObject *__pyx_v_self, PyObject *__pyx_arg_viewport); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_24RemoveAllPointClouds[] = "PCLVisualizering.RemoveAllPointClouds(self, int viewport)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_25RemoveAllPointClouds(PyObject *__pyx_v_self, PyObject *__pyx_arg_viewport) {
  int __pyx_v_viewport;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("RemoveAllPointClouds (wrapper)", 0);
  assert(__pyx_arg_viewport); {
    __pyx_v_viewport = __Pyx_PyInt_As_int(__pyx_arg_viewport); if (unlikely((__pyx_v_viewport == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 66, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.RemoveAllPointClouds", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_24RemoveAllPointClouds(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self), ((int)__pyx_v_viewport));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_24RemoveAllPointClouds(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, int __pyx_v_viewport) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("RemoveAllPointClouds", 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":67
 * 
 *     def RemoveAllPointClouds(self, int viewport):
 *         return self.thisptr().removeAllPointClouds (viewport)             # <<<<<<<<<<<<<<
 * 
 *     def RemoveAllShapes(self, int viewport):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(__pyx_v_self)->removeAllPointClouds(__pyx_v_viewport)); if (unlikely(!__pyx_t_1)) __PYX_ERR(9, 67, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":66
 *         return self.thisptr().removeText3D (id, viewport)
 * 
 *     def RemoveAllPointClouds(self, int viewport):             # <<<<<<<<<<<<<<
 *         return self.thisptr().removeAllPointClouds (viewport)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.RemoveAllPointClouds", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":69
 *         return self.thisptr().removeAllPointClouds (viewport)
 * 
 *     def RemoveAllShapes(self, int viewport):             # <<<<<<<<<<<<<<
 *         return self.thisptr().removeAllShapes (viewport)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_27RemoveAllShapes(PyObject *__pyx_v_self, PyObject *__pyx_arg_viewport); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_26RemoveAllShapes[] = "PCLVisualizering.RemoveAllShapes(self, int viewport)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_27RemoveAllShapes(PyObject *__pyx_v_self, PyObject *__pyx_arg_viewport) {
  int __pyx_v_viewport;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("RemoveAllShapes (wrapper)", 0);
  assert(__pyx_arg_viewport); {
    __pyx_v_viewport = __Pyx_PyInt_As_int(__pyx_arg_viewport); if (unlikely((__pyx_v_viewport == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 69, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.RemoveAllShapes", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_26RemoveAllShapes(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self), ((int)__pyx_v_viewport));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_26RemoveAllShapes(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, int __pyx_v_viewport) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("RemoveAllShapes", 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":70
 * 
 *     def RemoveAllShapes(self, int viewport):
 *         return self.thisptr().removeAllShapes (viewport)             # <<<<<<<<<<<<<<
 * 
 *     def SetBackgroundColor (self, int r, int g, int b):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(__pyx_v_self)->removeAllShapes(__pyx_v_viewport)); if (unlikely(!__pyx_t_1)) __PYX_ERR(9, 70, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":69
 *         return self.thisptr().removeAllPointClouds (viewport)
 * 
 *     def RemoveAllShapes(self, int viewport):             # <<<<<<<<<<<<<<
 *         return self.thisptr().removeAllShapes (viewport)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.RemoveAllShapes", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":72
 *         return self.thisptr().removeAllShapes (viewport)
 * 
 *     def SetBackgroundColor (self, int r, int g, int b):             # <<<<<<<<<<<<<<
 *         self.thisptr().setBackgroundColor(r, g, b, 0)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_29SetBackgroundColor(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_28SetBackgroundColor[] = "PCLVisualizering.SetBackgroundColor(self, int r, int g, int b)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_29SetBackgroundColor(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_r;
  int __pyx_v_g;
  int __pyx_v_b;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SetBackgroundColor (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_r,&__pyx_n_s_g,&__pyx_n_s_b,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_r)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_g)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("SetBackgroundColor", 1, 3, 3, 1); __PYX_ERR(9, 72, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_b)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("SetBackgroundColor", 1, 3, 3, 2); __PYX_ERR(9, 72, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "SetBackgroundColor") < 0)) __PYX_ERR(9, 72, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_r = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_r == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 72, __pyx_L3_error)
    __pyx_v_g = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_g == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 72, __pyx_L3_error)
    __pyx_v_b = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_b == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 72, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("SetBackgroundColor", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(9, 72, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.SetBackgroundColor", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_28SetBackgroundColor(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self), __pyx_v_r, __pyx_v_g, __pyx_v_b);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_28SetBackgroundColor(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, int __pyx_v_r, int __pyx_v_g, int __pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SetBackgroundColor", 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":73
 * 
 *     def SetBackgroundColor (self, int r, int g, int b):
 *         self.thisptr().setBackgroundColor(r, g, b, 0)             # <<<<<<<<<<<<<<
 * 
 *     # return bool
 */
  __pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(__pyx_v_self)->setBackgroundColor(__pyx_v_r, __pyx_v_g, __pyx_v_b, 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":72
 *         return self.thisptr().removeAllShapes (viewport)
 * 
 *     def SetBackgroundColor (self, int r, int g, int b):             # <<<<<<<<<<<<<<
 *         self.thisptr().setBackgroundColor(r, g, b, 0)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":76
 * 
 *     # return bool
 *     def AddText (self, string text, int xpos, int ypos, id, int viewport):             # <<<<<<<<<<<<<<
 *         return self.thisptr().addText (text, xpos, ypos, <string> id, viewport)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_31AddText(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_30AddText[] = "PCLVisualizering.AddText(self, string text, int xpos, int ypos, id, int viewport)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_31AddText(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  std::string __pyx_v_text;
  int __pyx_v_xpos;
  int __pyx_v_ypos;
  PyObject *__pyx_v_id = 0;
  int __pyx_v_viewport;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddText (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_text,&__pyx_n_s_xpos,&__pyx_n_s_ypos,&__pyx_n_s_id,&__pyx_n_s_viewport,0};
    PyObject* values[5] = {0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_text)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xpos)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddText", 1, 5, 5, 1); __PYX_ERR(9, 76, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ypos)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddText", 1, 5, 5, 2); __PYX_ERR(9, 76, __pyx_L3_error)
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_id)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddText", 1, 5, 5, 3); __PYX_ERR(9, 76, __pyx_L3_error)
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_viewport)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddText", 1, 5, 5, 4); __PYX_ERR(9, 76, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AddText") < 0)) __PYX_ERR(9, 76, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 5) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
    }
    __pyx_v_text = __pyx_convert_string_from_py_std__in_string(values[0]); if (unlikely(PyErr_Occurred())) __PYX_ERR(9, 76, __pyx_L3_error)
    __pyx_v_xpos = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_xpos == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 76, __pyx_L3_error)
    __pyx_v_ypos = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_ypos == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 76, __pyx_L3_error)
    __pyx_v_id = values[3];
    __pyx_v_viewport = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_viewport == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 76, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AddText", 1, 5, 5, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(9, 76, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.AddText", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_30AddText(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self), __pyx_v_text, __pyx_v_xpos, __pyx_v_ypos, __pyx_v_id, __pyx_v_viewport);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_30AddText(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, std::string __pyx_v_text, int __pyx_v_xpos, int __pyx_v_ypos, PyObject *__pyx_v_id, int __pyx_v_viewport) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("AddText", 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":77
 *     # return bool
 *     def AddText (self, string text, int xpos, int ypos, id, int viewport):
 *         return self.thisptr().addText (text, xpos, ypos, <string> id, viewport)             # <<<<<<<<<<<<<<
 * 
 *     # return bool
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_v_id); if (unlikely(PyErr_Occurred())) __PYX_ERR(9, 77, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(__pyx_v_self)->addText(__pyx_v_text, __pyx_v_xpos, __pyx_v_ypos, ((std::string)__pyx_t_1), __pyx_v_viewport)); if (unlikely(!__pyx_t_2)) __PYX_ERR(9, 77, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":76
 * 
 *     # return bool
 *     def AddText (self, string text, int xpos, int ypos, id, int viewport):             # <<<<<<<<<<<<<<
 *         return self.thisptr().addText (text, xpos, ypos, <string> id, viewport)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.AddText", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":80
 * 
 *     # return bool
 *     def AddText (self, string text, int xpos, int ypos, double r, double g, double b, id, int viewport):             # <<<<<<<<<<<<<<
 *         return self.thisptr().addText (text, xpos, ypos, r, g, b, <string> id, viewport)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_33AddText(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_32AddText[] = "PCLVisualizering.AddText(self, string text, int xpos, int ypos, double r, double g, double b, id, int viewport)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_33AddText(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  std::string __pyx_v_text;
  int __pyx_v_xpos;
  int __pyx_v_ypos;
  double __pyx_v_r;
  double __pyx_v_g;
  double __pyx_v_b;
  PyObject *__pyx_v_id = 0;
  int __pyx_v_viewport;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddText (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_text,&__pyx_n_s_xpos,&__pyx_n_s_ypos,&__pyx_n_s_r,&__pyx_n_s_g,&__pyx_n_s_b,&__pyx_n_s_id,&__pyx_n_s_viewport,0};
    PyObject* values[8] = {0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_text)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xpos)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddText", 1, 8, 8, 1); __PYX_ERR(9, 80, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ypos)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddText", 1, 8, 8, 2); __PYX_ERR(9, 80, __pyx_L3_error)
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_r)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddText", 1, 8, 8, 3); __PYX_ERR(9, 80, __pyx_L3_error)
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_g)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddText", 1, 8, 8, 4); __PYX_ERR(9, 80, __pyx_L3_error)
        }
        case  5:
        if (likely((values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_b)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddText", 1, 8, 8, 5); __PYX_ERR(9, 80, __pyx_L3_error)
        }
        case  6:
        if (likely((values[6] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_id)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddText", 1, 8, 8, 6); __PYX_ERR(9, 80, __pyx_L3_error)
        }
        case  7:
        if (likely((values[7] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_viewport)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddText", 1, 8, 8, 7); __PYX_ERR(9, 80, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AddText") < 0)) __PYX_ERR(9, 80, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 8) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
    }
    __pyx_v_text = __pyx_convert_string_from_py_std__in_string(values[0]); if (unlikely(PyErr_Occurred())) __PYX_ERR(9, 80, __pyx_L3_error)
    __pyx_v_xpos = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_xpos == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 80, __pyx_L3_error)
    __pyx_v_ypos = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_ypos == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 80, __pyx_L3_error)
    __pyx_v_r = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_r == (double)-1) && PyErr_Occurred())) __PYX_ERR(9, 80, __pyx_L3_error)
    __pyx_v_g = __pyx_PyFloat_AsDouble(values[4]); if (unlikely((__pyx_v_g == (double)-1) && PyErr_Occurred())) __PYX_ERR(9, 80, __pyx_L3_error)
    __pyx_v_b = __pyx_PyFloat_AsDouble(values[5]); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) __PYX_ERR(9, 80, __pyx_L3_error)
    __pyx_v_id = values[6];
    __pyx_v_viewport = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_viewport == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 80, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AddText", 1, 8, 8, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(9, 80, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.AddText", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_32AddText(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self), __pyx_v_text, __pyx_v_xpos, __pyx_v_ypos, __pyx_v_r, __pyx_v_g, __pyx_v_b, __pyx_v_id, __pyx_v_viewport);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_32AddText(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, std::string __pyx_v_text, int __pyx_v_xpos, int __pyx_v_ypos, double __pyx_v_r, double __pyx_v_g, double __pyx_v_b, PyObject *__pyx_v_id, int __pyx_v_viewport) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("AddText", 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":81
 *     # return bool
 *     def AddText (self, string text, int xpos, int ypos, double r, double g, double b, id, int viewport):
 *         return self.thisptr().addText (text, xpos, ypos, r, g, b, <string> id, viewport)             # <<<<<<<<<<<<<<
 * 
 *     # return bool
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_v_id); if (unlikely(PyErr_Occurred())) __PYX_ERR(9, 81, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(__pyx_v_self)->addText(__pyx_v_text, __pyx_v_xpos, __pyx_v_ypos, __pyx_v_r, __pyx_v_g, __pyx_v_b, ((std::string)__pyx_t_1), __pyx_v_viewport)); if (unlikely(!__pyx_t_2)) __PYX_ERR(9, 81, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":80
 * 
 *     # return bool
 *     def AddText (self, string text, int xpos, int ypos, double r, double g, double b, id, int viewport):             # <<<<<<<<<<<<<<
 *         return self.thisptr().addText (text, xpos, ypos, r, g, b, <string> id, viewport)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.AddText", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":84
 * 
 *     # return bool
 *     def AddText (self, string text, int xpos, int ypos, int fontsize, double r, double g, double b, id, int viewport):             # <<<<<<<<<<<<<<
 *         return self.thisptr().addText (text, xpos, ypos, fontsize, r, g, b, <string> id, viewport)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_35AddText(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_34AddText[] = "PCLVisualizering.AddText(self, string text, int xpos, int ypos, int fontsize, double r, double g, double b, id, int viewport)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_35AddText(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  std::string __pyx_v_text;
  int __pyx_v_xpos;
  int __pyx_v_ypos;
  int __pyx_v_fontsize;
  double __pyx_v_r;
  double __pyx_v_g;
  double __pyx_v_b;
  PyObject *__pyx_v_id = 0;
  int __pyx_v_viewport;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddText (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_text,&__pyx_n_s_xpos,&__pyx_n_s_ypos,&__pyx_n_s_fontsize,&__pyx_n_s_r,&__pyx_n_s_g,&__pyx_n_s_b,&__pyx_n_s_id,&__pyx_n_s_viewport,0};
    PyObject* values[9] = {0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_text)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xpos)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddText", 1, 9, 9, 1); __PYX_ERR(9, 84, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ypos)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddText", 1, 9, 9, 2); __PYX_ERR(9, 84, __pyx_L3_error)
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_fontsize)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddText", 1, 9, 9, 3); __PYX_ERR(9, 84, __pyx_L3_error)
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_r)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddText", 1, 9, 9, 4); __PYX_ERR(9, 84, __pyx_L3_error)
        }
        case  5:
        if (likely((values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_g)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddText", 1, 9, 9, 5); __PYX_ERR(9, 84, __pyx_L3_error)
        }
        case  6:
        if (likely((values[6] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_b)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddText", 1, 9, 9, 6); __PYX_ERR(9, 84, __pyx_L3_error)
        }
        case  7:
        if (likely((values[7] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_id)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddText", 1, 9, 9, 7); __PYX_ERR(9, 84, __pyx_L3_error)
        }
        case  8:
        if (likely((values[8] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_viewport)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddText", 1, 9, 9, 8); __PYX_ERR(9, 84, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AddText") < 0)) __PYX_ERR(9, 84, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 9) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
    }
    __pyx_v_text = __pyx_convert_string_from_py_std__in_string(values[0]); if (unlikely(PyErr_Occurred())) __PYX_ERR(9, 84, __pyx_L3_error)
    __pyx_v_xpos = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_xpos == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 84, __pyx_L3_error)
    __pyx_v_ypos = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_ypos == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 84, __pyx_L3_error)
    __pyx_v_fontsize = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_fontsize == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 84, __pyx_L3_error)
    __pyx_v_r = __pyx_PyFloat_AsDouble(values[4]); if (unlikely((__pyx_v_r == (double)-1) && PyErr_Occurred())) __PYX_ERR(9, 84, __pyx_L3_error)
    __pyx_v_g = __pyx_PyFloat_AsDouble(values[5]); if (unlikely((__pyx_v_g == (double)-1) && PyErr_Occurred())) __PYX_ERR(9, 84, __pyx_L3_error)
    __pyx_v_b = __pyx_PyFloat_AsDouble(values[6]); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) __PYX_ERR(9, 84, __pyx_L3_error)
    __pyx_v_id = values[7];
    __pyx_v_viewport = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_viewport == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 84, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AddText", 1, 9, 9, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(9, 84, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.AddText", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_34AddText(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self), __pyx_v_text, __pyx_v_xpos, __pyx_v_ypos, __pyx_v_fontsize, __pyx_v_r, __pyx_v_g, __pyx_v_b, __pyx_v_id, __pyx_v_viewport);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_34AddText(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, std::string __pyx_v_text, int __pyx_v_xpos, int __pyx_v_ypos, int __pyx_v_fontsize, double __pyx_v_r, double __pyx_v_g, double __pyx_v_b, PyObject *__pyx_v_id, int __pyx_v_viewport) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("AddText", 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":85
 *     # return bool
 *     def AddText (self, string text, int xpos, int ypos, int fontsize, double r, double g, double b, id, int viewport):
 *         return self.thisptr().addText (text, xpos, ypos, fontsize, r, g, b, <string> id, viewport)             # <<<<<<<<<<<<<<
 * 
 *     # return bool
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_v_id); if (unlikely(PyErr_Occurred())) __PYX_ERR(9, 85, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(__pyx_v_self)->addText(__pyx_v_text, __pyx_v_xpos, __pyx_v_ypos, __pyx_v_fontsize, __pyx_v_r, __pyx_v_g, __pyx_v_b, ((std::string)__pyx_t_1), __pyx_v_viewport)); if (unlikely(!__pyx_t_2)) __PYX_ERR(9, 85, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":84
 * 
 *     # return bool
 *     def AddText (self, string text, int xpos, int ypos, int fontsize, double r, double g, double b, id, int viewport):             # <<<<<<<<<<<<<<
 *         return self.thisptr().addText (text, xpos, ypos, fontsize, r, g, b, <string> id, viewport)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.AddText", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":89
 *     # return bool
 *     # def UpdateText (self, string text, int xpos, int ypos, const string &id):
 *     def UpdateText (self, string text, int xpos, int ypos, id):             # <<<<<<<<<<<<<<
 *         return self.thisptr().updateText (text, xpos, ypos, <string> id)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_37UpdateText(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_36UpdateText[] = "PCLVisualizering.UpdateText(self, string text, int xpos, int ypos, id)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_37UpdateText(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  std::string __pyx_v_text;
  int __pyx_v_xpos;
  int __pyx_v_ypos;
  PyObject *__pyx_v_id = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("UpdateText (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_text,&__pyx_n_s_xpos,&__pyx_n_s_ypos,&__pyx_n_s_id,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_text)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xpos)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("UpdateText", 1, 4, 4, 1); __PYX_ERR(9, 89, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ypos)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("UpdateText", 1, 4, 4, 2); __PYX_ERR(9, 89, __pyx_L3_error)
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_id)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("UpdateText", 1, 4, 4, 3); __PYX_ERR(9, 89, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "UpdateText") < 0)) __PYX_ERR(9, 89, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_text = __pyx_convert_string_from_py_std__in_string(values[0]); if (unlikely(PyErr_Occurred())) __PYX_ERR(9, 89, __pyx_L3_error)
    __pyx_v_xpos = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_xpos == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 89, __pyx_L3_error)
    __pyx_v_ypos = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_ypos == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 89, __pyx_L3_error)
    __pyx_v_id = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("UpdateText", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(9, 89, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.UpdateText", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_36UpdateText(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self), __pyx_v_text, __pyx_v_xpos, __pyx_v_ypos, __pyx_v_id);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_36UpdateText(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, std::string __pyx_v_text, int __pyx_v_xpos, int __pyx_v_ypos, PyObject *__pyx_v_id) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("UpdateText", 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":90
 *     # def UpdateText (self, string text, int xpos, int ypos, const string &id):
 *     def UpdateText (self, string text, int xpos, int ypos, id):
 *         return self.thisptr().updateText (text, xpos, ypos, <string> id)             # <<<<<<<<<<<<<<
 * 
 *     # return bool
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_v_id); if (unlikely(PyErr_Occurred())) __PYX_ERR(9, 90, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(__pyx_v_self)->updateText(__pyx_v_text, __pyx_v_xpos, __pyx_v_ypos, ((std::string)__pyx_t_1))); if (unlikely(!__pyx_t_2)) __PYX_ERR(9, 90, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":89
 *     # return bool
 *     # def UpdateText (self, string text, int xpos, int ypos, const string &id):
 *     def UpdateText (self, string text, int xpos, int ypos, id):             # <<<<<<<<<<<<<<
 *         return self.thisptr().updateText (text, xpos, ypos, <string> id)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.UpdateText", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":94
 *     # return bool
 *     # def UpdateText (self, string text, int xpos, int ypos, double r, double g, double b, const string &id):
 *     def UpdateText (self, string text, int xpos, int ypos, double r, double g, double b, id):             # <<<<<<<<<<<<<<
 *         return self.thisptr().updateText (text, xpos, ypos,  r,  g,  b, <string> id)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_39UpdateText(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_38UpdateText[] = "PCLVisualizering.UpdateText(self, string text, int xpos, int ypos, double r, double g, double b, id)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_39UpdateText(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  std::string __pyx_v_text;
  int __pyx_v_xpos;
  int __pyx_v_ypos;
  double __pyx_v_r;
  double __pyx_v_g;
  double __pyx_v_b;
  PyObject *__pyx_v_id = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("UpdateText (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_text,&__pyx_n_s_xpos,&__pyx_n_s_ypos,&__pyx_n_s_r,&__pyx_n_s_g,&__pyx_n_s_b,&__pyx_n_s_id,0};
    PyObject* values[7] = {0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_text)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xpos)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("UpdateText", 1, 7, 7, 1); __PYX_ERR(9, 94, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ypos)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("UpdateText", 1, 7, 7, 2); __PYX_ERR(9, 94, __pyx_L3_error)
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_r)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("UpdateText", 1, 7, 7, 3); __PYX_ERR(9, 94, __pyx_L3_error)
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_g)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("UpdateText", 1, 7, 7, 4); __PYX_ERR(9, 94, __pyx_L3_error)
        }
        case  5:
        if (likely((values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_b)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("UpdateText", 1, 7, 7, 5); __PYX_ERR(9, 94, __pyx_L3_error)
        }
        case  6:
        if (likely((values[6] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_id)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("UpdateText", 1, 7, 7, 6); __PYX_ERR(9, 94, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "UpdateText") < 0)) __PYX_ERR(9, 94, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 7) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
    }
    __pyx_v_text = __pyx_convert_string_from_py_std__in_string(values[0]); if (unlikely(PyErr_Occurred())) __PYX_ERR(9, 94, __pyx_L3_error)
    __pyx_v_xpos = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_xpos == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 94, __pyx_L3_error)
    __pyx_v_ypos = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_ypos == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 94, __pyx_L3_error)
    __pyx_v_r = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_r == (double)-1) && PyErr_Occurred())) __PYX_ERR(9, 94, __pyx_L3_error)
    __pyx_v_g = __pyx_PyFloat_AsDouble(values[4]); if (unlikely((__pyx_v_g == (double)-1) && PyErr_Occurred())) __PYX_ERR(9, 94, __pyx_L3_error)
    __pyx_v_b = __pyx_PyFloat_AsDouble(values[5]); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) __PYX_ERR(9, 94, __pyx_L3_error)
    __pyx_v_id = values[6];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("UpdateText", 1, 7, 7, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(9, 94, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.UpdateText", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_38UpdateText(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self), __pyx_v_text, __pyx_v_xpos, __pyx_v_ypos, __pyx_v_r, __pyx_v_g, __pyx_v_b, __pyx_v_id);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_38UpdateText(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, std::string __pyx_v_text, int __pyx_v_xpos, int __pyx_v_ypos, double __pyx_v_r, double __pyx_v_g, double __pyx_v_b, PyObject *__pyx_v_id) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("UpdateText", 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":95
 *     # def UpdateText (self, string text, int xpos, int ypos, double r, double g, double b, const string &id):
 *     def UpdateText (self, string text, int xpos, int ypos, double r, double g, double b, id):
 *         return self.thisptr().updateText (text, xpos, ypos,  r,  g,  b, <string> id)             # <<<<<<<<<<<<<<
 * 
 *     # return bool
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_v_id); if (unlikely(PyErr_Occurred())) __PYX_ERR(9, 95, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(__pyx_v_self)->updateText(__pyx_v_text, __pyx_v_xpos, __pyx_v_ypos, __pyx_v_r, __pyx_v_g, __pyx_v_b, ((std::string)__pyx_t_1))); if (unlikely(!__pyx_t_2)) __PYX_ERR(9, 95, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":94
 *     # return bool
 *     # def UpdateText (self, string text, int xpos, int ypos, double r, double g, double b, const string &id):
 *     def UpdateText (self, string text, int xpos, int ypos, double r, double g, double b, id):             # <<<<<<<<<<<<<<
 *         return self.thisptr().updateText (text, xpos, ypos,  r,  g,  b, <string> id)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.UpdateText", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":99
 *     # return bool
 *     # def UpdateText (self, string text, int xpos, int ypos, int fontsize, double r, double g, double b, const string &id):
 *     def UpdateText (self, string text, int xpos, int ypos, int fontsize, double r, double g, double b, id):             # <<<<<<<<<<<<<<
 *         return self.thisptr().updateText (text, xpos, ypos, fontsize, r, g, b, <string> id)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_41UpdateText(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_40UpdateText[] = "PCLVisualizering.UpdateText(self, string text, int xpos, int ypos, int fontsize, double r, double g, double b, id)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_41UpdateText(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  std::string __pyx_v_text;
  int __pyx_v_xpos;
  int __pyx_v_ypos;
  int __pyx_v_fontsize;
  double __pyx_v_r;
  double __pyx_v_g;
  double __pyx_v_b;
  PyObject *__pyx_v_id = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("UpdateText (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_text,&__pyx_n_s_xpos,&__pyx_n_s_ypos,&__pyx_n_s_fontsize,&__pyx_n_s_r,&__pyx_n_s_g,&__pyx_n_s_b,&__pyx_n_s_id,0};
    PyObject* values[8] = {0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_text)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xpos)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("UpdateText", 1, 8, 8, 1); __PYX_ERR(9, 99, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ypos)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("UpdateText", 1, 8, 8, 2); __PYX_ERR(9, 99, __pyx_L3_error)
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_fontsize)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("UpdateText", 1, 8, 8, 3); __PYX_ERR(9, 99, __pyx_L3_error)
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_r)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("UpdateText", 1, 8, 8, 4); __PYX_ERR(9, 99, __pyx_L3_error)
        }
        case  5:
        if (likely((values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_g)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("UpdateText", 1, 8, 8, 5); __PYX_ERR(9, 99, __pyx_L3_error)
        }
        case  6:
        if (likely((values[6] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_b)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("UpdateText", 1, 8, 8, 6); __PYX_ERR(9, 99, __pyx_L3_error)
        }
        case  7:
        if (likely((values[7] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_id)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("UpdateText", 1, 8, 8, 7); __PYX_ERR(9, 99, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "UpdateText") < 0)) __PYX_ERR(9, 99, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 8) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
    }
    __pyx_v_text = __pyx_convert_string_from_py_std__in_string(values[0]); if (unlikely(PyErr_Occurred())) __PYX_ERR(9, 99, __pyx_L3_error)
    __pyx_v_xpos = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_xpos == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 99, __pyx_L3_error)
    __pyx_v_ypos = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_ypos == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 99, __pyx_L3_error)
    __pyx_v_fontsize = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_fontsize == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 99, __pyx_L3_error)
    __pyx_v_r = __pyx_PyFloat_AsDouble(values[4]); if (unlikely((__pyx_v_r == (double)-1) && PyErr_Occurred())) __PYX_ERR(9, 99, __pyx_L3_error)
    __pyx_v_g = __pyx_PyFloat_AsDouble(values[5]); if (unlikely((__pyx_v_g == (double)-1) && PyErr_Occurred())) __PYX_ERR(9, 99, __pyx_L3_error)
    __pyx_v_b = __pyx_PyFloat_AsDouble(values[6]); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) __PYX_ERR(9, 99, __pyx_L3_error)
    __pyx_v_id = values[7];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("UpdateText", 1, 8, 8, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(9, 99, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.UpdateText", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_40UpdateText(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self), __pyx_v_text, __pyx_v_xpos, __pyx_v_ypos, __pyx_v_fontsize, __pyx_v_r, __pyx_v_g, __pyx_v_b, __pyx_v_id);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_40UpdateText(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, std::string __pyx_v_text, int __pyx_v_xpos, int __pyx_v_ypos, int __pyx_v_fontsize, double __pyx_v_r, double __pyx_v_g, double __pyx_v_b, PyObject *__pyx_v_id) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("UpdateText", 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":100
 *     # def UpdateText (self, string text, int xpos, int ypos, int fontsize, double r, double g, double b, const string &id):
 *     def UpdateText (self, string text, int xpos, int ypos, int fontsize, double r, double g, double b, id):
 *         return self.thisptr().updateText (text, xpos, ypos, fontsize, r, g, b, <string> id)             # <<<<<<<<<<<<<<
 * 
 *     # bool updateShapePose (const string &id, const eigen3.Affine3f& pose)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_v_id); if (unlikely(PyErr_Occurred())) __PYX_ERR(9, 100, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(__pyx_v_self)->updateText(__pyx_v_text, __pyx_v_xpos, __pyx_v_ypos, __pyx_v_fontsize, __pyx_v_r, __pyx_v_g, __pyx_v_b, ((std::string)__pyx_t_1))); if (unlikely(!__pyx_t_2)) __PYX_ERR(9, 100, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":99
 *     # return bool
 *     # def UpdateText (self, string text, int xpos, int ypos, int fontsize, double r, double g, double b, const string &id):
 *     def UpdateText (self, string text, int xpos, int ypos, int fontsize, double r, double g, double b, id):             # <<<<<<<<<<<<<<
 *         return self.thisptr().updateText (text, xpos, ypos, fontsize, r, g, b, <string> id)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.UpdateText", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":120
 *     # def AddPointCloud (self, _pcl.PointCloud cloud, string id = 'cloud', int viewport = 0):
 *     # call (ex. id=b'range image')
 *     def AddPointCloud (self, _pcl.PointCloud cloud, id = b'cloud', int viewport = 0):             # <<<<<<<<<<<<<<
 *         self.thisptr().addPointCloud(cloud.thisptr_shared, <string> id, viewport)
 *         pass
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_43AddPointCloud(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_42AddPointCloud[] = "PCLVisualizering.AddPointCloud(self, PointCloud cloud, id=b'cloud', int viewport=0)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_43AddPointCloud(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_3pcl_4_pcl_PointCloud *__pyx_v_cloud = 0;
  PyObject *__pyx_v_id = 0;
  int __pyx_v_viewport;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddPointCloud (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_cloud,&__pyx_n_s_id,&__pyx_n_s_viewport,0};
    PyObject* values[3] = {0,0,0};
    values[1] = ((PyObject *)__pyx_n_b_cloud);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_cloud)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_id);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_viewport);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AddPointCloud") < 0)) __PYX_ERR(9, 120, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_cloud = ((struct __pyx_obj_3pcl_4_pcl_PointCloud *)values[0]);
    __pyx_v_id = values[1];
    if (values[2]) {
      __pyx_v_viewport = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_viewport == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 120, __pyx_L3_error)
    } else {
      __pyx_v_viewport = ((int)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AddPointCloud", 0, 1, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(9, 120, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.AddPointCloud", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_cloud), __pyx_ptype_3pcl_4_pcl_PointCloud, 1, "cloud", 0))) __PYX_ERR(9, 120, __pyx_L1_error)
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_42AddPointCloud(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self), __pyx_v_cloud, __pyx_v_id, __pyx_v_viewport);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_42AddPointCloud(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, struct __pyx_obj_3pcl_4_pcl_PointCloud *__pyx_v_cloud, PyObject *__pyx_v_id, int __pyx_v_viewport) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  __Pyx_RefNannySetupContext("AddPointCloud", 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":121
 *     # call (ex. id=b'range image')
 *     def AddPointCloud (self, _pcl.PointCloud cloud, id = b'cloud', int viewport = 0):
 *         self.thisptr().addPointCloud(cloud.thisptr_shared, <string> id, viewport)             # <<<<<<<<<<<<<<
 *         pass
 * 
 */
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_v_id); if (unlikely(PyErr_Occurred())) __PYX_ERR(9, 121, __pyx_L1_error)
  __pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(__pyx_v_self)->addPointCloud(__pyx_v_cloud->thisptr_shared, ((std::string)__pyx_t_1), __pyx_v_viewport);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":120
 *     # def AddPointCloud (self, _pcl.PointCloud cloud, string id = 'cloud', int viewport = 0):
 *     # call (ex. id=b'range image')
 *     def AddPointCloud (self, _pcl.PointCloud cloud, id = b'cloud', int viewport = 0):             # <<<<<<<<<<<<<<
 *         self.thisptr().addPointCloud(cloud.thisptr_shared, <string> id, viewport)
 *         pass
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.AddPointCloud", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":126
 *     # <const shared_ptr[PointCloudColorHandler[PointT]]>
 *     # def AddPointCloud_ColorHandler(self, _pcl.PointCloud cloud, pcl_visualization.PointCloudColorHandleringCustom color_handler, string id = 'cloud', int viewport = 0):
 *     def AddPointCloud_ColorHandler(self, _pcl.PointCloud cloud, pcl_visualization.PointCloudColorHandleringCustom color_handler, id = b'cloud', viewport = 0):             # <<<<<<<<<<<<<<
 *         # NG : Base Class
 *         # self.thisptr().addPointCloud[cpp.PointXYZ](cloud.thisptr_shared, <const pclvis.PointCloudColorHandler[cpp.PointXYZ]> deref(color_handler.thisptr_shared.get()), id, viewport)
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_45AddPointCloud_ColorHandler(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_44AddPointCloud_ColorHandler[] = "PCLVisualizering.AddPointCloud_ColorHandler(self, PointCloud cloud, PointCloudColorHandleringCustom color_handler, id=b'cloud', viewport=0)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_45AddPointCloud_ColorHandler(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_3pcl_4_pcl_PointCloud *__pyx_v_cloud = 0;
  struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringCustom *__pyx_v_color_handler = 0;
  PyObject *__pyx_v_id = 0;
  PyObject *__pyx_v_viewport = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddPointCloud_ColorHandler (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_cloud,&__pyx_n_s_color_handler,&__pyx_n_s_id,&__pyx_n_s_viewport,0};
    PyObject* values[4] = {0,0,0,0};
    values[2] = ((PyObject *)__pyx_n_b_cloud);
    values[3] = ((PyObject *)__pyx_int_0);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_cloud)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_color_handler)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddPointCloud_ColorHandler", 0, 2, 4, 1); __PYX_ERR(9, 126, __pyx_L3_error)
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_id);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_viewport);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AddPointCloud_ColorHandler") < 0)) __PYX_ERR(9, 126, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_cloud = ((struct __pyx_obj_3pcl_4_pcl_PointCloud *)values[0]);
    __pyx_v_color_handler = ((struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringCustom *)values[1]);
    __pyx_v_id = values[2];
    __pyx_v_viewport = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AddPointCloud_ColorHandler", 0, 2, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(9, 126, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.AddPointCloud_ColorHandler", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_cloud), __pyx_ptype_3pcl_4_pcl_PointCloud, 1, "cloud", 0))) __PYX_ERR(9, 126, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_color_handler), __pyx_ptype_3pcl_17pcl_visualization_PointCloudColorHandleringCustom, 1, "color_handler", 0))) __PYX_ERR(9, 126, __pyx_L1_error)
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_44AddPointCloud_ColorHandler(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self), __pyx_v_cloud, __pyx_v_color_handler, __pyx_v_id, __pyx_v_viewport);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_44AddPointCloud_ColorHandler(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, struct __pyx_obj_3pcl_4_pcl_PointCloud *__pyx_v_cloud, struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringCustom *__pyx_v_color_handler, PyObject *__pyx_v_id, PyObject *__pyx_v_viewport) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("AddPointCloud_ColorHandler", 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":131
 *         # OK? : Inheritance Class(PointCloudColorHandler)
 *         # self.thisptr().addPointCloud[cpp.PointXYZ](cloud.thisptr_shared, <const pclvis.PointCloudColorHandlerCustom[cpp.PointXYZ]> deref(color_handler.thisptr_shared.get()), id, viewport)
 *         self.thisptr().addPointCloud[cpp.PointXYZ](cloud.thisptr_shared, <const pclvis.PointCloudColorHandlerCustom[cpp.PointXYZ]> deref(color_handler.thisptr_shared.get()), <string> id, viewport)             # <<<<<<<<<<<<<<
 *         pass
 * 
 */
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_v_id); if (unlikely(PyErr_Occurred())) __PYX_ERR(9, 131, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_v_viewport); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 131, __pyx_L1_error)
  __pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(__pyx_v_self)->addPointCloud<struct pcl::PointXYZ>(__pyx_v_cloud->thisptr_shared, ((pcl::visualization::PointCloudColorHandlerCustom<struct pcl::PointXYZ>  const )(*__pyx_v_color_handler->thisptr_shared.get())), ((std::string)__pyx_t_1), __pyx_t_2);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":126
 *     # <const shared_ptr[PointCloudColorHandler[PointT]]>
 *     # def AddPointCloud_ColorHandler(self, _pcl.PointCloud cloud, pcl_visualization.PointCloudColorHandleringCustom color_handler, string id = 'cloud', int viewport = 0):
 *     def AddPointCloud_ColorHandler(self, _pcl.PointCloud cloud, pcl_visualization.PointCloudColorHandleringCustom color_handler, id = b'cloud', viewport = 0):             # <<<<<<<<<<<<<<
 *         # NG : Base Class
 *         # self.thisptr().addPointCloud[cpp.PointXYZ](cloud.thisptr_shared, <const pclvis.PointCloudColorHandler[cpp.PointXYZ]> deref(color_handler.thisptr_shared.get()), id, viewport)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.AddPointCloud_ColorHandler", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":134
 *         pass
 * 
 *     def AddPointCloud_ColorHandler(self, _pcl.RangeImages cloud, pcl_visualization.PointCloudColorHandleringCustom color_handler, id = b'cloud', int viewport = 0):             # <<<<<<<<<<<<<<
 *         # self.thisptr().addPointCloud[cpp.PointWithRange](cloud.thisptr_shared, <const pclvis.PointCloudColorHandlerCustom[cpp.PointXYZ]> deref(color_handler.thisptr_shared.get()), id, viewport)
 *         pass
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_47AddPointCloud_ColorHandler(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_46AddPointCloud_ColorHandler[] = "PCLVisualizering.AddPointCloud_ColorHandler(self, RangeImages cloud, PointCloudColorHandleringCustom color_handler, id=b'cloud', int viewport=0)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_47AddPointCloud_ColorHandler(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED struct __pyx_obj_3pcl_4_pcl_RangeImages *__pyx_v_cloud = 0;
  CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringCustom *__pyx_v_color_handler = 0;
  CYTHON_UNUSED PyObject *__pyx_v_id = 0;
  CYTHON_UNUSED int __pyx_v_viewport;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddPointCloud_ColorHandler (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_cloud,&__pyx_n_s_color_handler,&__pyx_n_s_id,&__pyx_n_s_viewport,0};
    PyObject* values[4] = {0,0,0,0};
    values[2] = ((PyObject *)__pyx_n_b_cloud);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_cloud)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_color_handler)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddPointCloud_ColorHandler", 0, 2, 4, 1); __PYX_ERR(9, 134, __pyx_L3_error)
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_id);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_viewport);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AddPointCloud_ColorHandler") < 0)) __PYX_ERR(9, 134, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_cloud = ((struct __pyx_obj_3pcl_4_pcl_RangeImages *)values[0]);
    __pyx_v_color_handler = ((struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringCustom *)values[1]);
    __pyx_v_id = values[2];
    if (values[3]) {
      __pyx_v_viewport = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_viewport == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 134, __pyx_L3_error)
    } else {
      __pyx_v_viewport = ((int)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AddPointCloud_ColorHandler", 0, 2, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(9, 134, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.AddPointCloud_ColorHandler", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_cloud), __pyx_ptype_3pcl_4_pcl_RangeImages, 1, "cloud", 0))) __PYX_ERR(9, 134, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_color_handler), __pyx_ptype_3pcl_17pcl_visualization_PointCloudColorHandleringCustom, 1, "color_handler", 0))) __PYX_ERR(9, 134, __pyx_L1_error)
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_46AddPointCloud_ColorHandler(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self), __pyx_v_cloud, __pyx_v_color_handler, __pyx_v_id, __pyx_v_viewport);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_46AddPointCloud_ColorHandler(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, CYTHON_UNUSED struct __pyx_obj_3pcl_4_pcl_RangeImages *__pyx_v_cloud, CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringCustom *__pyx_v_color_handler, CYTHON_UNUSED PyObject *__pyx_v_id, CYTHON_UNUSED int __pyx_v_viewport) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddPointCloud_ColorHandler", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":144
 *     #     # pass
 * 
 *     def AddPointCloudNormals(self, _pcl.PointCloud cloud, _pcl.PointCloud_Normal normal, int level = 100, double scale = 0.02, id = b'cloud', int viewport = 0):             # <<<<<<<<<<<<<<
 *         self.thisptr().addPointCloudNormals[cpp.PointXYZ, cpp.Normal](<cpp.PointCloudPtr_t> cloud.thisptr_shared, <cpp.PointCloud_Normal_Ptr_t> normal.thisptr_shared, level, scale, <string> id, viewport)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_49AddPointCloudNormals(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_48AddPointCloudNormals[] = "PCLVisualizering.AddPointCloudNormals(self, PointCloud cloud, PointCloud_Normal normal, int level=100, double scale=0.02, id=b'cloud', int viewport=0)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_49AddPointCloudNormals(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_3pcl_4_pcl_PointCloud *__pyx_v_cloud = 0;
  struct __pyx_obj_3pcl_4_pcl_PointCloud_Normal *__pyx_v_normal = 0;
  int __pyx_v_level;
  double __pyx_v_scale;
  PyObject *__pyx_v_id = 0;
  int __pyx_v_viewport;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddPointCloudNormals (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_cloud,&__pyx_n_s_normal,&__pyx_n_s_level,&__pyx_n_s_scale,&__pyx_n_s_id,&__pyx_n_s_viewport,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    values[4] = ((PyObject *)__pyx_n_b_cloud);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_cloud)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_normal)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddPointCloudNormals", 0, 2, 6, 1); __PYX_ERR(9, 144, __pyx_L3_error)
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_level);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_scale);
          if (value) { values[3] = value; kw_args--; }
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_id);
          if (value) { values[4] = value; kw_args--; }
        }
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_viewport);
          if (value) { values[5] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AddPointCloudNormals") < 0)) __PYX_ERR(9, 144, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_cloud = ((struct __pyx_obj_3pcl_4_pcl_PointCloud *)values[0]);
    __pyx_v_normal = ((struct __pyx_obj_3pcl_4_pcl_PointCloud_Normal *)values[1]);
    if (values[2]) {
      __pyx_v_level = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_level == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 144, __pyx_L3_error)
    } else {
      __pyx_v_level = ((int)0x64);
    }
    if (values[3]) {
      __pyx_v_scale = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_scale == (double)-1) && PyErr_Occurred())) __PYX_ERR(9, 144, __pyx_L3_error)
    } else {
      __pyx_v_scale = ((double)0.02);
    }
    __pyx_v_id = values[4];
    if (values[5]) {
      __pyx_v_viewport = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_viewport == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 144, __pyx_L3_error)
    } else {
      __pyx_v_viewport = ((int)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AddPointCloudNormals", 0, 2, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(9, 144, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.AddPointCloudNormals", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_cloud), __pyx_ptype_3pcl_4_pcl_PointCloud, 1, "cloud", 0))) __PYX_ERR(9, 144, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_normal), __pyx_ptype_3pcl_4_pcl_PointCloud_Normal, 1, "normal", 0))) __PYX_ERR(9, 144, __pyx_L1_error)
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_48AddPointCloudNormals(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self), __pyx_v_cloud, __pyx_v_normal, __pyx_v_level, __pyx_v_scale, __pyx_v_id, __pyx_v_viewport);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_48AddPointCloudNormals(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, struct __pyx_obj_3pcl_4_pcl_PointCloud *__pyx_v_cloud, struct __pyx_obj_3pcl_4_pcl_PointCloud_Normal *__pyx_v_normal, int __pyx_v_level, double __pyx_v_scale, PyObject *__pyx_v_id, int __pyx_v_viewport) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  __Pyx_RefNannySetupContext("AddPointCloudNormals", 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":145
 * 
 *     def AddPointCloudNormals(self, _pcl.PointCloud cloud, _pcl.PointCloud_Normal normal, int level = 100, double scale = 0.02, id = b'cloud', int viewport = 0):
 *         self.thisptr().addPointCloudNormals[cpp.PointXYZ, cpp.Normal](<cpp.PointCloudPtr_t> cloud.thisptr_shared, <cpp.PointCloud_Normal_Ptr_t> normal.thisptr_shared, level, scale, <string> id, viewport)             # <<<<<<<<<<<<<<
 * 
 *     def SetPointCloudRenderingProperties(self, int propType, int propValue, propName = b'cloud'):
 */
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_v_id); if (unlikely(PyErr_Occurred())) __PYX_ERR(9, 145, __pyx_L1_error)
  __pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(__pyx_v_self)->addPointCloudNormals<struct pcl::PointXYZ,struct pcl::Normal>(((__pyx_t_3pcl_8pcl_defs_PointCloudPtr_t)__pyx_v_cloud->thisptr_shared), ((__pyx_t_3pcl_8pcl_defs_PointCloud_Normal_Ptr_t)__pyx_v_normal->thisptr_shared), __pyx_v_level, __pyx_v_scale, ((std::string)__pyx_t_1), __pyx_v_viewport);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":144
 *     #     # pass
 * 
 *     def AddPointCloudNormals(self, _pcl.PointCloud cloud, _pcl.PointCloud_Normal normal, int level = 100, double scale = 0.02, id = b'cloud', int viewport = 0):             # <<<<<<<<<<<<<<
 *         self.thisptr().addPointCloudNormals[cpp.PointXYZ, cpp.Normal](<cpp.PointCloudPtr_t> cloud.thisptr_shared, <cpp.PointCloud_Normal_Ptr_t> normal.thisptr_shared, level, scale, <string> id, viewport)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.AddPointCloudNormals", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":147
 *         self.thisptr().addPointCloudNormals[cpp.PointXYZ, cpp.Normal](<cpp.PointCloudPtr_t> cloud.thisptr_shared, <cpp.PointCloud_Normal_Ptr_t> normal.thisptr_shared, level, scale, <string> id, viewport)
 * 
 *     def SetPointCloudRenderingProperties(self, int propType, int propValue, propName = b'cloud'):             # <<<<<<<<<<<<<<
 *         self.thisptr().setPointCloudRenderingProperties (propType, propValue, <string> propName, 0)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_51SetPointCloudRenderingProperties(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_50SetPointCloudRenderingProperties[] = "PCLVisualizering.SetPointCloudRenderingProperties(self, int propType, int propValue, propName=b'cloud')";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_51SetPointCloudRenderingProperties(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_propType;
  int __pyx_v_propValue;
  PyObject *__pyx_v_propName = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SetPointCloudRenderingProperties (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_propType,&__pyx_n_s_propValue,&__pyx_n_s_propName,0};
    PyObject* values[3] = {0,0,0};
    values[2] = ((PyObject *)__pyx_n_b_cloud);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_propType)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_propValue)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("SetPointCloudRenderingProperties", 0, 2, 3, 1); __PYX_ERR(9, 147, __pyx_L3_error)
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_propName);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "SetPointCloudRenderingProperties") < 0)) __PYX_ERR(9, 147, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_propType = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_propType == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 147, __pyx_L3_error)
    __pyx_v_propValue = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_propValue == (int)-1) && PyErr_Occurred())) __PYX_ERR(9, 147, __pyx_L3_error)
    __pyx_v_propName = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("SetPointCloudRenderingProperties", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(9, 147, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.SetPointCloudRenderingProperties", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_50SetPointCloudRenderingProperties(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self), __pyx_v_propType, __pyx_v_propValue, __pyx_v_propName);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_50SetPointCloudRenderingProperties(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, int __pyx_v_propType, int __pyx_v_propValue, PyObject *__pyx_v_propName) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  __Pyx_RefNannySetupContext("SetPointCloudRenderingProperties", 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":148
 * 
 *     def SetPointCloudRenderingProperties(self, int propType, int propValue, propName = b'cloud'):
 *         self.thisptr().setPointCloudRenderingProperties (propType, propValue, <string> propName, 0)             # <<<<<<<<<<<<<<
 * 
 *     def InitCameraParameters(self):
 */
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_v_propName); if (unlikely(PyErr_Occurred())) __PYX_ERR(9, 148, __pyx_L1_error)
  __pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(__pyx_v_self)->setPointCloudRenderingProperties(__pyx_v_propType, __pyx_v_propValue, ((std::string)__pyx_t_1), 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":147
 *         self.thisptr().addPointCloudNormals[cpp.PointXYZ, cpp.Normal](<cpp.PointCloudPtr_t> cloud.thisptr_shared, <cpp.PointCloud_Normal_Ptr_t> normal.thisptr_shared, level, scale, <string> id, viewport)
 * 
 *     def SetPointCloudRenderingProperties(self, int propType, int propValue, propName = b'cloud'):             # <<<<<<<<<<<<<<
 *         self.thisptr().setPointCloudRenderingProperties (propType, propValue, <string> propName, 0)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.SetPointCloudRenderingProperties", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":150
 *         self.thisptr().setPointCloudRenderingProperties (propType, propValue, <string> propName, 0)
 * 
 *     def InitCameraParameters(self):             # <<<<<<<<<<<<<<
 *         self.thisptr().initCameraParameters()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_53InitCameraParameters(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_52InitCameraParameters[] = "PCLVisualizering.InitCameraParameters(self)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_53InitCameraParameters(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("InitCameraParameters (wrapper)", 0);
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_52InitCameraParameters(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_52InitCameraParameters(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("InitCameraParameters", 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":151
 * 
 *     def InitCameraParameters(self):
 *         self.thisptr().initCameraParameters()             # <<<<<<<<<<<<<<
 * 
 *     # return bool
 */
  __pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(__pyx_v_self)->initCameraParameters();

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":150
 *         self.thisptr().setPointCloudRenderingProperties (propType, propValue, <string> propName, 0)
 * 
 *     def InitCameraParameters(self):             # <<<<<<<<<<<<<<
 *         self.thisptr().initCameraParameters()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":154
 * 
 *     # return bool
 *     def WasStopped(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr().wasStopped()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_55WasStopped(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_54WasStopped[] = "PCLVisualizering.WasStopped(self)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_55WasStopped(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("WasStopped (wrapper)", 0);
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_54WasStopped(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_54WasStopped(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("WasStopped", 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":155
 *     # return bool
 *     def WasStopped(self):
 *         return self.thisptr().wasStopped()             # <<<<<<<<<<<<<<
 * 
 *     def ResetStoppedFlag(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(__pyx_v_self)->wasStopped()); if (unlikely(!__pyx_t_1)) __PYX_ERR(9, 155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":154
 * 
 *     # return bool
 *     def WasStopped(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr().wasStopped()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.WasStopped", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":157
 *         return self.thisptr().wasStopped()
 * 
 *     def ResetStoppedFlag(self):             # <<<<<<<<<<<<<<
 *         self.thisptr().resetStoppedFlag()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_57ResetStoppedFlag(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_56ResetStoppedFlag[] = "PCLVisualizering.ResetStoppedFlag(self)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_57ResetStoppedFlag(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ResetStoppedFlag (wrapper)", 0);
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_56ResetStoppedFlag(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_56ResetStoppedFlag(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ResetStoppedFlag", 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":158
 * 
 *     def ResetStoppedFlag(self):
 *         self.thisptr().resetStoppedFlag()             # <<<<<<<<<<<<<<
 * 
 *     def Close(self):
 */
  __pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(__pyx_v_self)->resetStoppedFlag();

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":157
 *         return self.thisptr().wasStopped()
 * 
 *     def ResetStoppedFlag(self):             # <<<<<<<<<<<<<<
 *         self.thisptr().resetStoppedFlag()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":160
 *         self.thisptr().resetStoppedFlag()
 * 
 *     def Close(self):             # <<<<<<<<<<<<<<
 *         self.thisptr().close ()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_59Close(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_58Close[] = "PCLVisualizering.Close(self)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_59Close(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Close (wrapper)", 0);
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_58Close(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_58Close(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Close", 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":161
 * 
 *     def Close(self):
 *         self.thisptr().close ()             # <<<<<<<<<<<<<<
 * 
 *     # def AddCube(self, double min_x, double max_x, double min_y, double max_y, double min_z, double max_z, double r, double g, double b, string name):
 */
  __pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(__pyx_v_self)->close();

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":160
 *         self.thisptr().resetStoppedFlag()
 * 
 *     def Close(self):             # <<<<<<<<<<<<<<
 *         self.thisptr().close ()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":164
 * 
 *     # def AddCube(self, double min_x, double max_x, double min_y, double max_y, double min_z, double max_z, double r, double g, double b, string name):
 *     def AddCube(self, double min_x, double max_x, double min_y, double max_y, double min_z, double max_z, double r, double g, double b, name):             # <<<<<<<<<<<<<<
 *         self.thisptr().addCube(min_x,  max_x,  min_y,  max_y,  min_z,  max_z, r, g, b, name, 0)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_61AddCube(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_60AddCube[] = "PCLVisualizering.AddCube(self, double min_x, double max_x, double min_y, double max_y, double min_z, double max_z, double r, double g, double b, name)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_61AddCube(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_min_x;
  double __pyx_v_max_x;
  double __pyx_v_min_y;
  double __pyx_v_max_y;
  double __pyx_v_min_z;
  double __pyx_v_max_z;
  double __pyx_v_r;
  double __pyx_v_g;
  double __pyx_v_b;
  PyObject *__pyx_v_name = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddCube (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_min_x,&__pyx_n_s_max_x,&__pyx_n_s_min_y,&__pyx_n_s_max_y,&__pyx_n_s_min_z,&__pyx_n_s_max_z,&__pyx_n_s_r,&__pyx_n_s_g,&__pyx_n_s_b,&__pyx_n_s_name,0};
    PyObject* values[10] = {0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_min_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_max_x)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddCube", 1, 10, 10, 1); __PYX_ERR(9, 164, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_min_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddCube", 1, 10, 10, 2); __PYX_ERR(9, 164, __pyx_L3_error)
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_max_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddCube", 1, 10, 10, 3); __PYX_ERR(9, 164, __pyx_L3_error)
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_min_z)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddCube", 1, 10, 10, 4); __PYX_ERR(9, 164, __pyx_L3_error)
        }
        case  5:
        if (likely((values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_max_z)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddCube", 1, 10, 10, 5); __PYX_ERR(9, 164, __pyx_L3_error)
        }
        case  6:
        if (likely((values[6] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_r)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddCube", 1, 10, 10, 6); __PYX_ERR(9, 164, __pyx_L3_error)
        }
        case  7:
        if (likely((values[7] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_g)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddCube", 1, 10, 10, 7); __PYX_ERR(9, 164, __pyx_L3_error)
        }
        case  8:
        if (likely((values[8] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_b)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddCube", 1, 10, 10, 8); __PYX_ERR(9, 164, __pyx_L3_error)
        }
        case  9:
        if (likely((values[9] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_name)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddCube", 1, 10, 10, 9); __PYX_ERR(9, 164, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AddCube") < 0)) __PYX_ERR(9, 164, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 10) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
    }
    __pyx_v_min_x = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_min_x == (double)-1) && PyErr_Occurred())) __PYX_ERR(9, 164, __pyx_L3_error)
    __pyx_v_max_x = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_max_x == (double)-1) && PyErr_Occurred())) __PYX_ERR(9, 164, __pyx_L3_error)
    __pyx_v_min_y = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_min_y == (double)-1) && PyErr_Occurred())) __PYX_ERR(9, 164, __pyx_L3_error)
    __pyx_v_max_y = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_max_y == (double)-1) && PyErr_Occurred())) __PYX_ERR(9, 164, __pyx_L3_error)
    __pyx_v_min_z = __pyx_PyFloat_AsDouble(values[4]); if (unlikely((__pyx_v_min_z == (double)-1) && PyErr_Occurred())) __PYX_ERR(9, 164, __pyx_L3_error)
    __pyx_v_max_z = __pyx_PyFloat_AsDouble(values[5]); if (unlikely((__pyx_v_max_z == (double)-1) && PyErr_Occurred())) __PYX_ERR(9, 164, __pyx_L3_error)
    __pyx_v_r = __pyx_PyFloat_AsDouble(values[6]); if (unlikely((__pyx_v_r == (double)-1) && PyErr_Occurred())) __PYX_ERR(9, 164, __pyx_L3_error)
    __pyx_v_g = __pyx_PyFloat_AsDouble(values[7]); if (unlikely((__pyx_v_g == (double)-1) && PyErr_Occurred())) __PYX_ERR(9, 164, __pyx_L3_error)
    __pyx_v_b = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) __PYX_ERR(9, 164, __pyx_L3_error)
    __pyx_v_name = values[9];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AddCube", 1, 10, 10, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(9, 164, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.AddCube", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_60AddCube(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self), __pyx_v_min_x, __pyx_v_max_x, __pyx_v_min_y, __pyx_v_max_y, __pyx_v_min_z, __pyx_v_max_z, __pyx_v_r, __pyx_v_g, __pyx_v_b, __pyx_v_name);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_60AddCube(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self, double __pyx_v_min_x, double __pyx_v_max_x, double __pyx_v_min_y, double __pyx_v_max_y, double __pyx_v_min_z, double __pyx_v_max_z, double __pyx_v_r, double __pyx_v_g, double __pyx_v_b, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  __Pyx_RefNannySetupContext("AddCube", 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":165
 *     # def AddCube(self, double min_x, double max_x, double min_y, double max_y, double min_z, double max_z, double r, double g, double b, string name):
 *     def AddCube(self, double min_x, double max_x, double min_y, double max_y, double min_z, double max_z, double r, double g, double b, name):
 *         self.thisptr().addCube(min_x,  max_x,  min_y,  max_y,  min_z,  max_z, r, g, b, name, 0)             # <<<<<<<<<<<<<<
 * 
 *     # def AddLine(self, _pcl.PointCloud center, _pcl.PointCloud axis, double x, double y, double z, id = b'minor eigen vector')
 */
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_v_name); if (unlikely(PyErr_Occurred())) __PYX_ERR(9, 165, __pyx_L1_error)
  __pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr(__pyx_v_self)->addCube(__pyx_v_min_x, __pyx_v_max_x, __pyx_v_min_y, __pyx_v_max_y, __pyx_v_min_z, __pyx_v_max_z, __pyx_v_r, __pyx_v_g, __pyx_v_b, __pyx_t_1, 0);

  /* "pcl/pxi/Visualization/PCLVisualizering.pxi":164
 * 
 *     # def AddCube(self, double min_x, double max_x, double min_y, double max_y, double min_z, double max_z, double r, double g, double b, string name):
 *     def AddCube(self, double min_x, double max_x, double min_y, double max_y, double min_z, double max_z, double r, double g, double b, name):             # <<<<<<<<<<<<<<
 *         self.thisptr().addCube(min_x,  max_x,  min_y,  max_y,  min_z,  max_z, r, g, b, name, 0)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLVisualizering.AddCube", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":171
 *     #     self.thisptr().addLine(center, z_axis, 0.0, 0.0, 1.0, id)
 * 
 *     def AddCone(self):             # <<<<<<<<<<<<<<
 *         # self.thisptr().addCone()
 *         pass
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_63AddCone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_62AddCone[] = "PCLVisualizering.AddCone(self)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_63AddCone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddCone (wrapper)", 0);
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_62AddCone(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_62AddCone(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddCone", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":175
 *         pass
 * 
 *     def AddCircle(self):             # <<<<<<<<<<<<<<
 *         # self.thisptr().addCone()
 *         pass
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_65AddCircle(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_64AddCircle[] = "PCLVisualizering.AddCircle(self)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_65AddCircle(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddCircle (wrapper)", 0);
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_64AddCircle(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_64AddCircle(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddCircle", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":179
 *         pass
 * 
 *     def AddPlane(self):             # <<<<<<<<<<<<<<
 *         # self.thisptr().addPlane()
 *         pass
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_67AddPlane(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_66AddPlane[] = "PCLVisualizering.AddPlane(self)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_67AddPlane(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddPlane (wrapper)", 0);
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_66AddPlane(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_66AddPlane(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddPlane", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":183
 *         pass
 * 
 *     def AddLine(self):             # <<<<<<<<<<<<<<
 *         # self.thisptr().addLine()
 *         pass
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_69AddLine(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_68AddLine[] = "PCLVisualizering.AddLine(self)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_69AddLine(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddLine (wrapper)", 0);
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_68AddLine(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_68AddLine(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddLine", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":187
 *         pass
 * 
 *     def AddSphere(self):             # <<<<<<<<<<<<<<
 *         # self.thisptr().addSphere()
 *         pass
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_71AddSphere(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_70AddSphere[] = "PCLVisualizering.AddSphere(self)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_71AddSphere(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddSphere (wrapper)", 0);
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_70AddSphere(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_70AddSphere(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddSphere", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":191
 *         pass
 * 
 *     def AddCylinder(self):             # <<<<<<<<<<<<<<
 *         # self.thisptr().addCylinder()
 *         pass
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_73AddCylinder(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_72AddCylinder[] = "PCLVisualizering.AddCylinder(self)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_73AddCylinder(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddCylinder (wrapper)", 0);
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_72AddCylinder(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_72AddCylinder(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddCylinder", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLVisualizering.pxi":195
 *         pass
 * 
 *     def AddCircle(self):             # <<<<<<<<<<<<<<
 *         # self.thisptr().addCone()
 *         pass
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_75AddCircle(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_74AddCircle[] = "PCLVisualizering.AddCircle(self)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_75AddCircle(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddCircle (wrapper)", 0);
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_74AddCircle(((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_16PCLVisualizering_74AddCircle(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddCircle", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLHistogramViewing.pxi":15
 *     cdef pclvis.PCLHistogramVisualizerPtr_t thisptr_shared
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         sp_assign(self.thisptr_shared, new pclvis.PCLHistogramVisualizer())
 * 
 */

/* Python wrapper */
static int __pyx_pw_3pcl_17pcl_visualization_19PCLHistogramViewing_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_3pcl_17pcl_visualization_19PCLHistogramViewing_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_19PCLHistogramViewing___cinit__(((struct __pyx_obj_3pcl_17pcl_visualization_PCLHistogramViewing *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3pcl_17pcl_visualization_19PCLHistogramViewing___cinit__(struct __pyx_obj_3pcl_17pcl_visualization_PCLHistogramViewing *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pcl/pxi/Visualization/PCLHistogramViewing.pxi":16
 * 
 *     def __cinit__(self):
 *         sp_assign(self.thisptr_shared, new pclvis.PCLHistogramVisualizer())             # <<<<<<<<<<<<<<
 * 
 *     cdef inline pclvis.PCLHistogramVisualizer *thisptr(self) nogil:
 */
  sp_assign<pcl::visualization::PCLHistogramVisualizer>(__pyx_v_self->thisptr_shared, new pcl::visualization::PCLHistogramVisualizer());

  /* "pcl/pxi/Visualization/PCLHistogramViewing.pxi":15
 *     cdef pclvis.PCLHistogramVisualizerPtr_t thisptr_shared
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         sp_assign(self.thisptr_shared, new pclvis.PCLHistogramVisualizer())
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLHistogramViewing.pxi":18
 *         sp_assign(self.thisptr_shared, new pclvis.PCLHistogramVisualizer())
 * 
 *     cdef inline pclvis.PCLHistogramVisualizer *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying PCLHistogramVisualizer
 *         return self.thisptr_shared.get()
 */

static CYTHON_INLINE pcl::visualization::PCLHistogramVisualizer *__pyx_f_3pcl_17pcl_visualization_19PCLHistogramViewing_thisptr(struct __pyx_obj_3pcl_17pcl_visualization_PCLHistogramViewing *__pyx_v_self) {
  pcl::visualization::PCLHistogramVisualizer *__pyx_r;

  /* "pcl/pxi/Visualization/PCLHistogramViewing.pxi":20
 *     cdef inline pclvis.PCLHistogramVisualizer *thisptr(self) nogil:
 *         # Shortcut to get raw pointer to underlying PCLHistogramVisualizer
 *         return self.thisptr_shared.get()             # <<<<<<<<<<<<<<
 * 
 *     def SpinOnce(self, int time = 1, bool force_redraw = False):
 */
  __pyx_r = __pyx_v_self->thisptr_shared.get();
  goto __pyx_L0;

  /* "pcl/pxi/Visualization/PCLHistogramViewing.pxi":18
 *         sp_assign(self.thisptr_shared, new pclvis.PCLHistogramVisualizer())
 * 
 *     cdef inline pclvis.PCLHistogramVisualizer *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying PCLHistogramVisualizer
 *         return self.thisptr_shared.get()
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLHistogramViewing.pxi":22
 *         return self.thisptr_shared.get()
 * 
 *     def SpinOnce(self, int time = 1, bool force_redraw = False):             # <<<<<<<<<<<<<<
 *         self.thisptr().spinOnce()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_19PCLHistogramViewing_3SpinOnce(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_19PCLHistogramViewing_2SpinOnce[] = "PCLHistogramViewing.SpinOnce(self, int time=1, bool force_redraw=False)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_19PCLHistogramViewing_3SpinOnce(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED int __pyx_v_time;
  CYTHON_UNUSED bool __pyx_v_force_redraw;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SpinOnce (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_time,&__pyx_n_s_force_redraw,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_time);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_force_redraw);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "SpinOnce") < 0)) __PYX_ERR(10, 22, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_time = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_time == (int)-1) && PyErr_Occurred())) __PYX_ERR(10, 22, __pyx_L3_error)
    } else {
      __pyx_v_time = ((int)1);
    }
    if (values[1]) {
      __pyx_v_force_redraw = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_force_redraw == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(10, 22, __pyx_L3_error)
    } else {
      __pyx_v_force_redraw = ((bool)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("SpinOnce", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(10, 22, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLHistogramViewing.SpinOnce", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_19PCLHistogramViewing_2SpinOnce(((struct __pyx_obj_3pcl_17pcl_visualization_PCLHistogramViewing *)__pyx_v_self), __pyx_v_time, __pyx_v_force_redraw);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_19PCLHistogramViewing_2SpinOnce(struct __pyx_obj_3pcl_17pcl_visualization_PCLHistogramViewing *__pyx_v_self, CYTHON_UNUSED int __pyx_v_time, CYTHON_UNUSED bool __pyx_v_force_redraw) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SpinOnce", 0);

  /* "pcl/pxi/Visualization/PCLHistogramViewing.pxi":23
 * 
 *     def SpinOnce(self, int time = 1, bool force_redraw = False):
 *         self.thisptr().spinOnce()             # <<<<<<<<<<<<<<
 * 
 *     # self.thisptr().addFeatureHistogram[PointT](shared_ptr[cpp.PointCloud[PointT]] &cloud, int hsize, string cloudname, int win_width, int win_height)
 */
  __pyx_f_3pcl_17pcl_visualization_19PCLHistogramViewing_thisptr(__pyx_v_self)->spinOnce();

  /* "pcl/pxi/Visualization/PCLHistogramViewing.pxi":22
 *         return self.thisptr_shared.get()
 * 
 *     def SpinOnce(self, int time = 1, bool force_redraw = False):             # <<<<<<<<<<<<<<
 *         self.thisptr().spinOnce()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLHistogramViewing.pxi":26
 * 
 *     # self.thisptr().addFeatureHistogram[PointT](shared_ptr[cpp.PointCloud[PointT]] &cloud, int hsize, string cloudname, int win_width, int win_height)
 *     def AddFeatureHistogram(self, _pcl.PointCloud cloud, int hsize, cloudname, int win_width = 640, int win_height = 200):             # <<<<<<<<<<<<<<
 *         # self.thisptr().addFeatureHistogram[cpp.PointXYZ](<cpp.PointCloudPtr_t> cloud.thisptr_shared, hsize, cloudname, win_width, win_height);
 *         # self.thisptr().addFeatureHistogram[cpp.PointXYZ](<cpp.PointCloudPtr_t> cloud.thisptr_shared, <string> cloudname, 0, "test", win_width, win_height)
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_19PCLHistogramViewing_5AddFeatureHistogram(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_19PCLHistogramViewing_4AddFeatureHistogram[] = "PCLHistogramViewing.AddFeatureHistogram(self, PointCloud cloud, int hsize, cloudname, int win_width=640, int win_height=200)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_19PCLHistogramViewing_5AddFeatureHistogram(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED struct __pyx_obj_3pcl_4_pcl_PointCloud *__pyx_v_cloud = 0;
  CYTHON_UNUSED int __pyx_v_hsize;
  CYTHON_UNUSED PyObject *__pyx_v_cloudname = 0;
  CYTHON_UNUSED int __pyx_v_win_width;
  CYTHON_UNUSED int __pyx_v_win_height;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddFeatureHistogram (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_cloud,&__pyx_n_s_hsize,&__pyx_n_s_cloudname,&__pyx_n_s_win_width,&__pyx_n_s_win_height,0};
    PyObject* values[5] = {0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_cloud)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_hsize)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddFeatureHistogram", 0, 3, 5, 1); __PYX_ERR(10, 26, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_cloudname)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("AddFeatureHistogram", 0, 3, 5, 2); __PYX_ERR(10, 26, __pyx_L3_error)
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_win_width);
          if (value) { values[3] = value; kw_args--; }
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_win_height);
          if (value) { values[4] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "AddFeatureHistogram") < 0)) __PYX_ERR(10, 26, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_cloud = ((struct __pyx_obj_3pcl_4_pcl_PointCloud *)values[0]);
    __pyx_v_hsize = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_hsize == (int)-1) && PyErr_Occurred())) __PYX_ERR(10, 26, __pyx_L3_error)
    __pyx_v_cloudname = values[2];
    if (values[3]) {
      __pyx_v_win_width = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_win_width == (int)-1) && PyErr_Occurred())) __PYX_ERR(10, 26, __pyx_L3_error)
    } else {
      __pyx_v_win_width = ((int)0x280);
    }
    if (values[4]) {
      __pyx_v_win_height = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_win_height == (int)-1) && PyErr_Occurred())) __PYX_ERR(10, 26, __pyx_L3_error)
    } else {
      __pyx_v_win_height = ((int)0xC8);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("AddFeatureHistogram", 0, 3, 5, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(10, 26, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcl.pcl_visualization.PCLHistogramViewing.AddFeatureHistogram", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_cloud), __pyx_ptype_3pcl_4_pcl_PointCloud, 1, "cloud", 0))) __PYX_ERR(10, 26, __pyx_L1_error)
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_19PCLHistogramViewing_4AddFeatureHistogram(((struct __pyx_obj_3pcl_17pcl_visualization_PCLHistogramViewing *)__pyx_v_self), __pyx_v_cloud, __pyx_v_hsize, __pyx_v_cloudname, __pyx_v_win_width, __pyx_v_win_height);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_19PCLHistogramViewing_4AddFeatureHistogram(CYTHON_UNUSED struct __pyx_obj_3pcl_17pcl_visualization_PCLHistogramViewing *__pyx_v_self, CYTHON_UNUSED struct __pyx_obj_3pcl_4_pcl_PointCloud *__pyx_v_cloud, CYTHON_UNUSED int __pyx_v_hsize, CYTHON_UNUSED PyObject *__pyx_v_cloudname, CYTHON_UNUSED int __pyx_v_win_width, CYTHON_UNUSED int __pyx_v_win_height) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AddFeatureHistogram", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pxi/Visualization/PCLHistogramViewing.pxi":40
 *     #     self.thisptr().addFeatureHistogram(<cpp.PointCloudPtr_t> cloud.thisptr_shared, hsize, <string> cloudname, 640, 200)
 * 
 *     def Spin (self):             # <<<<<<<<<<<<<<
 *         self.thisptr().spin()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3pcl_17pcl_visualization_19PCLHistogramViewing_7Spin(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3pcl_17pcl_visualization_19PCLHistogramViewing_6Spin[] = "PCLHistogramViewing.Spin(self)";
static PyObject *__pyx_pw_3pcl_17pcl_visualization_19PCLHistogramViewing_7Spin(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Spin (wrapper)", 0);
  __pyx_r = __pyx_pf_3pcl_17pcl_visualization_19PCLHistogramViewing_6Spin(((struct __pyx_obj_3pcl_17pcl_visualization_PCLHistogramViewing *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3pcl_17pcl_visualization_19PCLHistogramViewing_6Spin(struct __pyx_obj_3pcl_17pcl_visualization_PCLHistogramViewing *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Spin", 0);

  /* "pcl/pxi/Visualization/PCLHistogramViewing.pxi":41
 * 
 *     def Spin (self):
 *         self.thisptr().spin()             # <<<<<<<<<<<<<<
 * 
 */
  __pyx_f_3pcl_17pcl_visualization_19PCLHistogramViewing_thisptr(__pyx_v_self)->spin();

  /* "pcl/pxi/Visualization/PCLHistogramViewing.pxi":40
 *     #     self.thisptr().addFeatureHistogram(<cpp.PointCloudPtr_t> cloud.thisptr_shared, hsize, <string> cloudname, 640, 200)
 * 
 *     def Spin (self):             # <<<<<<<<<<<<<<
 *         self.thisptr().spin()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "_pcl.pxd":22
 *     cdef Py_ssize_t _view_count
 * 
 *     cdef inline cpp.PointCloud[cpp.PointXYZ] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying PointCloud<PointXYZ>.
 *         return self.thisptr_shared.get()
 */

static CYTHON_INLINE pcl::PointCloud<struct pcl::PointXYZ>  *__pyx_f_3pcl_4_pcl_10PointCloud_thisptr(struct __pyx_obj_3pcl_4_pcl_PointCloud *__pyx_v_self) {
  pcl::PointCloud<struct pcl::PointXYZ>  *__pyx_r;

  /* "_pcl.pxd":24
 *     cdef inline cpp.PointCloud[cpp.PointXYZ] *thisptr(self) nogil:
 *         # Shortcut to get raw pointer to underlying PointCloud<PointXYZ>.
 *         return self.thisptr_shared.get()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_self->thisptr_shared.get();
  goto __pyx_L0;

  /* "_pcl.pxd":22
 *     cdef Py_ssize_t _view_count
 * 
 *     cdef inline cpp.PointCloud[cpp.PointXYZ] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying PointCloud<PointXYZ>.
 *         return self.thisptr_shared.get()
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "_pcl.pxd":35
 *     cdef Py_ssize_t _view_count
 * 
 *     cdef inline cpp.PointCloud[cpp.PointXYZI] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying PointCloud<PointXYZ>.
 *         return self.thisptr_shared.get()
 */

static CYTHON_INLINE pcl::PointCloud<struct pcl::PointXYZI>  *__pyx_f_3pcl_4_pcl_20PointCloud_PointXYZI_thisptr(struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZI *__pyx_v_self) {
  pcl::PointCloud<struct pcl::PointXYZI>  *__pyx_r;

  /* "_pcl.pxd":37
 *     cdef inline cpp.PointCloud[cpp.PointXYZI] *thisptr(self) nogil:
 *         # Shortcut to get raw pointer to underlying PointCloud<PointXYZ>.
 *         return self.thisptr_shared.get()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_self->thisptr_shared.get();
  goto __pyx_L0;

  /* "_pcl.pxd":35
 *     cdef Py_ssize_t _view_count
 * 
 *     cdef inline cpp.PointCloud[cpp.PointXYZI] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying PointCloud<PointXYZ>.
 *         return self.thisptr_shared.get()
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "_pcl.pxd":48
 *     cdef Py_ssize_t _view_count
 * 
 *     cdef inline cpp.PointCloud[cpp.PointXYZRGB] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying PointCloud<PointXYZRGB>.
 *         return self.thisptr_shared.get()
 */

static CYTHON_INLINE pcl::PointCloud<struct pcl::PointXYZRGB>  *__pyx_f_3pcl_4_pcl_22PointCloud_PointXYZRGB_thisptr(struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZRGB *__pyx_v_self) {
  pcl::PointCloud<struct pcl::PointXYZRGB>  *__pyx_r;

  /* "_pcl.pxd":50
 *     cdef inline cpp.PointCloud[cpp.PointXYZRGB] *thisptr(self) nogil:
 *         # Shortcut to get raw pointer to underlying PointCloud<PointXYZRGB>.
 *         return self.thisptr_shared.get()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_self->thisptr_shared.get();
  goto __pyx_L0;

  /* "_pcl.pxd":48
 *     cdef Py_ssize_t _view_count
 * 
 *     cdef inline cpp.PointCloud[cpp.PointXYZRGB] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying PointCloud<PointXYZRGB>.
 *         return self.thisptr_shared.get()
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "_pcl.pxd":61
 *     cdef Py_ssize_t _view_count
 * 
 *     cdef inline cpp.PointCloud[cpp.PointXYZRGBA] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying PointCloud<PointXYZRGBA>.
 *         return self.thisptr_shared.get()
 */

static CYTHON_INLINE pcl::PointCloud<struct pcl::PointXYZRGBA>  *__pyx_f_3pcl_4_pcl_23PointCloud_PointXYZRGBA_thisptr(struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZRGBA *__pyx_v_self) {
  pcl::PointCloud<struct pcl::PointXYZRGBA>  *__pyx_r;

  /* "_pcl.pxd":63
 *     cdef inline cpp.PointCloud[cpp.PointXYZRGBA] *thisptr(self) nogil:
 *         # Shortcut to get raw pointer to underlying PointCloud<PointXYZRGBA>.
 *         return self.thisptr_shared.get()             # <<<<<<<<<<<<<<
 * 
 * # class override
 */
  __pyx_r = __pyx_v_self->thisptr_shared.get();
  goto __pyx_L0;

  /* "_pcl.pxd":61
 *     cdef Py_ssize_t _view_count
 * 
 *     cdef inline cpp.PointCloud[cpp.PointXYZRGBA] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying PointCloud<PointXYZRGBA>.
 *         return self.thisptr_shared.get()
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "_pcl.pxd":73
 *     cdef Py_ssize_t _view_count
 * 
 *     cdef inline cpp.Vertices *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying Vertices
 *         return self.thisptr_shared.get()
 */

static CYTHON_INLINE pcl::Vertices *__pyx_f_3pcl_4_pcl_8Vertices_thisptr(struct __pyx_obj_3pcl_4_pcl_Vertices *__pyx_v_self) {
  pcl::Vertices *__pyx_r;

  /* "_pcl.pxd":75
 *     cdef inline cpp.Vertices *thisptr(self) nogil:
 *         # Shortcut to get raw pointer to underlying Vertices
 *         return self.thisptr_shared.get()             # <<<<<<<<<<<<<<
 * 
 * # class override(PointCloud_PointWithViewpoint)
 */
  __pyx_r = __pyx_v_self->thisptr_shared.get();
  goto __pyx_L0;

  /* "_pcl.pxd":73
 *     cdef Py_ssize_t _view_count
 * 
 *     cdef inline cpp.Vertices *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying Vertices
 *         return self.thisptr_shared.get()
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "_pcl.pxd":85
 *     cdef Py_ssize_t _view_count
 * 
 *     cdef inline cpp.PointCloud[cpp.PointWithViewpoint] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying PointCloud<PointWithViewpoint>.
 *         return self.thisptr_shared.get()
 */

static CYTHON_INLINE pcl::PointCloud<struct pcl::PointWithViewpoint>  *__pyx_f_3pcl_4_pcl_29PointCloud_PointWithViewpoint_thisptr(struct __pyx_obj_3pcl_4_pcl_PointCloud_PointWithViewpoint *__pyx_v_self) {
  pcl::PointCloud<struct pcl::PointWithViewpoint>  *__pyx_r;

  /* "_pcl.pxd":87
 *     cdef inline cpp.PointCloud[cpp.PointWithViewpoint] *thisptr(self) nogil:
 *         # Shortcut to get raw pointer to underlying PointCloud<PointWithViewpoint>.
 *         return self.thisptr_shared.get()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_self->thisptr_shared.get();
  goto __pyx_L0;

  /* "_pcl.pxd":85
 *     cdef Py_ssize_t _view_count
 * 
 *     cdef inline cpp.PointCloud[cpp.PointWithViewpoint] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying PointCloud<PointWithViewpoint>.
 *         return self.thisptr_shared.get()
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "_pcl.pxd":98
 *     cdef Py_ssize_t _view_count
 * 
 *     cdef inline cpp.PointCloud[cpp.Normal] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying PointCloud<Normal>.
 *         return self.thisptr_shared.get()
 */

static CYTHON_INLINE pcl::PointCloud<struct pcl::Normal>  *__pyx_f_3pcl_4_pcl_17PointCloud_Normal_thisptr(struct __pyx_obj_3pcl_4_pcl_PointCloud_Normal *__pyx_v_self) {
  pcl::PointCloud<struct pcl::Normal>  *__pyx_r;

  /* "_pcl.pxd":100
 *     cdef inline cpp.PointCloud[cpp.Normal] *thisptr(self) nogil:
 *         # Shortcut to get raw pointer to underlying PointCloud<Normal>.
 *         return self.thisptr_shared.get()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_self->thisptr_shared.get();
  goto __pyx_L0;

  /* "_pcl.pxd":98
 *     cdef Py_ssize_t _view_count
 * 
 *     cdef inline cpp.PointCloud[cpp.Normal] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying PointCloud<Normal>.
 *         return self.thisptr_shared.get()
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "_pcl.pxd":111
 *     cdef Py_ssize_t _view_count
 * 
 *     cdef inline cpp.PointCloud[cpp.PointNormal] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying PointCloud<PointNormal>.
 *         return self.thisptr_shared.get()
 */

static CYTHON_INLINE pcl::PointCloud<struct pcl::PointNormal>  *__pyx_f_3pcl_4_pcl_22PointCloud_PointNormal_thisptr(struct __pyx_obj_3pcl_4_pcl_PointCloud_PointNormal *__pyx_v_self) {
  pcl::PointCloud<struct pcl::PointNormal>  *__pyx_r;

  /* "_pcl.pxd":113
 *     cdef inline cpp.PointCloud[cpp.PointNormal] *thisptr(self) nogil:
 *         # Shortcut to get raw pointer to underlying PointCloud<PointNormal>.
 *         return self.thisptr_shared.get()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_self->thisptr_shared.get();
  goto __pyx_L0;

  /* "_pcl.pxd":111
 *     cdef Py_ssize_t _view_count
 * 
 *     cdef inline cpp.PointCloud[cpp.PointNormal] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying PointCloud<PointNormal>.
 *         return self.thisptr_shared.get()
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "_pcl.pxd":121
 *     cdef pclkdt.KdTreePtr_t thisptr_shared   # KdTree
 * 
 *     cdef inline pclkdt.KdTree[cpp.PointXYZ] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying KdTree<PointXYZ>.
 *         return self.thisptr_shared.get()
 */

static CYTHON_INLINE pcl::search::KdTree<struct pcl::PointXYZ>  *__pyx_f_3pcl_4_pcl_6KdTree_thisptr(struct __pyx_obj_3pcl_4_pcl_KdTree *__pyx_v_self) {
  pcl::search::KdTree<struct pcl::PointXYZ>  *__pyx_r;

  /* "_pcl.pxd":123
 *     cdef inline pclkdt.KdTree[cpp.PointXYZ] *thisptr(self) nogil:
 *         # Shortcut to get raw pointer to underlying KdTree<PointXYZ>.
 *         return self.thisptr_shared.get()             # <<<<<<<<<<<<<<
 * 
 * # cdef class KdTreeFLANN:
 */
  __pyx_r = __pyx_v_self->thisptr_shared.get();
  goto __pyx_L0;

  /* "_pcl.pxd":121
 *     cdef pclkdt.KdTreePtr_t thisptr_shared   # KdTree
 * 
 *     cdef inline pclkdt.KdTree[cpp.PointXYZ] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying KdTree<PointXYZ>.
 *         return self.thisptr_shared.get()
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "_pcl.pxd":138
 *     cdef pcl_rngimg.RangeImagePtr_t thisptr_shared   # RangeImages
 * 
 *     cdef inline pcl_rngimg.RangeImage *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying RangeImage.
 *         return self.thisptr_shared.get()
 */

static CYTHON_INLINE pcl::RangeImage *__pyx_f_3pcl_4_pcl_11RangeImages_thisptr(struct __pyx_obj_3pcl_4_pcl_RangeImages *__pyx_v_self) {
  pcl::RangeImage *__pyx_r;

  /* "_pcl.pxd":140
 *     cdef inline pcl_rngimg.RangeImage *thisptr(self) nogil:
 *         # Shortcut to get raw pointer to underlying RangeImage.
 *         return self.thisptr_shared.get()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_self->thisptr_shared.get();
  goto __pyx_L0;

  /* "_pcl.pxd":138
 *     cdef pcl_rngimg.RangeImagePtr_t thisptr_shared   # RangeImages
 * 
 *     cdef inline pcl_rngimg.RangeImage *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying RangeImage.
 *         return self.thisptr_shared.get()
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "_pcl.pxd":166
 *     cdef pcl_sac.SampleConsensusModelPtr_t thisptr_shared     # SampleConsensusModel
 * 
 *     cdef inline pcl_sac.SampleConsensusModel[cpp.PointXYZ] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying pcl::SampleConsensusModel<pcl::PointXYZ>.
 *         return self.thisptr_shared.get()
 */

static CYTHON_INLINE pcl::SampleConsensusModel<struct pcl::PointXYZ>  *__pyx_f_3pcl_4_pcl_20SampleConsensusModel_thisptr(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModel *__pyx_v_self) {
  pcl::SampleConsensusModel<struct pcl::PointXYZ>  *__pyx_r;

  /* "_pcl.pxd":168
 *     cdef inline pcl_sac.SampleConsensusModel[cpp.PointXYZ] *thisptr(self) nogil:
 *         # Shortcut to get raw pointer to underlying pcl::SampleConsensusModel<pcl::PointXYZ>.
 *         return self.thisptr_shared.get()             # <<<<<<<<<<<<<<
 * 
 * cdef class SampleConsensusModelPlane:
 */
  __pyx_r = __pyx_v_self->thisptr_shared.get();
  goto __pyx_L0;

  /* "_pcl.pxd":166
 *     cdef pcl_sac.SampleConsensusModelPtr_t thisptr_shared     # SampleConsensusModel
 * 
 *     cdef inline pcl_sac.SampleConsensusModel[cpp.PointXYZ] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying pcl::SampleConsensusModel<pcl::PointXYZ>.
 *         return self.thisptr_shared.get()
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "_pcl.pxd":173
 *     cdef pcl_sac.SampleConsensusModelPlanePtr_t thisptr_shared     # SampleConsensusModelPlane
 * 
 *     cdef inline pcl_sac.SampleConsensusModelPlane[cpp.PointXYZ] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying pcl::SampleConsensusModelPlane<pcl::PointXYZ>.
 *         return self.thisptr_shared.get()
 */

static CYTHON_INLINE pcl::SampleConsensusModelPlane<struct pcl::PointXYZ>  *__pyx_f_3pcl_4_pcl_25SampleConsensusModelPlane_thisptr(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelPlane *__pyx_v_self) {
  pcl::SampleConsensusModelPlane<struct pcl::PointXYZ>  *__pyx_r;

  /* "_pcl.pxd":175
 *     cdef inline pcl_sac.SampleConsensusModelPlane[cpp.PointXYZ] *thisptr(self) nogil:
 *         # Shortcut to get raw pointer to underlying pcl::SampleConsensusModelPlane<pcl::PointXYZ>.
 *         return self.thisptr_shared.get()             # <<<<<<<<<<<<<<
 * 
 * cdef class SampleConsensusModelSphere:
 */
  __pyx_r = __pyx_v_self->thisptr_shared.get();
  goto __pyx_L0;

  /* "_pcl.pxd":173
 *     cdef pcl_sac.SampleConsensusModelPlanePtr_t thisptr_shared     # SampleConsensusModelPlane
 * 
 *     cdef inline pcl_sac.SampleConsensusModelPlane[cpp.PointXYZ] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying pcl::SampleConsensusModelPlane<pcl::PointXYZ>.
 *         return self.thisptr_shared.get()
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "_pcl.pxd":180
 *     cdef pcl_sac.SampleConsensusModelSpherePtr_t thisptr_shared     # SampleConsensusModelSphere
 * 
 *     cdef inline pcl_sac.SampleConsensusModelSphere[cpp.PointXYZ] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying pcl::SampleConsensusModelSphere<pcl::PointXYZ>.
 *         return self.thisptr_shared.get()
 */

static CYTHON_INLINE pcl::SampleConsensusModelSphere<struct pcl::PointXYZ>  *__pyx_f_3pcl_4_pcl_26SampleConsensusModelSphere_thisptr(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelSphere *__pyx_v_self) {
  pcl::SampleConsensusModelSphere<struct pcl::PointXYZ>  *__pyx_r;

  /* "_pcl.pxd":182
 *     cdef inline pcl_sac.SampleConsensusModelSphere[cpp.PointXYZ] *thisptr(self) nogil:
 *         # Shortcut to get raw pointer to underlying pcl::SampleConsensusModelSphere<pcl::PointXYZ>.
 *         return self.thisptr_shared.get()             # <<<<<<<<<<<<<<
 * 
 * cdef class SampleConsensusModelCylinder:
 */
  __pyx_r = __pyx_v_self->thisptr_shared.get();
  goto __pyx_L0;

  /* "_pcl.pxd":180
 *     cdef pcl_sac.SampleConsensusModelSpherePtr_t thisptr_shared     # SampleConsensusModelSphere
 * 
 *     cdef inline pcl_sac.SampleConsensusModelSphere[cpp.PointXYZ] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying pcl::SampleConsensusModelSphere<pcl::PointXYZ>.
 *         return self.thisptr_shared.get()
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "_pcl.pxd":187
 *     cdef pcl_sac.SampleConsensusModelCylinderPtr_t thisptr_shared     # SampleConsensusModelSphere
 * 
 *     cdef inline pcl_sac.SampleConsensusModelCylinder[cpp.PointXYZ, cpp.Normal] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying pcl::SampleConsensusModelCylinder<pcl::PointXYZ, pcl::Normal>.
 *         return self.thisptr_shared.get()
 */

static CYTHON_INLINE pcl::SampleConsensusModelCylinder<struct pcl::PointXYZ,struct pcl::Normal>  *__pyx_f_3pcl_4_pcl_28SampleConsensusModelCylinder_thisptr(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelCylinder *__pyx_v_self) {
  pcl::SampleConsensusModelCylinder<struct pcl::PointXYZ,struct pcl::Normal>  *__pyx_r;

  /* "_pcl.pxd":189
 *     cdef inline pcl_sac.SampleConsensusModelCylinder[cpp.PointXYZ, cpp.Normal] *thisptr(self) nogil:
 *         # Shortcut to get raw pointer to underlying pcl::SampleConsensusModelCylinder<pcl::PointXYZ, pcl::Normal>.
 *         return self.thisptr_shared.get()             # <<<<<<<<<<<<<<
 * 
 * cdef class SampleConsensusModelLine:
 */
  __pyx_r = __pyx_v_self->thisptr_shared.get();
  goto __pyx_L0;

  /* "_pcl.pxd":187
 *     cdef pcl_sac.SampleConsensusModelCylinderPtr_t thisptr_shared     # SampleConsensusModelSphere
 * 
 *     cdef inline pcl_sac.SampleConsensusModelCylinder[cpp.PointXYZ, cpp.Normal] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying pcl::SampleConsensusModelCylinder<pcl::PointXYZ, pcl::Normal>.
 *         return self.thisptr_shared.get()
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "_pcl.pxd":194
 *     cdef pcl_sac.SampleConsensusModelLinePtr_t thisptr_shared     # SampleConsensusModelLine
 * 
 *     cdef inline pcl_sac.SampleConsensusModelLine[cpp.PointXYZ] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying pcl::SampleConsensusModelLine<pcl::PointXYZ>.
 *         return self.thisptr_shared.get()
 */

static CYTHON_INLINE pcl::SampleConsensusModelLine<struct pcl::PointXYZ>  *__pyx_f_3pcl_4_pcl_24SampleConsensusModelLine_thisptr(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelLine *__pyx_v_self) {
  pcl::SampleConsensusModelLine<struct pcl::PointXYZ>  *__pyx_r;

  /* "_pcl.pxd":196
 *     cdef inline pcl_sac.SampleConsensusModelLine[cpp.PointXYZ] *thisptr(self) nogil:
 *         # Shortcut to get raw pointer to underlying pcl::SampleConsensusModelLine<pcl::PointXYZ>.
 *         return self.thisptr_shared.get()             # <<<<<<<<<<<<<<
 * 
 * cdef class SampleConsensusModelRegistration:
 */
  __pyx_r = __pyx_v_self->thisptr_shared.get();
  goto __pyx_L0;

  /* "_pcl.pxd":194
 *     cdef pcl_sac.SampleConsensusModelLinePtr_t thisptr_shared     # SampleConsensusModelLine
 * 
 *     cdef inline pcl_sac.SampleConsensusModelLine[cpp.PointXYZ] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying pcl::SampleConsensusModelLine<pcl::PointXYZ>.
 *         return self.thisptr_shared.get()
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "_pcl.pxd":201
 *     cdef pcl_sac.SampleConsensusModelRegistrationPtr_t thisptr_shared     # SampleConsensusModelRegistration
 * 
 *     cdef inline pcl_sac.SampleConsensusModelRegistration[cpp.PointXYZ] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying pcl::SampleConsensusModelRegistration<pcl::PointXYZ>.
 *         return self.thisptr_shared.get()
 */

static CYTHON_INLINE pcl::SampleConsensusModelRegistration<struct pcl::PointXYZ>  *__pyx_f_3pcl_4_pcl_32SampleConsensusModelRegistration_thisptr(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelRegistration *__pyx_v_self) {
  pcl::SampleConsensusModelRegistration<struct pcl::PointXYZ>  *__pyx_r;

  /* "_pcl.pxd":203
 *     cdef inline pcl_sac.SampleConsensusModelRegistration[cpp.PointXYZ] *thisptr(self) nogil:
 *         # Shortcut to get raw pointer to underlying pcl::SampleConsensusModelRegistration<pcl::PointXYZ>.
 *         return self.thisptr_shared.get()             # <<<<<<<<<<<<<<
 * 
 * cdef class SampleConsensusModelStick:
 */
  __pyx_r = __pyx_v_self->thisptr_shared.get();
  goto __pyx_L0;

  /* "_pcl.pxd":201
 *     cdef pcl_sac.SampleConsensusModelRegistrationPtr_t thisptr_shared     # SampleConsensusModelRegistration
 * 
 *     cdef inline pcl_sac.SampleConsensusModelRegistration[cpp.PointXYZ] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying pcl::SampleConsensusModelRegistration<pcl::PointXYZ>.
 *         return self.thisptr_shared.get()
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "_pcl.pxd":208
 *     cdef pcl_sac.SampleConsensusModelStickPtr_t thisptr_shared     # SampleConsensusModelStick
 * 
 *     cdef inline pcl_sac.SampleConsensusModelStick[cpp.PointXYZ] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying pcl::SampleConsensusModelStick<pcl::PointXYZ>.
 *         return self.thisptr_shared.get()
 */

static CYTHON_INLINE pcl::SampleConsensusModelStick<struct pcl::PointXYZ>  *__pyx_f_3pcl_4_pcl_25SampleConsensusModelStick_thisptr(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelStick *__pyx_v_self) {
  pcl::SampleConsensusModelStick<struct pcl::PointXYZ>  *__pyx_r;

  /* "_pcl.pxd":210
 *     cdef inline pcl_sac.SampleConsensusModelStick[cpp.PointXYZ] *thisptr(self) nogil:
 *         # Shortcut to get raw pointer to underlying pcl::SampleConsensusModelStick<pcl::PointXYZ>.
 *         return self.thisptr_shared.get()             # <<<<<<<<<<<<<<
 */
  __pyx_r = __pyx_v_self->thisptr_shared.get();
  goto __pyx_L0;

  /* "_pcl.pxd":208
 *     cdef pcl_sac.SampleConsensusModelStickPtr_t thisptr_shared     # SampleConsensusModelStick
 * 
 *     cdef inline pcl_sac.SampleConsensusModelStick[cpp.PointXYZ] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying pcl::SampleConsensusModelStick<pcl::PointXYZ>.
 *         return self.thisptr_shared.get()
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":197
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fullfill the PEP.
 */

/* Python wrapper */
static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /*proto*/
static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getbuffer__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5numpy_7ndarray___getbuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info), ((int)__pyx_v_flags));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_v_copy_shape;
  int __pyx_v_i;
  int __pyx_v_ndim;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  int __pyx_v_t;
  char *__pyx_v_f;
  PyArray_Descr *__pyx_v_descr = 0;
  int __pyx_v_offset;
  int __pyx_v_hasfields;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  char *__pyx_t_7;
  __Pyx_RefNannySetupContext("__getbuffer__", 0);
  if (__pyx_v_info != NULL) {
    __pyx_v_info->obj = Py_None; __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(__pyx_v_info->obj);
  }

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":203
 *             # of flags
 * 
 *             if info == NULL: return             # <<<<<<<<<<<<<<
 * 
 *             cdef int copy_shape, i, ndim
 */
  __pyx_t_1 = ((__pyx_v_info == NULL) != 0);
  if (__pyx_t_1) {
    __pyx_r = 0;
    goto __pyx_L0;
  }

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":206
 * 
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 */
  __pyx_v_endian_detector = 1;

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":207
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 * 
 *             ndim = PyArray_NDIM(self)
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":209
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 *             ndim = PyArray_NDIM(self)             # <<<<<<<<<<<<<<
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_v_ndim = PyArray_NDIM(__pyx_v_self);

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":211
 *             ndim = PyArray_NDIM(self)
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 copy_shape = 1
 *             else:
 */
  __pyx_t_1 = (((sizeof(npy_intp)) != (sizeof(Py_ssize_t))) != 0);
  if (__pyx_t_1) {

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":212
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 copy_shape = 1             # <<<<<<<<<<<<<<
 *             else:
 *                 copy_shape = 0
 */
    __pyx_v_copy_shape = 1;

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":211
 *             ndim = PyArray_NDIM(self)
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 copy_shape = 1
 *             else:
 */
    goto __pyx_L4;
  }

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":214
 *                 copy_shape = 1
 *             else:
 *                 copy_shape = 0             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 */
  /*else*/ {
    __pyx_v_copy_shape = 0;
  }
  __pyx_L4:;

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":216
 *                 copy_shape = 0
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  __pyx_t_2 = (((__pyx_v_flags & PyBUF_C_CONTIGUOUS) == PyBUF_C_CONTIGUOUS) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L6_bool_binop_done;
  }

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":217
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 */
  __pyx_t_2 = ((!(PyArray_CHKFLAGS(__pyx_v_self, NPY_C_CONTIGUOUS) != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L6_bool_binop_done:;

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":216
 *                 copy_shape = 0
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  if (__pyx_t_1) {

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":218
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 218, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(11, 218, __pyx_L1_error)

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":216
 *                 copy_shape = 0
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  }

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":220
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  __pyx_t_2 = (((__pyx_v_flags & PyBUF_F_CONTIGUOUS) == PyBUF_F_CONTIGUOUS) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L9_bool_binop_done;
  }

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":221
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 */
  __pyx_t_2 = ((!(PyArray_CHKFLAGS(__pyx_v_self, NPY_F_CONTIGUOUS) != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L9_bool_binop_done:;

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":220
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  if (__pyx_t_1) {

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":222
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 222, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(11, 222, __pyx_L1_error)

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":220
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  }

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":224
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 *             info.buf = PyArray_DATA(self)             # <<<<<<<<<<<<<<
 *             info.ndim = ndim
 *             if copy_shape:
 */
  __pyx_v_info->buf = PyArray_DATA(__pyx_v_self);

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":225
 * 
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim             # <<<<<<<<<<<<<<
 *             if copy_shape:
 *                 # Allocate new buffer for strides and shape info.
 */
  __pyx_v_info->ndim = __pyx_v_ndim;

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":226
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim
 *             if copy_shape:             # <<<<<<<<<<<<<<
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 */
  __pyx_t_1 = (__pyx_v_copy_shape != 0);
  if (__pyx_t_1) {

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":229
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)             # <<<<<<<<<<<<<<
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 */
    __pyx_v_info->strides = ((Py_ssize_t *)malloc((((sizeof(Py_ssize_t)) * ((size_t)__pyx_v_ndim)) * 2)));

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":230
 *                 # This is allocated as one block, strides first.
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)
 *                 info.shape = info.strides + ndim             # <<<<<<<<<<<<<<
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 */
    __pyx_v_info->shape = (__pyx_v_info->strides + __pyx_v_ndim);

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":231
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):             # <<<<<<<<<<<<<<
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 */
    __pyx_t_4 = __pyx_v_ndim;
    for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
      __pyx_v_i = __pyx_t_5;

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":232
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]             # <<<<<<<<<<<<<<
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 */
      (__pyx_v_info->strides[__pyx_v_i]) = (PyArray_STRIDES(__pyx_v_self)[__pyx_v_i]);

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":233
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]             # <<<<<<<<<<<<<<
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 */
      (__pyx_v_info->shape[__pyx_v_i]) = (PyArray_DIMS(__pyx_v_self)[__pyx_v_i]);
    }

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":226
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim
 *             if copy_shape:             # <<<<<<<<<<<<<<
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 */
    goto __pyx_L11;
  }

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":235
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)             # <<<<<<<<<<<<<<
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 */
  /*else*/ {
    __pyx_v_info->strides = ((Py_ssize_t *)PyArray_STRIDES(__pyx_v_self));

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":236
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)             # <<<<<<<<<<<<<<
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 */
    __pyx_v_info->shape = ((Py_ssize_t *)PyArray_DIMS(__pyx_v_self));
  }
  __pyx_L11:;

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":237
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL             # <<<<<<<<<<<<<<
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 */
  __pyx_v_info->suboffsets = NULL;

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":238
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)             # <<<<<<<<<<<<<<
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 * 
 */
  __pyx_v_info->itemsize = PyArray_ITEMSIZE(__pyx_v_self);

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":239
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)             # <<<<<<<<<<<<<<
 * 
 *             cdef int t
 */
  __pyx_v_info->readonly = (!(PyArray_ISWRITEABLE(__pyx_v_self) != 0));

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":242
 * 
 *             cdef int t
 *             cdef char* f = NULL             # <<<<<<<<<<<<<<
 *             cdef dtype descr = self.descr
 *             cdef int offset
 */
  __pyx_v_f = NULL;

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":243
 *             cdef int t
 *             cdef char* f = NULL
 *             cdef dtype descr = self.descr             # <<<<<<<<<<<<<<
 *             cdef int offset
 * 
 */
  __pyx_t_3 = ((PyObject *)__pyx_v_self->descr);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_v_descr = ((PyArray_Descr *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":246
 *             cdef int offset
 * 
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields and not copy_shape:
 */
  __pyx_v_hasfields = PyDataType_HASFIELDS(__pyx_v_descr);

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":248
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)
 * 
 *             if not hasfields and not copy_shape:             # <<<<<<<<<<<<<<
 *                 # do not call releasebuffer
 *                 info.obj = None
 */
  __pyx_t_2 = ((!(__pyx_v_hasfields != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L15_bool_binop_done;
  }
  __pyx_t_2 = ((!(__pyx_v_copy_shape != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L15_bool_binop_done:;
  if (__pyx_t_1) {

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":250
 *             if not hasfields and not copy_shape:
 *                 # do not call releasebuffer
 *                 info.obj = None             # <<<<<<<<<<<<<<
 *             else:
 *                 # need to call releasebuffer
 */
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj);
    __pyx_v_info->obj = Py_None;

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":248
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)
 * 
 *             if not hasfields and not copy_shape:             # <<<<<<<<<<<<<<
 *                 # do not call releasebuffer
 *                 info.obj = None
 */
    goto __pyx_L14;
  }

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":253
 *             else:
 *                 # need to call releasebuffer
 *                 info.obj = self             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields:
 */
  /*else*/ {
    __Pyx_INCREF(((PyObject *)__pyx_v_self));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj);
    __pyx_v_info->obj = ((PyObject *)__pyx_v_self);
  }
  __pyx_L14:;

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":255
 *                 info.obj = self
 * 
 *             if not hasfields:             # <<<<<<<<<<<<<<
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 */
  __pyx_t_1 = ((!(__pyx_v_hasfields != 0)) != 0);
  if (__pyx_t_1) {

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":256
 * 
 *             if not hasfields:
 *                 t = descr.type_num             # <<<<<<<<<<<<<<
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 */
    __pyx_t_4 = __pyx_v_descr->type_num;
    __pyx_v_t = __pyx_t_4;

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":257
 *             if not hasfields:
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_2 = ((__pyx_v_descr->byteorder == '>') != 0);
    if (!__pyx_t_2) {
      goto __pyx_L20_next_or;
    } else {
    }
    __pyx_t_2 = (__pyx_v_little_endian != 0);
    if (!__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L19_bool_binop_done;
    }
    __pyx_L20_next_or:;

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":258
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 */
    __pyx_t_2 = ((__pyx_v_descr->byteorder == '<') != 0);
    if (__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L19_bool_binop_done;
    }
    __pyx_t_2 = ((!(__pyx_v_little_endian != 0)) != 0);
    __pyx_t_1 = __pyx_t_2;
    __pyx_L19_bool_binop_done:;

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":257
 *             if not hasfields:
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    if (__pyx_t_1) {

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":259
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__3, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 259, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __PYX_ERR(11, 259, __pyx_L1_error)

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":257
 *             if not hasfields:
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    }

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":260
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 */
    switch (__pyx_v_t) {
      case NPY_BYTE:
      __pyx_v_f = ((char *)"b");
      break;

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":261
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 */
      case NPY_UBYTE:
      __pyx_v_f = ((char *)"B");
      break;

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":262
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 */
      case NPY_SHORT:
      __pyx_v_f = ((char *)"h");
      break;

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":263
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 */
      case NPY_USHORT:
      __pyx_v_f = ((char *)"H");
      break;

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":264
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 */
      case NPY_INT:
      __pyx_v_f = ((char *)"i");
      break;

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":265
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 */
      case NPY_UINT:
      __pyx_v_f = ((char *)"I");
      break;

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":266
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 */
      case NPY_LONG:
      __pyx_v_f = ((char *)"l");
      break;

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":267
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 */
      case NPY_ULONG:
      __pyx_v_f = ((char *)"L");
      break;

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":268
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 */
      case NPY_LONGLONG:
      __pyx_v_f = ((char *)"q");
      break;

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":269
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 */
      case NPY_ULONGLONG:
      __pyx_v_f = ((char *)"Q");
      break;

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":270
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 */
      case NPY_FLOAT:
      __pyx_v_f = ((char *)"f");
      break;

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":271
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 */
      case NPY_DOUBLE:
      __pyx_v_f = ((char *)"d");
      break;

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":272
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 */
      case NPY_LONGDOUBLE:
      __pyx_v_f = ((char *)"g");
      break;

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":273
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 */
      case NPY_CFLOAT:
      __pyx_v_f = ((char *)"Zf");
      break;

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":274
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"
 */
      case NPY_CDOUBLE:
      __pyx_v_f = ((char *)"Zd");
      break;

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":275
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 */
      case NPY_CLONGDOUBLE:
      __pyx_v_f = ((char *)"Zg");
      break;

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":276
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"             # <<<<<<<<<<<<<<
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
      case NPY_OBJECT:
      __pyx_v_f = ((char *)"O");
      break;
      default:

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":278
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *                 info.format = f
 *                 return
 */
      __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_t); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 278, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = PyUnicode_Format(__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(11, 278, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 278, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_3, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(11, 278, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_Raise(__pyx_t_6, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __PYX_ERR(11, 278, __pyx_L1_error)
      break;
    }

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":279
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f             # <<<<<<<<<<<<<<
 *                 return
 *             else:
 */
    __pyx_v_info->format = __pyx_v_f;

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":280
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f
 *                 return             # <<<<<<<<<<<<<<
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 */
    __pyx_r = 0;
    goto __pyx_L0;

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":255
 *                 info.obj = self
 * 
 *             if not hasfields:             # <<<<<<<<<<<<<<
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 */
  }

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":282
 *                 return
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)             # <<<<<<<<<<<<<<
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0
 */
  /*else*/ {
    __pyx_v_info->format = ((char *)malloc(0xFF));

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":283
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 *                 info.format[0] = c'^' # Native data types, manual alignment             # <<<<<<<<<<<<<<
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,
 */
    (__pyx_v_info->format[0]) = '^';

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":284
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0             # <<<<<<<<<<<<<<
 *                 f = _util_dtypestring(descr, info.format + 1,
 *                                       info.format + _buffer_format_string_len,
 */
    __pyx_v_offset = 0;

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":285
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,             # <<<<<<<<<<<<<<
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 */
    __pyx_t_7 = __pyx_f_5numpy__util_dtypestring(__pyx_v_descr, (__pyx_v_info->format + 1), (__pyx_v_info->format + 0xFF), (&__pyx_v_offset)); if (unlikely(__pyx_t_7 == NULL)) __PYX_ERR(11, 285, __pyx_L1_error)
    __pyx_v_f = __pyx_t_7;

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":288
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 *                 f[0] = c'\0' # Terminate format string             # <<<<<<<<<<<<<<
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 */
    (__pyx_v_f[0]) = '\x00';
  }

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":197
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fullfill the PEP.
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("numpy.ndarray.__getbuffer__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  if (__pyx_v_info != NULL && __pyx_v_info->obj != NULL) {
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = NULL;
  }
  goto __pyx_L2;
  __pyx_L0:;
  if (__pyx_v_info != NULL && __pyx_v_info->obj == Py_None) {
    __Pyx_GOTREF(Py_None);
    __Pyx_DECREF(Py_None); __pyx_v_info->obj = NULL;
  }
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_descr);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":290
 *                 f[0] = c'\0' # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 */

/* Python wrapper */
static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info); /*proto*/
static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__releasebuffer__ (wrapper)", 0);
  __pyx_pf_5numpy_7ndarray_2__releasebuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__releasebuffer__", 0);

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":291
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_t_1 = (PyArray_HASFIELDS(__pyx_v_self) != 0);
  if (__pyx_t_1) {

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":292
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)             # <<<<<<<<<<<<<<
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 stdlib.free(info.strides)
 */
    free(__pyx_v_info->format);

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":291
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  }

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":293
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.strides)
 *                 # info.shape was stored after info.strides in the same block
 */
  __pyx_t_1 = (((sizeof(npy_intp)) != (sizeof(Py_ssize_t))) != 0);
  if (__pyx_t_1) {

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":294
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 stdlib.free(info.strides)             # <<<<<<<<<<<<<<
 *                 # info.shape was stored after info.strides in the same block
 * 
 */
    free(__pyx_v_info->strides);

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":293
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.strides)
 *                 # info.shape was stored after info.strides in the same block
 */
  }

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":290
 *                 f[0] = c'\0' # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":770
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew1", 0);

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":771
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 *     return PyArray_MultiIterNew(1, <void*>a)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(1, ((void *)__pyx_v_a)); if (unlikely(!__pyx_t_1)) __PYX_ERR(11, 771, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":770
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":773
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew2", 0);

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":774
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(2, ((void *)__pyx_v_a), ((void *)__pyx_v_b)); if (unlikely(!__pyx_t_1)) __PYX_ERR(11, 774, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":773
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":776
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew3", 0);

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":777
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(3, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c)); if (unlikely(!__pyx_t_1)) __PYX_ERR(11, 777, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":776
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":779
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew4", 0);

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":780
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(4, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d)); if (unlikely(!__pyx_t_1)) __PYX_ERR(11, 780, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":779
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew4", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":782
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew5", 0);

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":783
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)             # <<<<<<<<<<<<<<
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(5, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d), ((void *)__pyx_v_e)); if (unlikely(!__pyx_t_1)) __PYX_ERR(11, 783, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":782
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew5", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":785
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx_v_descr, char *__pyx_v_f, char *__pyx_v_end, int *__pyx_v_offset) {
  PyArray_Descr *__pyx_v_child = 0;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  PyObject *__pyx_v_fields = 0;
  PyObject *__pyx_v_childname = NULL;
  PyObject *__pyx_v_new_offset = NULL;
  PyObject *__pyx_v_t = NULL;
  char *__pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  long __pyx_t_8;
  char *__pyx_t_9;
  __Pyx_RefNannySetupContext("_util_dtypestring", 0);

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":790
 * 
 *     cdef dtype child
 *     cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 *     cdef tuple fields
 */
  __pyx_v_endian_detector = 1;

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":791
 *     cdef dtype child
 *     cdef int endian_detector = 1
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 *     cdef tuple fields
 * 
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":794
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */
  if (unlikely(__pyx_v_descr->names == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(11, 794, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_descr->names; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(11, 794, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 794, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_childname, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":795
 * 
 *     for childname in descr.names:
 *         fields = descr.fields[childname]             # <<<<<<<<<<<<<<
 *         child, new_offset = fields
 * 
 */
    if (unlikely(__pyx_v_descr->fields == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(11, 795, __pyx_L1_error)
    }
    __pyx_t_3 = __Pyx_PyDict_GetItem(__pyx_v_descr->fields, __pyx_v_childname); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (!(likely(PyTuple_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_t_3)->tp_name), 0))) __PYX_ERR(11, 795, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_fields, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":796
 *     for childname in descr.names:
 *         fields = descr.fields[childname]
 *         child, new_offset = fields             # <<<<<<<<<<<<<<
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 */
    if (likely(__pyx_v_fields != Py_None)) {
      PyObject* sequence = __pyx_v_fields;
      #if !CYTHON_COMPILING_IN_PYPY
      Py_ssize_t size = Py_SIZE(sequence);
      #else
      Py_ssize_t size = PySequence_Size(sequence);
      #endif
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(11, 796, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      #else
      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 796, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(11, 796, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      #endif
    } else {
      __Pyx_RaiseNoneNotIterableError(); __PYX_ERR(11, 796, __pyx_L1_error)
    }
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_dtype))))) __PYX_ERR(11, 796, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_child, ((PyArray_Descr *)__pyx_t_3));
    __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_new_offset, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":798
 *         child, new_offset = fields
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 */
    __pyx_t_4 = __Pyx_PyInt_From_int((__pyx_v_offset[0])); if (unlikely(!__pyx_t_4)) __PYX_ERR(11, 798, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyNumber_Subtract(__pyx_v_new_offset, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 798, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(11, 798, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_6 = ((((__pyx_v_end - __pyx_v_f) - ((int)__pyx_t_5)) < 15) != 0);
    if (__pyx_t_6) {

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":799
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 799, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __PYX_ERR(11, 799, __pyx_L1_error)

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":798
 *         child, new_offset = fields
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 */
    }

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":801
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_7 = ((__pyx_v_child->byteorder == '>') != 0);
    if (!__pyx_t_7) {
      goto __pyx_L8_next_or;
    } else {
    }
    __pyx_t_7 = (__pyx_v_little_endian != 0);
    if (!__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L7_bool_binop_done;
    }
    __pyx_L8_next_or:;

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":802
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
 *             raise ValueError(u"Non-native byte order not supported")
 *             # One could encode it in the format string and have Cython
 */
    __pyx_t_7 = ((__pyx_v_child->byteorder == '<') != 0);
    if (__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L7_bool_binop_done;
    }
    __pyx_t_7 = ((!(__pyx_v_little_endian != 0)) != 0);
    __pyx_t_6 = __pyx_t_7;
    __pyx_L7_bool_binop_done:;

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":801
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    if (__pyx_t_6) {

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":803
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 803, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __PYX_ERR(11, 803, __pyx_L1_error)

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":801
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    }

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":813
 * 
 *         # Output padding bytes
 *         while offset[0] < new_offset:             # <<<<<<<<<<<<<<
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 */
    while (1) {
      __pyx_t_3 = __Pyx_PyInt_From_int((__pyx_v_offset[0])); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 813, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_t_3, __pyx_v_new_offset, Py_LT); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(11, 813, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(11, 813, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (!__pyx_t_6) break;

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":814
 *         # Output padding bytes
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte             # <<<<<<<<<<<<<<
 *             f += 1
 *             offset[0] += 1
 */
      (__pyx_v_f[0]) = 0x78;

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":815
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte
 *             f += 1             # <<<<<<<<<<<<<<
 *             offset[0] += 1
 * 
 */
      __pyx_v_f = (__pyx_v_f + 1);

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":816
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 *             offset[0] += 1             # <<<<<<<<<<<<<<
 * 
 *         offset[0] += child.itemsize
 */
      __pyx_t_8 = 0;
      (__pyx_v_offset[__pyx_t_8]) = ((__pyx_v_offset[__pyx_t_8]) + 1);
    }

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":818
 *             offset[0] += 1
 * 
 *         offset[0] += child.itemsize             # <<<<<<<<<<<<<<
 * 
 *         if not PyDataType_HASFIELDS(child):
 */
    __pyx_t_8 = 0;
    (__pyx_v_offset[__pyx_t_8]) = ((__pyx_v_offset[__pyx_t_8]) + __pyx_v_child->elsize);

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":820
 *         offset[0] += child.itemsize
 * 
 *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
 *             t = child.type_num
 *             if end - f < 5:
 */
    __pyx_t_6 = ((!(PyDataType_HASFIELDS(__pyx_v_child) != 0)) != 0);
    if (__pyx_t_6) {

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":821
 * 
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num             # <<<<<<<<<<<<<<
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")
 */
      __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_child->type_num); if (unlikely(!__pyx_t_4)) __PYX_ERR(11, 821, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_XDECREF_SET(__pyx_v_t, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":822
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num
 *             if end - f < 5:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError(u"Format string allocated too short.")
 * 
 */
      __pyx_t_6 = (((__pyx_v_end - __pyx_v_f) < 5) != 0);
      if (__pyx_t_6) {

        /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":823
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(11, 823, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_Raise(__pyx_t_4, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(11, 823, __pyx_L1_error)

        /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":822
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num
 *             if end - f < 5:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError(u"Format string allocated too short.")
 * 
 */
      }

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":826
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_BYTE); if (unlikely(!__pyx_t_4)) __PYX_ERR(11, 826, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 826, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(11, 826, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 98;
        goto __pyx_L15;
      }

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":827
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"             # <<<<<<<<<<<<<<
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_UBYTE); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 827, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(11, 827, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(11, 827, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 66;
        goto __pyx_L15;
      }

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":828
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"             # <<<<<<<<<<<<<<
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_SHORT); if (unlikely(!__pyx_t_4)) __PYX_ERR(11, 828, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 828, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(11, 828, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x68;
        goto __pyx_L15;
      }

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":829
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"             # <<<<<<<<<<<<<<
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_USHORT); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 829, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(11, 829, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(11, 829, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 72;
        goto __pyx_L15;
      }

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":830
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_INT); if (unlikely(!__pyx_t_4)) __PYX_ERR(11, 830, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 830, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(11, 830, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x69;
        goto __pyx_L15;
      }

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":831
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_UINT); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 831, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(11, 831, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(11, 831, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 73;
        goto __pyx_L15;
      }

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":832
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONG); if (unlikely(!__pyx_t_4)) __PYX_ERR(11, 832, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 832, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(11, 832, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x6C;
        goto __pyx_L15;
      }

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":833
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_ULONG); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 833, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(11, 833, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(11, 833, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 76;
        goto __pyx_L15;
      }

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":834
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONGLONG); if (unlikely(!__pyx_t_4)) __PYX_ERR(11, 834, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 834, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(11, 834, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x71;
        goto __pyx_L15;
      }

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":835
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_ULONGLONG); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 835, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(11, 835, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(11, 835, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 81;
        goto __pyx_L15;
      }

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":836
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"             # <<<<<<<<<<<<<<
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_FLOAT); if (unlikely(!__pyx_t_4)) __PYX_ERR(11, 836, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 836, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(11, 836, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x66;
        goto __pyx_L15;
      }

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":837
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_DOUBLE); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 837, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(11, 837, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(11, 837, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x64;
        goto __pyx_L15;
      }

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":838
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"             # <<<<<<<<<<<<<<
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONGDOUBLE); if (unlikely(!__pyx_t_4)) __PYX_ERR(11, 838, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 838, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(11, 838, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x67;
        goto __pyx_L15;
      }

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":839
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf             # <<<<<<<<<<<<<<
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CFLOAT); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 839, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(11, 839, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(11, 839, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 0x66;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":840
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd             # <<<<<<<<<<<<<<
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CDOUBLE); if (unlikely(!__pyx_t_4)) __PYX_ERR(11, 840, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 840, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(11, 840, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 0x64;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":841
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg             # <<<<<<<<<<<<<<
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CLONGDOUBLE); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 841, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(11, 841, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(11, 841, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 0x67;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":842
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"             # <<<<<<<<<<<<<<
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_OBJECT); if (unlikely(!__pyx_t_4)) __PYX_ERR(11, 842, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 842, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(11, 842, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 79;
        goto __pyx_L15;
      }

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":844
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *             f += 1
 *         else:
 */
      /*else*/ {
        __pyx_t_3 = PyUnicode_Format(__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_v_t); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 844, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(11, 844, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_3);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 844, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_Raise(__pyx_t_3, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __PYX_ERR(11, 844, __pyx_L1_error)
      }
      __pyx_L15:;

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":845
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *             f += 1             # <<<<<<<<<<<<<<
 *         else:
 *             # Cython ignores struct boundary information ("T{...}"),
 */
      __pyx_v_f = (__pyx_v_f + 1);

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":820
 *         offset[0] += child.itemsize
 * 
 *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
 *             t = child.type_num
 *             if end - f < 5:
 */
      goto __pyx_L13;
    }

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":849
 *             # Cython ignores struct boundary information ("T{...}"),
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)             # <<<<<<<<<<<<<<
 *     return f
 * 
 */
    /*else*/ {
      __pyx_t_9 = __pyx_f_5numpy__util_dtypestring(__pyx_v_child, __pyx_v_f, __pyx_v_end, __pyx_v_offset); if (unlikely(__pyx_t_9 == NULL)) __PYX_ERR(11, 849, __pyx_L1_error)
      __pyx_v_f = __pyx_t_9;
    }
    __pyx_L13:;

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":794
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":850
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)
 *     return f             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_f;
  goto __pyx_L0;

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":785
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("numpy._util_dtypestring", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_child);
  __Pyx_XDECREF(__pyx_v_fields);
  __Pyx_XDECREF(__pyx_v_childname);
  __Pyx_XDECREF(__pyx_v_new_offset);
  __Pyx_XDECREF(__pyx_v_t);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":966
 * 
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *      cdef PyObject* baseptr
 *      if base is None:
 */

static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_arr, PyObject *__pyx_v_base) {
  PyObject *__pyx_v_baseptr;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("set_array_base", 0);

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":968
 * cdef inline void set_array_base(ndarray arr, object base):
 *      cdef PyObject* baseptr
 *      if base is None:             # <<<<<<<<<<<<<<
 *          baseptr = NULL
 *      else:
 */
  __pyx_t_1 = (__pyx_v_base == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":969
 *      cdef PyObject* baseptr
 *      if base is None:
 *          baseptr = NULL             # <<<<<<<<<<<<<<
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 */
    __pyx_v_baseptr = NULL;

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":968
 * cdef inline void set_array_base(ndarray arr, object base):
 *      cdef PyObject* baseptr
 *      if base is None:             # <<<<<<<<<<<<<<
 *          baseptr = NULL
 *      else:
 */
    goto __pyx_L3;
  }

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":971
 *          baseptr = NULL
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!             # <<<<<<<<<<<<<<
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 */
  /*else*/ {
    Py_INCREF(__pyx_v_base);

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":972
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base             # <<<<<<<<<<<<<<
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr
 */
    __pyx_v_baseptr = ((PyObject *)__pyx_v_base);
  }
  __pyx_L3:;

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":973
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)             # <<<<<<<<<<<<<<
 *      arr.base = baseptr
 * 
 */
  Py_XDECREF(__pyx_v_arr->base);

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":974
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr             # <<<<<<<<<<<<<<
 * 
 * cdef inline object get_array_base(ndarray arr):
 */
  __pyx_v_arr->base = __pyx_v_baseptr;

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":966
 * 
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *      cdef PyObject* baseptr
 *      if base is None:
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":976
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *__pyx_v_arr) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("get_array_base", 0);

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":977
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     else:
 */
  __pyx_t_1 = ((__pyx_v_arr->base == NULL) != 0);
  if (__pyx_t_1) {

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":978
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:
 *         return None             # <<<<<<<<<<<<<<
 *     else:
 *         return <object>arr.base
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":977
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     else:
 */
  }

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":980
 *         return None
 *     else:
 *         return <object>arr.base             # <<<<<<<<<<<<<<
 * 
 * 
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_arr->base));
    __pyx_r = ((PyObject *)__pyx_v_arr->base);
    goto __pyx_L0;
  }

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":976
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":985
 * # Versions of the import_* functions which are more suitable for
 * # Cython code.
 * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_array()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_array(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("import_array", 0);

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":986
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_array()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":987
 * cdef inline int import_array() except -1:
 *     try:
 *         _import_array()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")
 */
      __pyx_t_4 = _import_array(); if (unlikely(__pyx_t_4 == -1)) __PYX_ERR(11, 987, __pyx_L3_error)

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":986
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_array()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L10_try_end;
    __pyx_L3_error:;
    __Pyx_PyThreadState_assign

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":988
 *     try:
 *         _import_array()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(11, 988, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":989
 *         _import_array()
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_umath() except -1:
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(11, 989, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(11, 989, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":986
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_array()
 *     except Exception:
 */
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L10_try_end:;
  }

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":985
 * # Versions of the import_* functions which are more suitable for
 * # Cython code.
 * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_array()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":991
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_umath(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("import_umath", 0);

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":992
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":993
 * cdef inline int import_umath() except -1:
 *     try:
 *         _import_umath()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")
 */
      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == -1)) __PYX_ERR(11, 993, __pyx_L3_error)

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":992
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L10_try_end;
    __pyx_L3_error:;
    __Pyx_PyThreadState_assign

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":994
 *     try:
 *         _import_umath()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_umath", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(11, 994, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":995
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_ufunc() except -1:
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(11, 995, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(11, 995, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":992
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L10_try_end:;
  }

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":991
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_umath", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":997
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_ufunc(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("import_ufunc", 0);

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":998
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":999
 * cdef inline int import_ufunc() except -1:
 *     try:
 *         _import_umath()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")
 */
      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == -1)) __PYX_ERR(11, 999, __pyx_L3_error)

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":998
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L10_try_end;
    __pyx_L3_error:;
    __Pyx_PyThreadState_assign

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":1000
 *     try:
 *         _import_umath()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.umath failed to import")
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(11, 1000, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":1001
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__9, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(11, 1001, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(11, 1001, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":998
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L10_try_end:;
  }

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":997
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcl/pcl_visualization.pxd":21
 *     # cdef inline PointCloudColorHandlerCustom[cpp.PointXYZ] *thisptr(self) nogil:
 *     # pcl_visualization_defs
 *     cdef inline vis.PointCloudColorHandlerCustom[cpp.PointXYZ] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying PointCloudColorHandlerCustom<PointXYZ>.
 *         return self.thisptr_shared.get()
 */

static CYTHON_INLINE pcl::visualization::PointCloudColorHandlerCustom<struct pcl::PointXYZ>  *__pyx_f_3pcl_17pcl_visualization_31PointCloudColorHandleringCustom_thisptr(struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringCustom *__pyx_v_self) {
  pcl::visualization::PointCloudColorHandlerCustom<struct pcl::PointXYZ>  *__pyx_r;

  /* "pcl/pcl_visualization.pxd":23
 *     cdef inline vis.PointCloudColorHandlerCustom[cpp.PointXYZ] *thisptr(self) nogil:
 *         # Shortcut to get raw pointer to underlying PointCloudColorHandlerCustom<PointXYZ>.
 *         return self.thisptr_shared.get()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_self->thisptr_shared.get();
  goto __pyx_L0;

  /* "pcl/pcl_visualization.pxd":21
 *     # cdef inline PointCloudColorHandlerCustom[cpp.PointXYZ] *thisptr(self) nogil:
 *     # pcl_visualization_defs
 *     cdef inline vis.PointCloudColorHandlerCustom[cpp.PointXYZ] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying PointCloudColorHandlerCustom<PointXYZ>.
 *         return self.thisptr_shared.get()
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "pcl/pcl_visualization.pxd":32
 *     # cdef inline PointCloudGeometryHandlerCustom[cpp.PointXYZ] *thisptr(self) nogil:
 *     # pcl_visualization_defs
 *     cdef inline vis.PointCloudGeometryHandlerCustom[cpp.PointXYZ] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying PointCloudGeometryHandlerCustom<PointXYZ>.
 *         return self.thisptr_shared.get()
 */

static CYTHON_INLINE pcl::visualization::PointCloudGeometryHandlerCustom<struct pcl::PointXYZ>  *__pyx_f_3pcl_17pcl_visualization_34PointCloudGeometryHandleringCustom_thisptr(struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom *__pyx_v_self) {
  pcl::visualization::PointCloudGeometryHandlerCustom<struct pcl::PointXYZ>  *__pyx_r;

  /* "pcl/pcl_visualization.pxd":34
 *     cdef inline vis.PointCloudGeometryHandlerCustom[cpp.PointXYZ] *thisptr(self) nogil:
 *         # Shortcut to get raw pointer to underlying PointCloudGeometryHandlerCustom<PointXYZ>.
 *         return self.thisptr_shared.get()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_self->thisptr_shared.get();
  goto __pyx_L0;

  /* "pcl/pcl_visualization.pxd":32
 *     # cdef inline PointCloudGeometryHandlerCustom[cpp.PointXYZ] *thisptr(self) nogil:
 *     # pcl_visualization_defs
 *     cdef inline vis.PointCloudGeometryHandlerCustom[cpp.PointXYZ] *thisptr(self) nogil:             # <<<<<<<<<<<<<<
 *         # Shortcut to get raw pointer to underlying PointCloudGeometryHandlerCustom<PointXYZ>.
 *         return self.thisptr_shared.get()
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "string.from_py":13
 * 
 * @cname("__pyx_convert_string_from_py_std__in_string")
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t length
 *     cdef char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 */

static std::string __pyx_convert_string_from_py_std__in_string(PyObject *__pyx_v_o) {
  Py_ssize_t __pyx_v_length;
  char *__pyx_v_data;
  std::string __pyx_r;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  __Pyx_RefNannySetupContext("__pyx_convert_string_from_py_std__in_string", 0);

  /* "string.from_py":15
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:
 *     cdef Py_ssize_t length
 *     cdef char* data = __Pyx_PyObject_AsStringAndSize(o, &length)             # <<<<<<<<<<<<<<
 *     return string(data, length)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_AsStringAndSize(__pyx_v_o, (&__pyx_v_length)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(12, 15, __pyx_L1_error)
  __pyx_v_data = __pyx_t_1;

  /* "string.from_py":16
 *     cdef Py_ssize_t length
 *     cdef char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 *     return string(data, length)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = std::string(__pyx_v_data, __pyx_v_length);
  goto __pyx_L0;

  /* "string.from_py":13
 * 
 * @cname("__pyx_convert_string_from_py_std__in_string")
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t length
 *     cdef char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("string.from_py.__pyx_convert_string_from_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static struct __pyx_vtabstruct_3pcl_17pcl_visualization_PointCloudColorHandleringCustom __pyx_vtable_3pcl_17pcl_visualization_PointCloudColorHandleringCustom;

static PyObject *__pyx_tp_new_3pcl_17pcl_visualization_PointCloudColorHandleringCustom(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringCustom *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringCustom *)o);
  p->__pyx_vtab = __pyx_vtabptr_3pcl_17pcl_visualization_PointCloudColorHandleringCustom;
  new((void*)&(p->thisptr_shared)) __pyx_t_3pcl_22pcl_visualization_defs_PointCloudColorHandlerCustom_Ptr_t();
  if (unlikely(__pyx_pw_3pcl_17pcl_visualization_31PointCloudColorHandleringCustom_3__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_3pcl_17pcl_visualization_PointCloudColorHandleringCustom(PyObject *o) {
  struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringCustom *p = (struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringCustom *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_3pcl_17pcl_visualization_31PointCloudColorHandleringCustom_5__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __Pyx_call_destructor(p->thisptr_shared);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_3pcl_17pcl_visualization_PointCloudColorHandleringCustom[] = {
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_3pcl_17pcl_visualization_PointCloudColorHandleringCustom = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcl.pcl_visualization.PointCloudColorHandleringCustom", /*tp_name*/
  sizeof(struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringCustom), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3pcl_17pcl_visualization_PointCloudColorHandleringCustom, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_3pcl_17pcl_visualization_PointCloudColorHandleringCustom, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3pcl_17pcl_visualization_PointCloudColorHandleringCustom, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom __pyx_vtable_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom;

static PyObject *__pyx_tp_new_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom *)o);
  p->__pyx_vtab = __pyx_vtabptr_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom;
  new((void*)&(p->thisptr_shared)) __pyx_t_3pcl_22pcl_visualization_defs_PointCloudGeometryHandlerCustom_Ptr_t();
  return o;
}

static void __pyx_tp_dealloc_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom(PyObject *o) {
  struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom *p = (struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  __Pyx_call_destructor(p->thisptr_shared);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyTypeObject __pyx_type_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcl.pcl_visualization.PointCloudGeometryHandleringCustom", /*tp_name*/
  sizeof(struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_3pcl_17pcl_visualization_PointCloudColorHandleringGenericField(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_3pcl_17pcl_visualization_37PointCloudColorHandleringGenericField_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_3pcl_17pcl_visualization_PointCloudColorHandleringGenericField(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_3pcl_17pcl_visualization_37PointCloudColorHandleringGenericField_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_3pcl_17pcl_visualization_PointCloudColorHandleringGenericField[] = {
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_3pcl_17pcl_visualization_PointCloudColorHandleringGenericField = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcl.pcl_visualization.PointCloudColorHandleringGenericField", /*tp_name*/
  sizeof(struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringGenericField), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3pcl_17pcl_visualization_PointCloudColorHandleringGenericField, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_3pcl_17pcl_visualization_PointCloudColorHandleringGenericField, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3pcl_17pcl_visualization_PointCloudColorHandleringGenericField, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_3pcl_17pcl_visualization_PointCloudColorHandleringHSVField(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_3pcl_17pcl_visualization_33PointCloudColorHandleringHSVField_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_3pcl_17pcl_visualization_PointCloudColorHandleringHSVField(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_3pcl_17pcl_visualization_33PointCloudColorHandleringHSVField_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_3pcl_17pcl_visualization_PointCloudColorHandleringHSVField[] = {
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_3pcl_17pcl_visualization_PointCloudColorHandleringHSVField = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcl.pcl_visualization.PointCloudColorHandleringHSVField", /*tp_name*/
  sizeof(struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringHSVField), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3pcl_17pcl_visualization_PointCloudColorHandleringHSVField, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_3pcl_17pcl_visualization_PointCloudColorHandleringHSVField, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3pcl_17pcl_visualization_PointCloudColorHandleringHSVField, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_3pcl_17pcl_visualization_PointCloudColorHandleringRandom(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_3pcl_17pcl_visualization_31PointCloudColorHandleringRandom_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_3pcl_17pcl_visualization_PointCloudColorHandleringRandom(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_3pcl_17pcl_visualization_31PointCloudColorHandleringRandom_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_3pcl_17pcl_visualization_PointCloudColorHandleringRandom[] = {
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_3pcl_17pcl_visualization_PointCloudColorHandleringRandom = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcl.pcl_visualization.PointCloudColorHandleringRandom", /*tp_name*/
  sizeof(struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringRandom), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3pcl_17pcl_visualization_PointCloudColorHandleringRandom, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_3pcl_17pcl_visualization_PointCloudColorHandleringRandom, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3pcl_17pcl_visualization_PointCloudColorHandleringRandom, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_3pcl_17pcl_visualization_PointCloudColorHandleringRGBField(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_3pcl_17pcl_visualization_33PointCloudColorHandleringRGBField_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_3pcl_17pcl_visualization_PointCloudColorHandleringRGBField(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_3pcl_17pcl_visualization_33PointCloudColorHandleringRGBField_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_3pcl_17pcl_visualization_PointCloudColorHandleringRGBField[] = {
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_3pcl_17pcl_visualization_PointCloudColorHandleringRGBField = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcl.pcl_visualization.PointCloudColorHandleringRGBField", /*tp_name*/
  sizeof(struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringRGBField), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3pcl_17pcl_visualization_PointCloudColorHandleringRGBField, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_3pcl_17pcl_visualization_PointCloudColorHandleringRGBField, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3pcl_17pcl_visualization_PointCloudColorHandleringRGBField, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_3pcl_17pcl_visualization_PointCloudGeometryHandlerCustom(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_3pcl_17pcl_visualization_31PointCloudGeometryHandlerCustom_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_3pcl_17pcl_visualization_PointCloudGeometryHandlerCustom(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_3pcl_17pcl_visualization_31PointCloudGeometryHandlerCustom_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_3pcl_17pcl_visualization_PointCloudGeometryHandlerCustom[] = {
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_3pcl_17pcl_visualization_PointCloudGeometryHandlerCustom = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcl.pcl_visualization.PointCloudGeometryHandlerCustom", /*tp_name*/
  sizeof(struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandlerCustom), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3pcl_17pcl_visualization_PointCloudGeometryHandlerCustom, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_3pcl_17pcl_visualization_PointCloudGeometryHandlerCustom, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3pcl_17pcl_visualization_PointCloudGeometryHandlerCustom, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_3pcl_17pcl_visualization_PointCloudGeometryHandleringSurfaceNormal(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_3pcl_17pcl_visualization_41PointCloudGeometryHandleringSurfaceNormal_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_3pcl_17pcl_visualization_PointCloudGeometryHandleringSurfaceNormal(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_3pcl_17pcl_visualization_41PointCloudGeometryHandleringSurfaceNormal_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_3pcl_17pcl_visualization_PointCloudGeometryHandleringSurfaceNormal[] = {
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_3pcl_17pcl_visualization_PointCloudGeometryHandleringSurfaceNormal = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcl.pcl_visualization.PointCloudGeometryHandleringSurfaceNormal", /*tp_name*/
  sizeof(struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandleringSurfaceNormal), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3pcl_17pcl_visualization_PointCloudGeometryHandleringSurfaceNormal, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_3pcl_17pcl_visualization_PointCloudGeometryHandleringSurfaceNormal, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3pcl_17pcl_visualization_PointCloudGeometryHandleringSurfaceNormal, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_3pcl_17pcl_visualization_PointCloudGeometryHandleringXYZ(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_3pcl_17pcl_visualization_31PointCloudGeometryHandleringXYZ_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_3pcl_17pcl_visualization_PointCloudGeometryHandleringXYZ(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_3pcl_17pcl_visualization_31PointCloudGeometryHandleringXYZ_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_3pcl_17pcl_visualization_PointCloudGeometryHandleringXYZ[] = {
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_3pcl_17pcl_visualization_PointCloudGeometryHandleringXYZ = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcl.pcl_visualization.PointCloudGeometryHandleringXYZ", /*tp_name*/
  sizeof(struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandleringXYZ), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3pcl_17pcl_visualization_PointCloudGeometryHandleringXYZ, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_3pcl_17pcl_visualization_PointCloudGeometryHandleringXYZ, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3pcl_17pcl_visualization_PointCloudGeometryHandleringXYZ, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_3pcl_17pcl_visualization_CloudViewing __pyx_vtable_3pcl_17pcl_visualization_CloudViewing;

static PyObject *__pyx_tp_new_3pcl_17pcl_visualization_CloudViewing(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_3pcl_17pcl_visualization_CloudViewing *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_3pcl_17pcl_visualization_CloudViewing *)o);
  p->__pyx_vtab = __pyx_vtabptr_3pcl_17pcl_visualization_CloudViewing;
  new((void*)&(p->thisptr_shared)) __pyx_t_3pcl_22pcl_visualization_defs_CloudViewerPtr_t();
  if (unlikely(__pyx_pw_3pcl_17pcl_visualization_12CloudViewing_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_3pcl_17pcl_visualization_CloudViewing(PyObject *o) {
  struct __pyx_obj_3pcl_17pcl_visualization_CloudViewing *p = (struct __pyx_obj_3pcl_17pcl_visualization_CloudViewing *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  __Pyx_call_destructor(p->thisptr_shared);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_3pcl_17pcl_visualization_CloudViewing[] = {
  {"ShowMonochromeCloud", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_12CloudViewing_3ShowMonochromeCloud, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3pcl_17pcl_visualization_12CloudViewing_2ShowMonochromeCloud},
  {"ShowGrayCloud", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_12CloudViewing_5ShowGrayCloud, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3pcl_17pcl_visualization_12CloudViewing_4ShowGrayCloud},
  {"ShowColorCloud", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_12CloudViewing_7ShowColorCloud, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3pcl_17pcl_visualization_12CloudViewing_6ShowColorCloud},
  {"ShowColorACloud", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_12CloudViewing_9ShowColorACloud, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3pcl_17pcl_visualization_12CloudViewing_8ShowColorACloud},
  {"WasStopped", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_12CloudViewing_11WasStopped, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3pcl_17pcl_visualization_12CloudViewing_10WasStopped},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_3pcl_17pcl_visualization_CloudViewing = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcl.pcl_visualization.CloudViewing", /*tp_name*/
  sizeof(struct __pyx_obj_3pcl_17pcl_visualization_CloudViewing), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3pcl_17pcl_visualization_CloudViewing, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_3pcl_17pcl_visualization_CloudViewing, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3pcl_17pcl_visualization_CloudViewing, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_3pcl_17pcl_visualization_PCLVisualizering __pyx_vtable_3pcl_17pcl_visualization_PCLVisualizering;

static PyObject *__pyx_tp_new_3pcl_17pcl_visualization_PCLVisualizering(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)o);
  p->__pyx_vtab = __pyx_vtabptr_3pcl_17pcl_visualization_PCLVisualizering;
  new((void*)&(p->thisptr_shared)) __pyx_t_3pcl_22pcl_visualization_defs_PCLVisualizerPtr_t();
  if (unlikely(__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_3pcl_17pcl_visualization_PCLVisualizering(PyObject *o) {
  struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *p = (struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  __Pyx_call_destructor(p->thisptr_shared);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_3pcl_17pcl_visualization_PCLVisualizering[] = {
  {"SetFullScreen", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_3SetFullScreen, METH_O, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_2SetFullScreen},
  {"SetWindowBorders", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_5SetWindowBorders, METH_O, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_4SetWindowBorders},
  {"Spin", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_7Spin, METH_NOARGS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_6Spin},
  {"SpinOnce", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_9SpinOnce, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_8SpinOnce},
  {"AddCoordinateSystem", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_11AddCoordinateSystem, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_10AddCoordinateSystem},
  {"AddCoordinateSystem", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_13AddCoordinateSystem, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_12AddCoordinateSystem},
  {"removeCoordinateSystem", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_15removeCoordinateSystem, METH_O, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_14removeCoordinateSystem},
  {"RemovePointCloud", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_17RemovePointCloud, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_16RemovePointCloud},
  {"RemovePolygonMesh", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_19RemovePolygonMesh, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_18RemovePolygonMesh},
  {"RemoveShape", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_21RemoveShape, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_20RemoveShape},
  {"RemoveText3D", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_23RemoveText3D, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_22RemoveText3D},
  {"RemoveAllPointClouds", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_25RemoveAllPointClouds, METH_O, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_24RemoveAllPointClouds},
  {"RemoveAllShapes", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_27RemoveAllShapes, METH_O, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_26RemoveAllShapes},
  {"SetBackgroundColor", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_29SetBackgroundColor, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_28SetBackgroundColor},
  {"AddText", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_31AddText, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_30AddText},
  {"AddText", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_33AddText, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_32AddText},
  {"AddText", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_35AddText, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_34AddText},
  {"UpdateText", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_37UpdateText, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_36UpdateText},
  {"UpdateText", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_39UpdateText, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_38UpdateText},
  {"UpdateText", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_41UpdateText, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_40UpdateText},
  {"AddPointCloud", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_43AddPointCloud, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_42AddPointCloud},
  {"AddPointCloud_ColorHandler", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_45AddPointCloud_ColorHandler, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_44AddPointCloud_ColorHandler},
  {"AddPointCloud_ColorHandler", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_47AddPointCloud_ColorHandler, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_46AddPointCloud_ColorHandler},
  {"AddPointCloudNormals", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_49AddPointCloudNormals, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_48AddPointCloudNormals},
  {"SetPointCloudRenderingProperties", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_51SetPointCloudRenderingProperties, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_50SetPointCloudRenderingProperties},
  {"InitCameraParameters", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_53InitCameraParameters, METH_NOARGS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_52InitCameraParameters},
  {"WasStopped", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_55WasStopped, METH_NOARGS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_54WasStopped},
  {"ResetStoppedFlag", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_57ResetStoppedFlag, METH_NOARGS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_56ResetStoppedFlag},
  {"Close", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_59Close, METH_NOARGS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_58Close},
  {"AddCube", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_61AddCube, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_60AddCube},
  {"AddCone", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_63AddCone, METH_NOARGS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_62AddCone},
  {"AddCircle", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_65AddCircle, METH_NOARGS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_64AddCircle},
  {"AddPlane", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_67AddPlane, METH_NOARGS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_66AddPlane},
  {"AddLine", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_69AddLine, METH_NOARGS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_68AddLine},
  {"AddSphere", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_71AddSphere, METH_NOARGS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_70AddSphere},
  {"AddCylinder", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_73AddCylinder, METH_NOARGS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_72AddCylinder},
  {"AddCircle", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_16PCLVisualizering_75AddCircle, METH_NOARGS, __pyx_doc_3pcl_17pcl_visualization_16PCLVisualizering_74AddCircle},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_3pcl_17pcl_visualization_PCLVisualizering = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcl.pcl_visualization.PCLVisualizering", /*tp_name*/
  sizeof(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3pcl_17pcl_visualization_PCLVisualizering, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_3pcl_17pcl_visualization_PCLVisualizering, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3pcl_17pcl_visualization_PCLVisualizering, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_3pcl_17pcl_visualization_PCLHistogramViewing __pyx_vtable_3pcl_17pcl_visualization_PCLHistogramViewing;

static PyObject *__pyx_tp_new_3pcl_17pcl_visualization_PCLHistogramViewing(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_3pcl_17pcl_visualization_PCLHistogramViewing *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_3pcl_17pcl_visualization_PCLHistogramViewing *)o);
  p->__pyx_vtab = __pyx_vtabptr_3pcl_17pcl_visualization_PCLHistogramViewing;
  new((void*)&(p->thisptr_shared)) __pyx_t_3pcl_22pcl_visualization_defs_PCLHistogramVisualizerPtr_t();
  if (unlikely(__pyx_pw_3pcl_17pcl_visualization_19PCLHistogramViewing_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_3pcl_17pcl_visualization_PCLHistogramViewing(PyObject *o) {
  struct __pyx_obj_3pcl_17pcl_visualization_PCLHistogramViewing *p = (struct __pyx_obj_3pcl_17pcl_visualization_PCLHistogramViewing *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  __Pyx_call_destructor(p->thisptr_shared);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_3pcl_17pcl_visualization_PCLHistogramViewing[] = {
  {"SpinOnce", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_19PCLHistogramViewing_3SpinOnce, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3pcl_17pcl_visualization_19PCLHistogramViewing_2SpinOnce},
  {"AddFeatureHistogram", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_19PCLHistogramViewing_5AddFeatureHistogram, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3pcl_17pcl_visualization_19PCLHistogramViewing_4AddFeatureHistogram},
  {"Spin", (PyCFunction)__pyx_pw_3pcl_17pcl_visualization_19PCLHistogramViewing_7Spin, METH_NOARGS, __pyx_doc_3pcl_17pcl_visualization_19PCLHistogramViewing_6Spin},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_3pcl_17pcl_visualization_PCLHistogramViewing = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcl.pcl_visualization.PCLHistogramViewing", /*tp_name*/
  sizeof(struct __pyx_obj_3pcl_17pcl_visualization_PCLHistogramViewing), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3pcl_17pcl_visualization_PCLHistogramViewing, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_3pcl_17pcl_visualization_PCLHistogramViewing, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3pcl_17pcl_visualization_PCLHistogramViewing, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
  #if PY_VERSION_HEX < 0x03020000
    { PyObject_HEAD_INIT(NULL) NULL, 0, NULL },
  #else
    PyModuleDef_HEAD_INIT,
  #endif
    "pcl_visualization",
    0, /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_u_Format_string_allocated_too_shor, __pyx_k_Format_string_allocated_too_shor, sizeof(__pyx_k_Format_string_allocated_too_shor), 0, 1, 0, 0},
  {&__pyx_kp_u_Format_string_allocated_too_shor_2, __pyx_k_Format_string_allocated_too_shor_2, sizeof(__pyx_k_Format_string_allocated_too_shor_2), 0, 1, 0, 0},
  {&__pyx_n_s_ImportError, __pyx_k_ImportError, sizeof(__pyx_k_ImportError), 0, 0, 1, 1},
  {&__pyx_kp_u_Non_native_byte_order_not_suppor, __pyx_k_Non_native_byte_order_not_suppor, sizeof(__pyx_k_Non_native_byte_order_not_suppor), 0, 1, 0, 0},
  {&__pyx_n_s_PCLVISUALIZER_COLOR, __pyx_k_PCLVISUALIZER_COLOR, sizeof(__pyx_k_PCLVISUALIZER_COLOR), 0, 0, 1, 1},
  {&__pyx_n_s_PCLVISUALIZER_FONT_SIZE, __pyx_k_PCLVISUALIZER_FONT_SIZE, sizeof(__pyx_k_PCLVISUALIZER_FONT_SIZE), 0, 0, 1, 1},
  {&__pyx_n_s_PCLVISUALIZER_IMMEDIATE_RENDERIN, __pyx_k_PCLVISUALIZER_IMMEDIATE_RENDERIN, sizeof(__pyx_k_PCLVISUALIZER_IMMEDIATE_RENDERIN), 0, 0, 1, 1},
  {&__pyx_n_s_PCLVISUALIZER_LINE_WIDTH, __pyx_k_PCLVISUALIZER_LINE_WIDTH, sizeof(__pyx_k_PCLVISUALIZER_LINE_WIDTH), 0, 0, 1, 1},
  {&__pyx_n_s_PCLVISUALIZER_OPACITY, __pyx_k_PCLVISUALIZER_OPACITY, sizeof(__pyx_k_PCLVISUALIZER_OPACITY), 0, 0, 1, 1},
  {&__pyx_n_s_PCLVISUALIZER_POINT_SIZE, __pyx_k_PCLVISUALIZER_POINT_SIZE, sizeof(__pyx_k_PCLVISUALIZER_POINT_SIZE), 0, 0, 1, 1},
  {&__pyx_n_s_PCLVISUALIZER_REPRESENTATION, __pyx_k_PCLVISUALIZER_REPRESENTATION, sizeof(__pyx_k_PCLVISUALIZER_REPRESENTATION), 0, 0, 1, 1},
  {&__pyx_n_s_PCLVISUALIZER_REPRESENTATION_POI, __pyx_k_PCLVISUALIZER_REPRESENTATION_POI, sizeof(__pyx_k_PCLVISUALIZER_REPRESENTATION_POI), 0, 0, 1, 1},
  {&__pyx_n_s_PCLVISUALIZER_REPRESENTATION_SUR, __pyx_k_PCLVISUALIZER_REPRESENTATION_SUR, sizeof(__pyx_k_PCLVISUALIZER_REPRESENTATION_SUR), 0, 0, 1, 1},
  {&__pyx_n_s_PCLVISUALIZER_REPRESENTATION_WIR, __pyx_k_PCLVISUALIZER_REPRESENTATION_WIR, sizeof(__pyx_k_PCLVISUALIZER_REPRESENTATION_WIR), 0, 0, 1, 1},
  {&__pyx_n_s_RuntimeError, __pyx_k_RuntimeError, sizeof(__pyx_k_RuntimeError), 0, 0, 1, 1},
  {&__pyx_n_s_Sequence, __pyx_k_Sequence, sizeof(__pyx_k_Sequence), 0, 0, 1, 1},
  {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
  {&__pyx_n_s_b, __pyx_k_b, sizeof(__pyx_k_b), 0, 0, 1, 1},
  {&__pyx_n_s_cinit, __pyx_k_cinit, sizeof(__pyx_k_cinit), 0, 0, 1, 1},
  {&__pyx_n_b_cloud, __pyx_k_cloud, sizeof(__pyx_k_cloud), 0, 0, 0, 1},
  {&__pyx_n_s_cloud, __pyx_k_cloud, sizeof(__pyx_k_cloud), 0, 0, 1, 1},
  {&__pyx_n_s_cloudname, __pyx_k_cloudname, sizeof(__pyx_k_cloudname), 0, 0, 1, 1},
  {&__pyx_n_s_collections, __pyx_k_collections, sizeof(__pyx_k_collections), 0, 0, 1, 1},
  {&__pyx_n_s_color_handler, __pyx_k_color_handler, sizeof(__pyx_k_color_handler), 0, 0, 1, 1},
  {&__pyx_n_s_dealloc, __pyx_k_dealloc, sizeof(__pyx_k_dealloc), 0, 0, 1, 1},
  {&__pyx_n_s_end, __pyx_k_end, sizeof(__pyx_k_end), 0, 0, 1, 1},
  {&__pyx_n_s_file, __pyx_k_file, sizeof(__pyx_k_file), 0, 0, 1, 1},
  {&__pyx_n_s_fontsize, __pyx_k_fontsize, sizeof(__pyx_k_fontsize), 0, 0, 1, 1},
  {&__pyx_n_s_force_redraw, __pyx_k_force_redraw, sizeof(__pyx_k_force_redraw), 0, 0, 1, 1},
  {&__pyx_n_s_g, __pyx_k_g, sizeof(__pyx_k_g), 0, 0, 1, 1},
  {&__pyx_n_s_hsize, __pyx_k_hsize, sizeof(__pyx_k_hsize), 0, 0, 1, 1},
  {&__pyx_n_s_id, __pyx_k_id, sizeof(__pyx_k_id), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_level, __pyx_k_level, sizeof(__pyx_k_level), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_max_x, __pyx_k_max_x, sizeof(__pyx_k_max_x), 0, 0, 1, 1},
  {&__pyx_n_s_max_y, __pyx_k_max_y, sizeof(__pyx_k_max_y), 0, 0, 1, 1},
  {&__pyx_n_s_max_z, __pyx_k_max_z, sizeof(__pyx_k_max_z), 0, 0, 1, 1},
  {&__pyx_n_s_millis_to_wait, __pyx_k_millis_to_wait, sizeof(__pyx_k_millis_to_wait), 0, 0, 1, 1},
  {&__pyx_n_s_min_x, __pyx_k_min_x, sizeof(__pyx_k_min_x), 0, 0, 1, 1},
  {&__pyx_n_s_min_y, __pyx_k_min_y, sizeof(__pyx_k_min_y), 0, 0, 1, 1},
  {&__pyx_n_s_min_z, __pyx_k_min_z, sizeof(__pyx_k_min_z), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_kp_u_ndarray_is_not_C_contiguous, __pyx_k_ndarray_is_not_C_contiguous, sizeof(__pyx_k_ndarray_is_not_C_contiguous), 0, 1, 0, 0},
  {&__pyx_kp_u_ndarray_is_not_Fortran_contiguou, __pyx_k_ndarray_is_not_Fortran_contiguou, sizeof(__pyx_k_ndarray_is_not_Fortran_contiguou), 0, 1, 0, 0},
  {&__pyx_n_s_normal, __pyx_k_normal, sizeof(__pyx_k_normal), 0, 0, 1, 1},
  {&__pyx_n_s_np, __pyx_k_np, sizeof(__pyx_k_np), 0, 0, 1, 1},
  {&__pyx_n_s_numbers, __pyx_k_numbers, sizeof(__pyx_k_numbers), 0, 0, 1, 1},
  {&__pyx_n_s_numpy, __pyx_k_numpy, sizeof(__pyx_k_numpy), 0, 0, 1, 1},
  {&__pyx_kp_s_numpy_core_multiarray_failed_to, __pyx_k_numpy_core_multiarray_failed_to, sizeof(__pyx_k_numpy_core_multiarray_failed_to), 0, 0, 1, 0},
  {&__pyx_kp_s_numpy_core_umath_failed_to_impor, __pyx_k_numpy_core_umath_failed_to_impor, sizeof(__pyx_k_numpy_core_umath_failed_to_impor), 0, 0, 1, 0},
  {&__pyx_n_s_pc, __pyx_k_pc, sizeof(__pyx_k_pc), 0, 0, 1, 1},
  {&__pyx_n_s_print, __pyx_k_print, sizeof(__pyx_k_print), 0, 0, 1, 1},
  {&__pyx_n_s_propName, __pyx_k_propName, sizeof(__pyx_k_propName), 0, 0, 1, 1},
  {&__pyx_n_s_propType, __pyx_k_propType, sizeof(__pyx_k_propType), 0, 0, 1, 1},
  {&__pyx_n_s_propValue, __pyx_k_propValue, sizeof(__pyx_k_propValue), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
  {&__pyx_n_s_r, __pyx_k_r, sizeof(__pyx_k_r), 0, 0, 1, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_scale, __pyx_k_scale, sizeof(__pyx_k_scale), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_text, __pyx_k_text, sizeof(__pyx_k_text), 0, 0, 1, 1},
  {&__pyx_n_s_time, __pyx_k_time, sizeof(__pyx_k_time), 0, 0, 1, 1},
  {&__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_k_unknown_dtype_code_in_numpy_pxd, sizeof(__pyx_k_unknown_dtype_code_in_numpy_pxd), 0, 1, 0, 0},
  {&__pyx_n_s_viewpoint, __pyx_k_viewpoint, sizeof(__pyx_k_viewpoint), 0, 0, 1, 1},
  {&__pyx_n_s_viewport, __pyx_k_viewport, sizeof(__pyx_k_viewport), 0, 0, 1, 1},
  {&__pyx_n_b_visual, __pyx_k_visual, sizeof(__pyx_k_visual), 0, 0, 0, 1},
  {&__pyx_n_s_win_height, __pyx_k_win_height, sizeof(__pyx_k_win_height), 0, 0, 1, 1},
  {&__pyx_n_s_win_width, __pyx_k_win_width, sizeof(__pyx_k_win_width), 0, 0, 1, 1},
  {&__pyx_n_s_x, __pyx_k_x, sizeof(__pyx_k_x), 0, 0, 1, 1},
  {&__pyx_n_s_xpos, __pyx_k_xpos, sizeof(__pyx_k_xpos), 0, 0, 1, 1},
  {&__pyx_n_s_y, __pyx_k_y, sizeof(__pyx_k_y), 0, 0, 1, 1},
  {&__pyx_n_s_ypos, __pyx_k_ypos, sizeof(__pyx_k_ypos), 0, 0, 1, 1},
  {&__pyx_n_s_z, __pyx_k_z, sizeof(__pyx_k_z), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) __PYX_ERR(11, 218, __pyx_L1_error)
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(11, 231, __pyx_L1_error)
  __pyx_builtin_RuntimeError = __Pyx_GetBuiltinName(__pyx_n_s_RuntimeError); if (!__pyx_builtin_RuntimeError) __PYX_ERR(11, 799, __pyx_L1_error)
  __pyx_builtin_ImportError = __Pyx_GetBuiltinName(__pyx_n_s_ImportError); if (!__pyx_builtin_ImportError) __PYX_ERR(11, 989, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":218
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
  __pyx_tuple_ = PyTuple_Pack(1, __pyx_kp_u_ndarray_is_not_C_contiguous); if (unlikely(!__pyx_tuple_)) __PYX_ERR(11, 218, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":222
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
  __pyx_tuple__2 = PyTuple_Pack(1, __pyx_kp_u_ndarray_is_not_Fortran_contiguou); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(11, 222, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":259
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
  __pyx_tuple__3 = PyTuple_Pack(1, __pyx_kp_u_Non_native_byte_order_not_suppor); if (unlikely(!__pyx_tuple__3)) __PYX_ERR(11, 259, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__3);
  __Pyx_GIVEREF(__pyx_tuple__3);

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":799
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 */
  __pyx_tuple__4 = PyTuple_Pack(1, __pyx_kp_u_Format_string_allocated_too_shor); if (unlikely(!__pyx_tuple__4)) __PYX_ERR(11, 799, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__4);
  __Pyx_GIVEREF(__pyx_tuple__4);

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":803
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
  __pyx_tuple__5 = PyTuple_Pack(1, __pyx_kp_u_Non_native_byte_order_not_suppor); if (unlikely(!__pyx_tuple__5)) __PYX_ERR(11, 803, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__5);
  __Pyx_GIVEREF(__pyx_tuple__5);

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":823
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
  __pyx_tuple__6 = PyTuple_Pack(1, __pyx_kp_u_Format_string_allocated_too_shor_2); if (unlikely(!__pyx_tuple__6)) __PYX_ERR(11, 823, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":989
 *         _import_array()
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_umath() except -1:
 */
  __pyx_tuple__7 = PyTuple_Pack(1, __pyx_kp_s_numpy_core_multiarray_failed_to); if (unlikely(!__pyx_tuple__7)) __PYX_ERR(11, 989, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":995
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_ufunc() except -1:
 */
  __pyx_tuple__8 = PyTuple_Pack(1, __pyx_kp_s_numpy_core_umath_failed_to_impor); if (unlikely(!__pyx_tuple__8)) __PYX_ERR(11, 995, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__8);
  __Pyx_GIVEREF(__pyx_tuple__8);

  /* "../venv/local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":1001
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__9 = PyTuple_Pack(1, __pyx_kp_s_numpy_core_umath_failed_to_impor); if (unlikely(!__pyx_tuple__9)) __PYX_ERR(11, 1001, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__9);
  __Pyx_GIVEREF(__pyx_tuple__9);
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(13, 1, __pyx_L1_error);
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) __PYX_ERR(13, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initpcl_visualization(void); /*proto*/
PyMODINIT_FUNC initpcl_visualization(void)
#else
PyMODINIT_FUNC PyInit_pcl_visualization(void); /*proto*/
PyMODINIT_FUNC PyInit_pcl_visualization(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  __Pyx_RefNannyDeclarations
  #if CYTHON_REFNANNY
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  #endif
  __Pyx_RefNannySetupContext("PyMODINIT_FUNC PyInit_pcl_visualization(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(13, 1, __pyx_L1_error)
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(13, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(13, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(13, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) __PYX_ERR(13, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) __PYX_ERR(13, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) __PYX_ERR(13, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) __PYX_ERR(13, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(13, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("pcl_visualization", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) __PYX_ERR(13, 1, __pyx_L1_error)
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(13, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(13, 1, __pyx_L1_error)
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(13, 1, __pyx_L1_error);
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(13, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(13, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_pcl__pcl_visualization) {
    if (PyObject_SetAttrString(__pyx_m, "__name__", __pyx_n_s_main) < 0) __PYX_ERR(13, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(13, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "pcl.pcl_visualization")) {
      if (unlikely(PyDict_SetItemString(modules, "pcl.pcl_visualization", __pyx_m) < 0)) __PYX_ERR(13, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(13, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(13, 1, __pyx_L1_error)
  /*--- Global init code ---*/
  /*--- Variable export code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  __pyx_vtabptr_3pcl_17pcl_visualization_PointCloudColorHandleringCustom = &__pyx_vtable_3pcl_17pcl_visualization_PointCloudColorHandleringCustom;
  __pyx_vtable_3pcl_17pcl_visualization_PointCloudColorHandleringCustom.thisptr = (pcl::visualization::PointCloudColorHandlerCustom<struct pcl::PointXYZ>  *(*)(struct __pyx_obj_3pcl_17pcl_visualization_PointCloudColorHandleringCustom *))__pyx_f_3pcl_17pcl_visualization_31PointCloudColorHandleringCustom_thisptr;
  if (PyType_Ready(&__pyx_type_3pcl_17pcl_visualization_PointCloudColorHandleringCustom) < 0) __PYX_ERR(0, 13, __pyx_L1_error)
  __pyx_type_3pcl_17pcl_visualization_PointCloudColorHandleringCustom.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_3pcl_17pcl_visualization_PointCloudColorHandleringCustom.tp_dict, __pyx_vtabptr_3pcl_17pcl_visualization_PointCloudColorHandleringCustom) < 0) __PYX_ERR(0, 13, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "PointCloudColorHandleringCustom", (PyObject *)&__pyx_type_3pcl_17pcl_visualization_PointCloudColorHandleringCustom) < 0) __PYX_ERR(0, 13, __pyx_L1_error)
  __pyx_ptype_3pcl_17pcl_visualization_PointCloudColorHandleringCustom = &__pyx_type_3pcl_17pcl_visualization_PointCloudColorHandleringCustom;
  __pyx_vtabptr_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom = &__pyx_vtable_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom;
  __pyx_vtable_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom.thisptr = (pcl::visualization::PointCloudGeometryHandlerCustom<struct pcl::PointXYZ>  *(*)(struct __pyx_obj_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom *))__pyx_f_3pcl_17pcl_visualization_34PointCloudGeometryHandleringCustom_thisptr;
  if (PyType_Ready(&__pyx_type_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom) < 0) __PYX_ERR(14, 27, __pyx_L1_error)
  __pyx_type_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom.tp_dict, __pyx_vtabptr_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom) < 0) __PYX_ERR(14, 27, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "PointCloudGeometryHandleringCustom", (PyObject *)&__pyx_type_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom) < 0) __PYX_ERR(14, 27, __pyx_L1_error)
  __pyx_ptype_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom = &__pyx_type_3pcl_17pcl_visualization_PointCloudGeometryHandleringCustom;
  if (PyType_Ready(&__pyx_type_3pcl_17pcl_visualization_PointCloudColorHandleringGenericField) < 0) __PYX_ERR(1, 9, __pyx_L1_error)
  __pyx_type_3pcl_17pcl_visualization_PointCloudColorHandleringGenericField.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "PointCloudColorHandleringGenericField", (PyObject *)&__pyx_type_3pcl_17pcl_visualization_PointCloudColorHandleringGenericField) < 0) __PYX_ERR(1, 9, __pyx_L1_error)
  __pyx_ptype_3pcl_17pcl_visualization_PointCloudColorHandleringGenericField = &__pyx_type_3pcl_17pcl_visualization_PointCloudColorHandleringGenericField;
  if (PyType_Ready(&__pyx_type_3pcl_17pcl_visualization_PointCloudColorHandleringHSVField) < 0) __PYX_ERR(2, 9, __pyx_L1_error)
  __pyx_type_3pcl_17pcl_visualization_PointCloudColorHandleringHSVField.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "PointCloudColorHandleringHSVField", (PyObject *)&__pyx_type_3pcl_17pcl_visualization_PointCloudColorHandleringHSVField) < 0) __PYX_ERR(2, 9, __pyx_L1_error)
  __pyx_ptype_3pcl_17pcl_visualization_PointCloudColorHandleringHSVField = &__pyx_type_3pcl_17pcl_visualization_PointCloudColorHandleringHSVField;
  if (PyType_Ready(&__pyx_type_3pcl_17pcl_visualization_PointCloudColorHandleringRandom) < 0) __PYX_ERR(3, 9, __pyx_L1_error)
  __pyx_type_3pcl_17pcl_visualization_PointCloudColorHandleringRandom.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "PointCloudColorHandleringRandom", (PyObject *)&__pyx_type_3pcl_17pcl_visualization_PointCloudColorHandleringRandom) < 0) __PYX_ERR(3, 9, __pyx_L1_error)
  __pyx_ptype_3pcl_17pcl_visualization_PointCloudColorHandleringRandom = &__pyx_type_3pcl_17pcl_visualization_PointCloudColorHandleringRandom;
  if (PyType_Ready(&__pyx_type_3pcl_17pcl_visualization_PointCloudColorHandleringRGBField) < 0) __PYX_ERR(4, 9, __pyx_L1_error)
  __pyx_type_3pcl_17pcl_visualization_PointCloudColorHandleringRGBField.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "PointCloudColorHandleringRGBField", (PyObject *)&__pyx_type_3pcl_17pcl_visualization_PointCloudColorHandleringRGBField) < 0) __PYX_ERR(4, 9, __pyx_L1_error)
  __pyx_ptype_3pcl_17pcl_visualization_PointCloudColorHandleringRGBField = &__pyx_type_3pcl_17pcl_visualization_PointCloudColorHandleringRGBField;
  if (PyType_Ready(&__pyx_type_3pcl_17pcl_visualization_PointCloudGeometryHandlerCustom) < 0) __PYX_ERR(5, 9, __pyx_L1_error)
  __pyx_type_3pcl_17pcl_visualization_PointCloudGeometryHandlerCustom.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "PointCloudGeometryHandlerCustom", (PyObject *)&__pyx_type_3pcl_17pcl_visualization_PointCloudGeometryHandlerCustom) < 0) __PYX_ERR(5, 9, __pyx_L1_error)
  __pyx_ptype_3pcl_17pcl_visualization_PointCloudGeometryHandlerCustom = &__pyx_type_3pcl_17pcl_visualization_PointCloudGeometryHandlerCustom;
  if (PyType_Ready(&__pyx_type_3pcl_17pcl_visualization_PointCloudGeometryHandleringSurfaceNormal) < 0) __PYX_ERR(6, 9, __pyx_L1_error)
  __pyx_type_3pcl_17pcl_visualization_PointCloudGeometryHandleringSurfaceNormal.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "PointCloudGeometryHandleringSurfaceNormal", (PyObject *)&__pyx_type_3pcl_17pcl_visualization_PointCloudGeometryHandleringSurfaceNormal) < 0) __PYX_ERR(6, 9, __pyx_L1_error)
  __pyx_ptype_3pcl_17pcl_visualization_PointCloudGeometryHandleringSurfaceNormal = &__pyx_type_3pcl_17pcl_visualization_PointCloudGeometryHandleringSurfaceNormal;
  if (PyType_Ready(&__pyx_type_3pcl_17pcl_visualization_PointCloudGeometryHandleringXYZ) < 0) __PYX_ERR(7, 9, __pyx_L1_error)
  __pyx_type_3pcl_17pcl_visualization_PointCloudGeometryHandleringXYZ.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "PointCloudGeometryHandleringXYZ", (PyObject *)&__pyx_type_3pcl_17pcl_visualization_PointCloudGeometryHandleringXYZ) < 0) __PYX_ERR(7, 9, __pyx_L1_error)
  __pyx_ptype_3pcl_17pcl_visualization_PointCloudGeometryHandleringXYZ = &__pyx_type_3pcl_17pcl_visualization_PointCloudGeometryHandleringXYZ;
  __pyx_vtabptr_3pcl_17pcl_visualization_CloudViewing = &__pyx_vtable_3pcl_17pcl_visualization_CloudViewing;
  __pyx_vtable_3pcl_17pcl_visualization_CloudViewing.thisptr = (pcl::visualization::CloudViewer *(*)(struct __pyx_obj_3pcl_17pcl_visualization_CloudViewing *))__pyx_f_3pcl_17pcl_visualization_12CloudViewing_thisptr;
  if (PyType_Ready(&__pyx_type_3pcl_17pcl_visualization_CloudViewing) < 0) __PYX_ERR(8, 9, __pyx_L1_error)
  __pyx_type_3pcl_17pcl_visualization_CloudViewing.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_3pcl_17pcl_visualization_CloudViewing.tp_dict, __pyx_vtabptr_3pcl_17pcl_visualization_CloudViewing) < 0) __PYX_ERR(8, 9, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "CloudViewing", (PyObject *)&__pyx_type_3pcl_17pcl_visualization_CloudViewing) < 0) __PYX_ERR(8, 9, __pyx_L1_error)
  __pyx_ptype_3pcl_17pcl_visualization_CloudViewing = &__pyx_type_3pcl_17pcl_visualization_CloudViewing;
  __pyx_vtabptr_3pcl_17pcl_visualization_PCLVisualizering = &__pyx_vtable_3pcl_17pcl_visualization_PCLVisualizering;
  __pyx_vtable_3pcl_17pcl_visualization_PCLVisualizering.thisptr = (pcl::visualization::PCLVisualizer *(*)(struct __pyx_obj_3pcl_17pcl_visualization_PCLVisualizering *))__pyx_f_3pcl_17pcl_visualization_16PCLVisualizering_thisptr;
  if (PyType_Ready(&__pyx_type_3pcl_17pcl_visualization_PCLVisualizering) < 0) __PYX_ERR(9, 17, __pyx_L1_error)
  __pyx_type_3pcl_17pcl_visualization_PCLVisualizering.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_3pcl_17pcl_visualization_PCLVisualizering.tp_dict, __pyx_vtabptr_3pcl_17pcl_visualization_PCLVisualizering) < 0) __PYX_ERR(9, 17, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "PCLVisualizering", (PyObject *)&__pyx_type_3pcl_17pcl_visualization_PCLVisualizering) < 0) __PYX_ERR(9, 17, __pyx_L1_error)
  __pyx_ptype_3pcl_17pcl_visualization_PCLVisualizering = &__pyx_type_3pcl_17pcl_visualization_PCLVisualizering;
  __pyx_vtabptr_3pcl_17pcl_visualization_PCLHistogramViewing = &__pyx_vtable_3pcl_17pcl_visualization_PCLHistogramViewing;
  __pyx_vtable_3pcl_17pcl_visualization_PCLHistogramViewing.thisptr = (pcl::visualization::PCLHistogramVisualizer *(*)(struct __pyx_obj_3pcl_17pcl_visualization_PCLHistogramViewing *))__pyx_f_3pcl_17pcl_visualization_19PCLHistogramViewing_thisptr;
  if (PyType_Ready(&__pyx_type_3pcl_17pcl_visualization_PCLHistogramViewing) < 0) __PYX_ERR(10, 10, __pyx_L1_error)
  __pyx_type_3pcl_17pcl_visualization_PCLHistogramViewing.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_3pcl_17pcl_visualization_PCLHistogramViewing.tp_dict, __pyx_vtabptr_3pcl_17pcl_visualization_PCLHistogramViewing) < 0) __PYX_ERR(10, 10, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "PCLHistogramViewing", (PyObject *)&__pyx_type_3pcl_17pcl_visualization_PCLHistogramViewing) < 0) __PYX_ERR(10, 10, __pyx_L1_error)
  __pyx_ptype_3pcl_17pcl_visualization_PCLHistogramViewing = &__pyx_type_3pcl_17pcl_visualization_PCLHistogramViewing;
  /*--- Type import code ---*/
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "type", 
  #if CYTHON_COMPILING_IN_PYPY
  sizeof(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject),
  #endif
  0); if (unlikely(!__pyx_ptype_7cpython_4type_type)) __PYX_ERR(15, 9, __pyx_L1_error)
  __pyx_ptype_7cpython_4bool_bool = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "bool", sizeof(PyBoolObject), 0); if (unlikely(!__pyx_ptype_7cpython_4bool_bool)) __PYX_ERR(16, 8, __pyx_L1_error)
  __pyx_ptype_7cpython_7complex_complex = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "complex", sizeof(PyComplexObject), 0); if (unlikely(!__pyx_ptype_7cpython_7complex_complex)) __PYX_ERR(17, 15, __pyx_L1_error)
  __pyx_ptype_5numpy_dtype = __Pyx_ImportType("numpy", "dtype", sizeof(PyArray_Descr), 0); if (unlikely(!__pyx_ptype_5numpy_dtype)) __PYX_ERR(11, 155, __pyx_L1_error)
  __pyx_ptype_5numpy_flatiter = __Pyx_ImportType("numpy", "flatiter", sizeof(PyArrayIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_flatiter)) __PYX_ERR(11, 168, __pyx_L1_error)
  __pyx_ptype_5numpy_broadcast = __Pyx_ImportType("numpy", "broadcast", sizeof(PyArrayMultiIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_broadcast)) __PYX_ERR(11, 172, __pyx_L1_error)
  __pyx_ptype_5numpy_ndarray = __Pyx_ImportType("numpy", "ndarray", sizeof(PyArrayObject), 0); if (unlikely(!__pyx_ptype_5numpy_ndarray)) __PYX_ERR(11, 181, __pyx_L1_error)
  __pyx_ptype_5numpy_ufunc = __Pyx_ImportType("numpy", "ufunc", sizeof(PyUFuncObject), 0); if (unlikely(!__pyx_ptype_5numpy_ufunc)) __PYX_ERR(11, 861, __pyx_L1_error)
  __pyx_ptype_3pcl_4_pcl_PointCloud = __Pyx_ImportType("pcl._pcl", "PointCloud", sizeof(struct __pyx_obj_3pcl_4_pcl_PointCloud), 1); if (unlikely(!__pyx_ptype_3pcl_4_pcl_PointCloud)) __PYX_ERR(18, 15, __pyx_L1_error)
  __pyx_vtabptr_3pcl_4_pcl_PointCloud = (struct __pyx_vtabstruct_3pcl_4_pcl_PointCloud*)__Pyx_GetVtable(__pyx_ptype_3pcl_4_pcl_PointCloud->tp_dict); if (unlikely(!__pyx_vtabptr_3pcl_4_pcl_PointCloud)) __PYX_ERR(18, 15, __pyx_L1_error)
  __pyx_ptype_3pcl_4_pcl_PointCloud_PointXYZI = __Pyx_ImportType("pcl._pcl", "PointCloud_PointXYZI", sizeof(struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZI), 1); if (unlikely(!__pyx_ptype_3pcl_4_pcl_PointCloud_PointXYZI)) __PYX_ERR(18, 28, __pyx_L1_error)
  __pyx_vtabptr_3pcl_4_pcl_PointCloud_PointXYZI = (struct __pyx_vtabstruct_3pcl_4_pcl_PointCloud_PointXYZI*)__Pyx_GetVtable(__pyx_ptype_3pcl_4_pcl_PointCloud_PointXYZI->tp_dict); if (unlikely(!__pyx_vtabptr_3pcl_4_pcl_PointCloud_PointXYZI)) __PYX_ERR(18, 28, __pyx_L1_error)
  __pyx_ptype_3pcl_4_pcl_PointCloud_PointXYZRGB = __Pyx_ImportType("pcl._pcl", "PointCloud_PointXYZRGB", sizeof(struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZRGB), 1); if (unlikely(!__pyx_ptype_3pcl_4_pcl_PointCloud_PointXYZRGB)) __PYX_ERR(18, 41, __pyx_L1_error)
  __pyx_vtabptr_3pcl_4_pcl_PointCloud_PointXYZRGB = (struct __pyx_vtabstruct_3pcl_4_pcl_PointCloud_PointXYZRGB*)__Pyx_GetVtable(__pyx_ptype_3pcl_4_pcl_PointCloud_PointXYZRGB->tp_dict); if (unlikely(!__pyx_vtabptr_3pcl_4_pcl_PointCloud_PointXYZRGB)) __PYX_ERR(18, 41, __pyx_L1_error)
  __pyx_ptype_3pcl_4_pcl_PointCloud_PointXYZRGBA = __Pyx_ImportType("pcl._pcl", "PointCloud_PointXYZRGBA", sizeof(struct __pyx_obj_3pcl_4_pcl_PointCloud_PointXYZRGBA), 1); if (unlikely(!__pyx_ptype_3pcl_4_pcl_PointCloud_PointXYZRGBA)) __PYX_ERR(18, 54, __pyx_L1_error)
  __pyx_vtabptr_3pcl_4_pcl_PointCloud_PointXYZRGBA = (struct __pyx_vtabstruct_3pcl_4_pcl_PointCloud_PointXYZRGBA*)__Pyx_GetVtable(__pyx_ptype_3pcl_4_pcl_PointCloud_PointXYZRGBA->tp_dict); if (unlikely(!__pyx_vtabptr_3pcl_4_pcl_PointCloud_PointXYZRGBA)) __PYX_ERR(18, 54, __pyx_L1_error)
  __pyx_ptype_3pcl_4_pcl_Vertices = __Pyx_ImportType("pcl._pcl", "Vertices", sizeof(struct __pyx_obj_3pcl_4_pcl_Vertices), 1); if (unlikely(!__pyx_ptype_3pcl_4_pcl_Vertices)) __PYX_ERR(18, 66, __pyx_L1_error)
  __pyx_vtabptr_3pcl_4_pcl_Vertices = (struct __pyx_vtabstruct_3pcl_4_pcl_Vertices*)__Pyx_GetVtable(__pyx_ptype_3pcl_4_pcl_Vertices->tp_dict); if (unlikely(!__pyx_vtabptr_3pcl_4_pcl_Vertices)) __PYX_ERR(18, 66, __pyx_L1_error)
  __pyx_ptype_3pcl_4_pcl_PointCloud_PointWithViewpoint = __Pyx_ImportType("pcl._pcl", "PointCloud_PointWithViewpoint", sizeof(struct __pyx_obj_3pcl_4_pcl_PointCloud_PointWithViewpoint), 1); if (unlikely(!__pyx_ptype_3pcl_4_pcl_PointCloud_PointWithViewpoint)) __PYX_ERR(18, 78, __pyx_L1_error)
  __pyx_vtabptr_3pcl_4_pcl_PointCloud_PointWithViewpoint = (struct __pyx_vtabstruct_3pcl_4_pcl_PointCloud_PointWithViewpoint*)__Pyx_GetVtable(__pyx_ptype_3pcl_4_pcl_PointCloud_PointWithViewpoint->tp_dict); if (unlikely(!__pyx_vtabptr_3pcl_4_pcl_PointCloud_PointWithViewpoint)) __PYX_ERR(18, 78, __pyx_L1_error)
  __pyx_ptype_3pcl_4_pcl_PointCloud_Normal = __Pyx_ImportType("pcl._pcl", "PointCloud_Normal", sizeof(struct __pyx_obj_3pcl_4_pcl_PointCloud_Normal), 1); if (unlikely(!__pyx_ptype_3pcl_4_pcl_PointCloud_Normal)) __PYX_ERR(18, 91, __pyx_L1_error)
  __pyx_vtabptr_3pcl_4_pcl_PointCloud_Normal = (struct __pyx_vtabstruct_3pcl_4_pcl_PointCloud_Normal*)__Pyx_GetVtable(__pyx_ptype_3pcl_4_pcl_PointCloud_Normal->tp_dict); if (unlikely(!__pyx_vtabptr_3pcl_4_pcl_PointCloud_Normal)) __PYX_ERR(18, 91, __pyx_L1_error)
  __pyx_ptype_3pcl_4_pcl_PointCloud_PointNormal = __Pyx_ImportType("pcl._pcl", "PointCloud_PointNormal", sizeof(struct __pyx_obj_3pcl_4_pcl_PointCloud_PointNormal), 1); if (unlikely(!__pyx_ptype_3pcl_4_pcl_PointCloud_PointNormal)) __PYX_ERR(18, 104, __pyx_L1_error)
  __pyx_vtabptr_3pcl_4_pcl_PointCloud_PointNormal = (struct __pyx_vtabstruct_3pcl_4_pcl_PointCloud_PointNormal*)__Pyx_GetVtable(__pyx_ptype_3pcl_4_pcl_PointCloud_PointNormal->tp_dict); if (unlikely(!__pyx_vtabptr_3pcl_4_pcl_PointCloud_PointNormal)) __PYX_ERR(18, 104, __pyx_L1_error)
  __pyx_ptype_3pcl_4_pcl_KdTree = __Pyx_ImportType("pcl._pcl", "KdTree", sizeof(struct __pyx_obj_3pcl_4_pcl_KdTree), 1); if (unlikely(!__pyx_ptype_3pcl_4_pcl_KdTree)) __PYX_ERR(18, 118, __pyx_L1_error)
  __pyx_vtabptr_3pcl_4_pcl_KdTree = (struct __pyx_vtabstruct_3pcl_4_pcl_KdTree*)__Pyx_GetVtable(__pyx_ptype_3pcl_4_pcl_KdTree->tp_dict); if (unlikely(!__pyx_vtabptr_3pcl_4_pcl_KdTree)) __PYX_ERR(18, 118, __pyx_L1_error)
  __pyx_ptype_3pcl_4_pcl_RangeImages = __Pyx_ImportType("pcl._pcl", "RangeImages", sizeof(struct __pyx_obj_3pcl_4_pcl_RangeImages), 1); if (unlikely(!__pyx_ptype_3pcl_4_pcl_RangeImages)) __PYX_ERR(18, 135, __pyx_L1_error)
  __pyx_vtabptr_3pcl_4_pcl_RangeImages = (struct __pyx_vtabstruct_3pcl_4_pcl_RangeImages*)__Pyx_GetVtable(__pyx_ptype_3pcl_4_pcl_RangeImages->tp_dict); if (unlikely(!__pyx_vtabptr_3pcl_4_pcl_RangeImages)) __PYX_ERR(18, 135, __pyx_L1_error)
  __pyx_ptype_3pcl_4_pcl_SampleConsensusModel = __Pyx_ImportType("pcl._pcl", "SampleConsensusModel", sizeof(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModel), 1); if (unlikely(!__pyx_ptype_3pcl_4_pcl_SampleConsensusModel)) __PYX_ERR(18, 163, __pyx_L1_error)
  __pyx_vtabptr_3pcl_4_pcl_SampleConsensusModel = (struct __pyx_vtabstruct_3pcl_4_pcl_SampleConsensusModel*)__Pyx_GetVtable(__pyx_ptype_3pcl_4_pcl_SampleConsensusModel->tp_dict); if (unlikely(!__pyx_vtabptr_3pcl_4_pcl_SampleConsensusModel)) __PYX_ERR(18, 163, __pyx_L1_error)
  __pyx_ptype_3pcl_4_pcl_SampleConsensusModelPlane = __Pyx_ImportType("pcl._pcl", "SampleConsensusModelPlane", sizeof(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelPlane), 1); if (unlikely(!__pyx_ptype_3pcl_4_pcl_SampleConsensusModelPlane)) __PYX_ERR(18, 170, __pyx_L1_error)
  __pyx_vtabptr_3pcl_4_pcl_SampleConsensusModelPlane = (struct __pyx_vtabstruct_3pcl_4_pcl_SampleConsensusModelPlane*)__Pyx_GetVtable(__pyx_ptype_3pcl_4_pcl_SampleConsensusModelPlane->tp_dict); if (unlikely(!__pyx_vtabptr_3pcl_4_pcl_SampleConsensusModelPlane)) __PYX_ERR(18, 170, __pyx_L1_error)
  __pyx_ptype_3pcl_4_pcl_SampleConsensusModelSphere = __Pyx_ImportType("pcl._pcl", "SampleConsensusModelSphere", sizeof(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelSphere), 1); if (unlikely(!__pyx_ptype_3pcl_4_pcl_SampleConsensusModelSphere)) __PYX_ERR(18, 177, __pyx_L1_error)
  __pyx_vtabptr_3pcl_4_pcl_SampleConsensusModelSphere = (struct __pyx_vtabstruct_3pcl_4_pcl_SampleConsensusModelSphere*)__Pyx_GetVtable(__pyx_ptype_3pcl_4_pcl_SampleConsensusModelSphere->tp_dict); if (unlikely(!__pyx_vtabptr_3pcl_4_pcl_SampleConsensusModelSphere)) __PYX_ERR(18, 177, __pyx_L1_error)
  __pyx_ptype_3pcl_4_pcl_SampleConsensusModelCylinder = __Pyx_ImportType("pcl._pcl", "SampleConsensusModelCylinder", sizeof(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelCylinder), 1); if (unlikely(!__pyx_ptype_3pcl_4_pcl_SampleConsensusModelCylinder)) __PYX_ERR(18, 184, __pyx_L1_error)
  __pyx_vtabptr_3pcl_4_pcl_SampleConsensusModelCylinder = (struct __pyx_vtabstruct_3pcl_4_pcl_SampleConsensusModelCylinder*)__Pyx_GetVtable(__pyx_ptype_3pcl_4_pcl_SampleConsensusModelCylinder->tp_dict); if (unlikely(!__pyx_vtabptr_3pcl_4_pcl_SampleConsensusModelCylinder)) __PYX_ERR(18, 184, __pyx_L1_error)
  __pyx_ptype_3pcl_4_pcl_SampleConsensusModelLine = __Pyx_ImportType("pcl._pcl", "SampleConsensusModelLine", sizeof(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelLine), 1); if (unlikely(!__pyx_ptype_3pcl_4_pcl_SampleConsensusModelLine)) __PYX_ERR(18, 191, __pyx_L1_error)
  __pyx_vtabptr_3pcl_4_pcl_SampleConsensusModelLine = (struct __pyx_vtabstruct_3pcl_4_pcl_SampleConsensusModelLine*)__Pyx_GetVtable(__pyx_ptype_3pcl_4_pcl_SampleConsensusModelLine->tp_dict); if (unlikely(!__pyx_vtabptr_3pcl_4_pcl_SampleConsensusModelLine)) __PYX_ERR(18, 191, __pyx_L1_error)
  __pyx_ptype_3pcl_4_pcl_SampleConsensusModelRegistration = __Pyx_ImportType("pcl._pcl", "SampleConsensusModelRegistration", sizeof(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelRegistration), 1); if (unlikely(!__pyx_ptype_3pcl_4_pcl_SampleConsensusModelRegistration)) __PYX_ERR(18, 198, __pyx_L1_error)
  __pyx_vtabptr_3pcl_4_pcl_SampleConsensusModelRegistration = (struct __pyx_vtabstruct_3pcl_4_pcl_SampleConsensusModelRegistration*)__Pyx_GetVtable(__pyx_ptype_3pcl_4_pcl_SampleConsensusModelRegistration->tp_dict); if (unlikely(!__pyx_vtabptr_3pcl_4_pcl_SampleConsensusModelRegistration)) __PYX_ERR(18, 198, __pyx_L1_error)
  __pyx_ptype_3pcl_4_pcl_SampleConsensusModelStick = __Pyx_ImportType("pcl._pcl", "SampleConsensusModelStick", sizeof(struct __pyx_obj_3pcl_4_pcl_SampleConsensusModelStick), 1); if (unlikely(!__pyx_ptype_3pcl_4_pcl_SampleConsensusModelStick)) __PYX_ERR(18, 205, __pyx_L1_error)
  __pyx_vtabptr_3pcl_4_pcl_SampleConsensusModelStick = (struct __pyx_vtabstruct_3pcl_4_pcl_SampleConsensusModelStick*)__Pyx_GetVtable(__pyx_ptype_3pcl_4_pcl_SampleConsensusModelStick->tp_dict); if (unlikely(!__pyx_vtabptr_3pcl_4_pcl_SampleConsensusModelStick)) __PYX_ERR(18, 205, __pyx_L1_error)
  /*--- Variable import code ---*/
  /*--- Function import code ---*/
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(13, 1, __pyx_L1_error)
  #endif

  /* "pcl/pcl_visualization.pyx":5
 * from libcpp cimport bool
 * 
 * from collections import Sequence             # <<<<<<<<<<<<<<
 * import numbers
 * import numpy as np
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(13, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_Sequence);
  __Pyx_GIVEREF(__pyx_n_s_Sequence);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_Sequence);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_collections, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(13, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_Sequence); if (unlikely(!__pyx_t_1)) __PYX_ERR(13, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Sequence, __pyx_t_1) < 0) __PYX_ERR(13, 5, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pcl/pcl_visualization.pyx":6
 * 
 * from collections import Sequence
 * import numbers             # <<<<<<<<<<<<<<
 * import numpy as np
 * cimport numpy as cnp
 */
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_numbers, 0, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(13, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_numbers, __pyx_t_2) < 0) __PYX_ERR(13, 6, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pcl/pcl_visualization.pyx":7
 * from collections import Sequence
 * import numbers
 * import numpy as np             # <<<<<<<<<<<<<<
 * cimport numpy as cnp
 * 
 */
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_numpy, 0, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(13, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_np, __pyx_t_2) < 0) __PYX_ERR(13, 7, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pcl/pcl_visualization.pyx":25
 * from boost_shared_ptr cimport sp_assign
 * 
 * cnp.import_array()             # <<<<<<<<<<<<<<
 * 
 * ### Enum ###
 */
  __pyx_t_3 = __pyx_f_5numpy_import_array(); if (unlikely(__pyx_t_3 == -1)) __PYX_ERR(13, 25, __pyx_L1_error)

  /* "pcl/pcl_visualization.pyx":34
 * # Re: [Cython] resolving name conflict -- does not work for enums !?
 * # https://www.mail-archive.com/cython-dev@codespeak.net/msg02494.html
 * PCLVISUALIZER_POINT_SIZE = vis.PCL_VISUALIZER_POINT_SIZE             # <<<<<<<<<<<<<<
 * PCLVISUALIZER_OPACITY = vis.PCL_VISUALIZER_OPACITY
 * PCLVISUALIZER_LINE_WIDTH = vis.PCL_VISUALIZER_LINE_WIDTH
 */
  __pyx_t_2 = __Pyx_PyInt_From_enum__pcl_3a__3a_visualization_3a__3a_RenderingProperties(pcl::visualization::PCL_VISUALIZER_POINT_SIZE); if (unlikely(!__pyx_t_2)) __PYX_ERR(13, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PCLVISUALIZER_POINT_SIZE, __pyx_t_2) < 0) __PYX_ERR(13, 34, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pcl/pcl_visualization.pyx":35
 * # https://www.mail-archive.com/cython-dev@codespeak.net/msg02494.html
 * PCLVISUALIZER_POINT_SIZE = vis.PCL_VISUALIZER_POINT_SIZE
 * PCLVISUALIZER_OPACITY = vis.PCL_VISUALIZER_OPACITY             # <<<<<<<<<<<<<<
 * PCLVISUALIZER_LINE_WIDTH = vis.PCL_VISUALIZER_LINE_WIDTH
 * PCLVISUALIZER_FONT_SIZE = vis.PCL_VISUALIZER_FONT_SIZE
 */
  __pyx_t_2 = __Pyx_PyInt_From_enum__pcl_3a__3a_visualization_3a__3a_RenderingProperties(pcl::visualization::PCL_VISUALIZER_OPACITY); if (unlikely(!__pyx_t_2)) __PYX_ERR(13, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PCLVISUALIZER_OPACITY, __pyx_t_2) < 0) __PYX_ERR(13, 35, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pcl/pcl_visualization.pyx":36
 * PCLVISUALIZER_POINT_SIZE = vis.PCL_VISUALIZER_POINT_SIZE
 * PCLVISUALIZER_OPACITY = vis.PCL_VISUALIZER_OPACITY
 * PCLVISUALIZER_LINE_WIDTH = vis.PCL_VISUALIZER_LINE_WIDTH             # <<<<<<<<<<<<<<
 * PCLVISUALIZER_FONT_SIZE = vis.PCL_VISUALIZER_FONT_SIZE
 * PCLVISUALIZER_COLOR = vis.PCL_VISUALIZER_COLOR
 */
  __pyx_t_2 = __Pyx_PyInt_From_enum__pcl_3a__3a_visualization_3a__3a_RenderingProperties(pcl::visualization::PCL_VISUALIZER_LINE_WIDTH); if (unlikely(!__pyx_t_2)) __PYX_ERR(13, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PCLVISUALIZER_LINE_WIDTH, __pyx_t_2) < 0) __PYX_ERR(13, 36, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pcl/pcl_visualization.pyx":37
 * PCLVISUALIZER_OPACITY = vis.PCL_VISUALIZER_OPACITY
 * PCLVISUALIZER_LINE_WIDTH = vis.PCL_VISUALIZER_LINE_WIDTH
 * PCLVISUALIZER_FONT_SIZE = vis.PCL_VISUALIZER_FONT_SIZE             # <<<<<<<<<<<<<<
 * PCLVISUALIZER_COLOR = vis.PCL_VISUALIZER_COLOR
 * PCLVISUALIZER_REPRESENTATION = vis.PCL_VISUALIZER_REPRESENTATION
 */
  __pyx_t_2 = __Pyx_PyInt_From_enum__pcl_3a__3a_visualization_3a__3a_RenderingProperties(pcl::visualization::PCL_VISUALIZER_FONT_SIZE); if (unlikely(!__pyx_t_2)) __PYX_ERR(13, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PCLVISUALIZER_FONT_SIZE, __pyx_t_2) < 0) __PYX_ERR(13, 37, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pcl/pcl_visualization.pyx":38
 * PCLVISUALIZER_LINE_WIDTH = vis.PCL_VISUALIZER_LINE_WIDTH
 * PCLVISUALIZER_FONT_SIZE = vis.PCL_VISUALIZER_FONT_SIZE
 * PCLVISUALIZER_COLOR = vis.PCL_VISUALIZER_COLOR             # <<<<<<<<<<<<<<
 * PCLVISUALIZER_REPRESENTATION = vis.PCL_VISUALIZER_REPRESENTATION
 * PCLVISUALIZER_IMMEDIATE_RENDERING = vis.PCL_VISUALIZER_IMMEDIATE_RENDERING
 */
  __pyx_t_2 = __Pyx_PyInt_From_enum__pcl_3a__3a_visualization_3a__3a_RenderingProperties(pcl::visualization::PCL_VISUALIZER_COLOR); if (unlikely(!__pyx_t_2)) __PYX_ERR(13, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PCLVISUALIZER_COLOR, __pyx_t_2) < 0) __PYX_ERR(13, 38, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pcl/pcl_visualization.pyx":39
 * PCLVISUALIZER_FONT_SIZE = vis.PCL_VISUALIZER_FONT_SIZE
 * PCLVISUALIZER_COLOR = vis.PCL_VISUALIZER_COLOR
 * PCLVISUALIZER_REPRESENTATION = vis.PCL_VISUALIZER_REPRESENTATION             # <<<<<<<<<<<<<<
 * PCLVISUALIZER_IMMEDIATE_RENDERING = vis.PCL_VISUALIZER_IMMEDIATE_RENDERING
 * 
 */
  __pyx_t_2 = __Pyx_PyInt_From_enum__pcl_3a__3a_visualization_3a__3a_RenderingProperties(pcl::visualization::PCL_VISUALIZER_REPRESENTATION); if (unlikely(!__pyx_t_2)) __PYX_ERR(13, 39, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PCLVISUALIZER_REPRESENTATION, __pyx_t_2) < 0) __PYX_ERR(13, 39, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pcl/pcl_visualization.pyx":40
 * PCLVISUALIZER_COLOR = vis.PCL_VISUALIZER_COLOR
 * PCLVISUALIZER_REPRESENTATION = vis.PCL_VISUALIZER_REPRESENTATION
 * PCLVISUALIZER_IMMEDIATE_RENDERING = vis.PCL_VISUALIZER_IMMEDIATE_RENDERING             # <<<<<<<<<<<<<<
 * 
 * # cdef enum RenderingRepresentationProperties:
 */
  __pyx_t_2 = __Pyx_PyInt_From_enum__pcl_3a__3a_visualization_3a__3a_RenderingProperties(pcl::visualization::PCL_VISUALIZER_IMMEDIATE_RENDERING); if (unlikely(!__pyx_t_2)) __PYX_ERR(13, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PCLVISUALIZER_IMMEDIATE_RENDERIN, __pyx_t_2) < 0) __PYX_ERR(13, 40, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pcl/pcl_visualization.pyx":43
 * 
 * # cdef enum RenderingRepresentationProperties:
 * PCLVISUALIZER_REPRESENTATION_POINTS = vis.PCL_VISUALIZER_REPRESENTATION_POINTS             # <<<<<<<<<<<<<<
 * PCLVISUALIZER_REPRESENTATION_WIREFRAME = vis.PCL_VISUALIZER_REPRESENTATION_WIREFRAME
 * PCLVISUALIZER_REPRESENTATION_SURFACE = vis.PCL_VISUALIZER_REPRESENTATION_SURFACE
 */
  __pyx_t_2 = __Pyx_PyInt_From_enum__pcl_3a__3a_visualization_3a__3a_RenderingRepresentationProperties(pcl::visualization::PCL_VISUALIZER_REPRESENTATION_POINTS); if (unlikely(!__pyx_t_2)) __PYX_ERR(13, 43, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PCLVISUALIZER_REPRESENTATION_POI, __pyx_t_2) < 0) __PYX_ERR(13, 43, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pcl/pcl_visualization.pyx":44
 * # cdef enum RenderingRepresentationProperties:
 * PCLVISUALIZER_REPRESENTATION_POINTS = vis.PCL_VISUALIZER_REPRESENTATION_POINTS
 * PCLVISUALIZER_REPRESENTATION_WIREFRAME = vis.PCL_VISUALIZER_REPRESENTATION_WIREFRAME             # <<<<<<<<<<<<<<
 * PCLVISUALIZER_REPRESENTATION_SURFACE = vis.PCL_VISUALIZER_REPRESENTATION_SURFACE
 * 
 */
  __pyx_t_2 = __Pyx_PyInt_From_enum__pcl_3a__3a_visualization_3a__3a_RenderingRepresentationProperties(pcl::visualization::PCL_VISUALIZER_REPRESENTATION_WIREFRAME); if (unlikely(!__pyx_t_2)) __PYX_ERR(13, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PCLVISUALIZER_REPRESENTATION_WIR, __pyx_t_2) < 0) __PYX_ERR(13, 44, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pcl/pcl_visualization.pyx":45
 * PCLVISUALIZER_REPRESENTATION_POINTS = vis.PCL_VISUALIZER_REPRESENTATION_POINTS
 * PCLVISUALIZER_REPRESENTATION_WIREFRAME = vis.PCL_VISUALIZER_REPRESENTATION_WIREFRAME
 * PCLVISUALIZER_REPRESENTATION_SURFACE = vis.PCL_VISUALIZER_REPRESENTATION_SURFACE             # <<<<<<<<<<<<<<
 * 
 * ### Enum Setting(define Class InternalType) ###
 */
  __pyx_t_2 = __Pyx_PyInt_From_enum__pcl_3a__3a_visualization_3a__3a_RenderingRepresentationProperties(pcl::visualization::PCL_VISUALIZER_REPRESENTATION_SURFACE); if (unlikely(!__pyx_t_2)) __PYX_ERR(13, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PCLVISUALIZER_REPRESENTATION_SUR, __pyx_t_2) < 0) __PYX_ERR(13, 45, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pcl/pcl_visualization.pyx":1
 * # -*- coding: utf-8 -*-             # <<<<<<<<<<<<<<
 * # cython: embedsignature=True
 * from libcpp cimport bool
 */
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) __PYX_ERR(13, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_2) < 0) __PYX_ERR(13, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "string.from_py":13
 * 
 * @cname("__pyx_convert_string_from_py_std__in_string")
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t length
 *     cdef char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 */

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init pcl.pcl_visualization", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init pcl.pcl_visualization");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* KeywordStringCheck */
static CYTHON_INLINE int __Pyx_CheckKeywordStrings(
    PyObject *kwdict,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
#if CYTHON_COMPILING_IN_PYPY
    if (!kw_allowed && PyDict_Next(kwdict, &pos, &key, 0))
        goto invalid_keyword;
    return 1;
#else
    while (PyDict_Next(kwdict, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key)))
        #endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
    }
    if ((!kw_allowed) && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    return 0;
#endif
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* ArgTypeTest */
static void __Pyx_RaiseArgumentTypeInvalid(const char* name, PyObject *obj, PyTypeObject *type) {
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected %.200s, got %.200s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
}
static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact)
{
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (none_allowed && obj == Py_None) return 1;
    else if (exact) {
        if (likely(Py_TYPE(obj) == type)) return 1;
        #if PY_MAJOR_VERSION == 2
        else if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(PyObject_TypeCheck(obj, type))) return 1;
    }
    __Pyx_RaiseArgumentTypeInvalid(name, obj, type);
    return 0;
}

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* WriteUnraisableException */
static void __Pyx_WriteUnraisable(const char *name, CYTHON_UNUSED int clineno,
                                  CYTHON_UNUSED int lineno, CYTHON_UNUSED const char *filename,
                                  int full_traceback, CYTHON_UNUSED int nogil) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
    __Pyx_PyThreadState_declare
#ifdef WITH_THREAD
    PyGILState_STATE state;
    if (nogil)
        state = PyGILState_Ensure();
#ifdef _MSC_VER
    else state = (PyGILState_STATE)-1;
#endif
#endif
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    if (full_traceback) {
        Py_XINCREF(old_exc);
        Py_XINCREF(old_val);
        Py_XINCREF(old_tb);
        __Pyx_ErrRestore(old_exc, old_val, old_tb);
        PyErr_PrintEx(1);
    }
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
#ifdef WITH_THREAD
    if (nogil)
        PyGILState_Release(state);
#endif
}

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* RaiseException */
#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    __Pyx_PyThreadState_declare
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
#if PY_VERSION_HEX >= 0x03030000
    if (cause) {
#else
    if (cause && cause != Py_None) {
#endif
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* RaiseTooManyValuesToUnpack */
  static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

/* RaiseNeedMoreValuesToUnpack */
  static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

/* RaiseNoneIterError */
  static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

/* ExtTypeTest */
  static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(PyObject_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

/* SaveResetException */
  #if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
}
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
#endif

/* PyErrExceptionMatches */
  #if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    PyObject *exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
    return PyErr_GivenExceptionMatches(exc_type, err);
}
#endif

/* GetException */
  #if CYTHON_FAST_THREAD_STATE
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb) {
#endif
    PyObject *local_type, *local_value, *local_tb;
#if CYTHON_FAST_THREAD_STATE
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_FAST_THREAD_STATE
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_FAST_THREAD_STATE
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

/* SetVTable */
    static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItem(dict, __pyx_n_s_pyx_vtable, ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

/* GetVTable */
    static void* __Pyx_GetVtable(PyObject *dict) {
    void* ptr;
    PyObject *ob = PyObject_GetItem(dict, __pyx_n_s_pyx_vtable);
    if (!ob)
        goto bad;
#if PY_VERSION_HEX >= 0x02070000
    ptr = PyCapsule_GetPointer(ob, 0);
#else
    ptr = PyCObject_AsVoidPtr(ob);
#endif
    if (!ptr && !PyErr_Occurred())
        PyErr_SetString(PyExc_RuntimeError, "invalid vtable found for imported type");
    Py_DECREF(ob);
    return ptr;
bad:
    Py_XDECREF(ob);
    return NULL;
}

/* Import */
    static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_VERSION_HEX < 0x03030000
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                #if PY_VERSION_HEX < 0x03030000
                PyObject *py_level = PyInt_FromLong(1);
                if (!py_level)
                    goto bad;
                module = PyObject_CallFunctionObjArgs(py_import,
                    name, global_dict, empty_dict, list, py_level, NULL);
                Py_DECREF(py_level);
                #else
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                #endif
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_VERSION_HEX < 0x03030000
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_VERSION_HEX < 0x03030000
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

/* ImportFrom */
    static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

/* CodeObjectCache */
    static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, (size_t)new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

/* AddTraceback */
    #include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    py_code = __pyx_find_code_object(c_line ? c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        __pyx_d,      /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

/* CIntToPy */
    static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__pcl_3a__3a_visualization_3a__3a_RenderingProperties(enum pcl::visualization::RenderingProperties value) {
    const enum pcl::visualization::RenderingProperties neg_one = (enum pcl::visualization::RenderingProperties) -1, const_zero = (enum pcl::visualization::RenderingProperties) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(enum pcl::visualization::RenderingProperties) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(enum pcl::visualization::RenderingProperties) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum pcl::visualization::RenderingProperties) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(enum pcl::visualization::RenderingProperties) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum pcl::visualization::RenderingProperties) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(enum pcl::visualization::RenderingProperties),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
    static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__pcl_3a__3a_visualization_3a__3a_RenderingRepresentationProperties(enum pcl::visualization::RenderingRepresentationProperties value) {
    const enum pcl::visualization::RenderingRepresentationProperties neg_one = (enum pcl::visualization::RenderingRepresentationProperties) -1, const_zero = (enum pcl::visualization::RenderingRepresentationProperties) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(enum pcl::visualization::RenderingRepresentationProperties) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(enum pcl::visualization::RenderingRepresentationProperties) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum pcl::visualization::RenderingRepresentationProperties) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(enum pcl::visualization::RenderingRepresentationProperties) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum pcl::visualization::RenderingRepresentationProperties) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(enum pcl::visualization::RenderingRepresentationProperties),
                                     little, !is_unsigned);
    }
}

/* CIntFromPyVerify */
    #define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* Print */
    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION < 3
static PyObject *__Pyx_GetStdout(void) {
    PyObject *f = PySys_GetObject((char *)"stdout");
    if (!f) {
        PyErr_SetString(PyExc_RuntimeError, "lost sys.stdout");
    }
    return f;
}
static int __Pyx_Print(PyObject* f, PyObject *arg_tuple, int newline) {
    int i;
    if (!f) {
        if (!(f = __Pyx_GetStdout()))
            return -1;
    }
    Py_INCREF(f);
    for (i=0; i < PyTuple_GET_SIZE(arg_tuple); i++) {
        PyObject* v;
        if (PyFile_SoftSpace(f, 1)) {
            if (PyFile_WriteString(" ", f) < 0)
                goto error;
        }
        v = PyTuple_GET_ITEM(arg_tuple, i);
        if (PyFile_WriteObject(v, f, Py_PRINT_RAW) < 0)
            goto error;
        if (PyString_Check(v)) {
            char *s = PyString_AsString(v);
            Py_ssize_t len = PyString_Size(v);
            if (len > 0) {
                switch (s[len-1]) {
                    case ' ': break;
                    case '\f': case '\r': case '\n': case '\t': case '\v':
                        PyFile_SoftSpace(f, 0);
                        break;
                    default:  break;
                }
            }
        }
    }
    if (newline) {
        if (PyFile_WriteString("\n", f) < 0)
            goto error;
        PyFile_SoftSpace(f, 0);
    }
    Py_DECREF(f);
    return 0;
error:
    Py_DECREF(f);
    return -1;
}
#else
static int __Pyx_Print(PyObject* stream, PyObject *arg_tuple, int newline) {
    PyObject* kwargs = 0;
    PyObject* result = 0;
    PyObject* end_string;
    if (unlikely(!__pyx_print)) {
        __pyx_print = PyObject_GetAttr(__pyx_b, __pyx_n_s_print);
        if (!__pyx_print)
            return -1;
    }
    if (stream) {
        kwargs = PyDict_New();
        if (unlikely(!kwargs))
            return -1;
        if (unlikely(PyDict_SetItem(kwargs, __pyx_n_s_file, stream) < 0))
            goto bad;
        if (!newline) {
            end_string = PyUnicode_FromStringAndSize(" ", 1);
            if (unlikely(!end_string))
                goto bad;
            if (PyDict_SetItem(kwargs, __pyx_n_s_end, end_string) < 0) {
                Py_DECREF(end_string);
                goto bad;
            }
            Py_DECREF(end_string);
        }
    } else if (!newline) {
        if (unlikely(!__pyx_print_kwargs)) {
            __pyx_print_kwargs = PyDict_New();
            if (unlikely(!__pyx_print_kwargs))
                return -1;
            end_string = PyUnicode_FromStringAndSize(" ", 1);
            if (unlikely(!end_string))
                return -1;
            if (PyDict_SetItem(__pyx_print_kwargs, __pyx_n_s_end, end_string) < 0) {
                Py_DECREF(end_string);
                return -1;
            }
            Py_DECREF(end_string);
        }
        kwargs = __pyx_print_kwargs;
    }
    result = PyObject_Call(__pyx_print, arg_tuple, kwargs);
    if (unlikely(kwargs) && (kwargs != __pyx_print_kwargs))
        Py_DECREF(kwargs);
    if (!result)
        return -1;
    Py_DECREF(result);
    return 0;
bad:
    if (kwargs != __pyx_print_kwargs)
        Py_XDECREF(kwargs);
    return -1;
}
#endif

/* Declarations */
    #if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return ::std::complex< float >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return x + y*(__pyx_t_float_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      __pyx_t_float_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
    #if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sum_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_diff_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prod_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        if (b.imag == 0) {
            return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabsf(b.real) >= fabsf(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                float r = b.imag / b.real;
                float s = 1.0 / (b.real + b.imag * r);
                return __pyx_t_float_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            float r = b.real / b.imag;
            float s = 1.0 / (b.imag + b.real * r);
            return __pyx_t_float_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        if (b.imag == 0) {
            return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            float denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_float_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_neg_float(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_float(__pyx_t_float_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conj_float(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE float __Pyx_c_abs_float(__pyx_t_float_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrtf(z.real*z.real + z.imag*z.imag);
          #else
            return hypotf(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_pow_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
            __pyx_t_float_complex z;
            float r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    float denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(a, a);
                    case 3:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(z, a);
                    case 4:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if (b.imag == 0) {
                    z.real = powf(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2f(0, -1);
                }
            } else {
                r = __Pyx_c_abs_float(a);
                theta = atan2f(a.imag, a.real);
            }
            lnr = logf(r);
            z_r = expf(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cosf(z_theta);
            z.imag = z_r * sinf(z_theta);
            return z;
        }
    #endif
#endif

/* Declarations */
    #if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return ::std::complex< double >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return x + y*(__pyx_t_double_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      __pyx_t_double_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
    #if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabs(b.real) >= fabs(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                double r = b.imag / b.real;
                double s = 1.0 / (b.real + b.imag * r);
                return __pyx_t_double_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            double r = b.real / b.imag;
            double s = 1.0 / (b.imag + b.real * r);
            return __pyx_t_double_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            double denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_double_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrt(z.real*z.real + z.imag*z.imag);
          #else
            return hypot(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
            __pyx_t_double_complex z;
            double r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    double denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(a, a);
                    case 3:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, a);
                    case 4:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if (b.imag == 0) {
                    z.real = pow(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2(0, -1);
                }
            } else {
                r = __Pyx_c_abs_double(a);
                theta = atan2(a.imag, a.real);
            }
            lnr = log(r);
            z_r = exp(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cos(z_theta);
            z.imag = z_r * sin(z_theta);
            return z;
        }
    #endif
#endif

/* CIntToPy */
    static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
    static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__NPY_TYPES(enum NPY_TYPES value) {
    const enum NPY_TYPES neg_one = (enum NPY_TYPES) -1, const_zero = (enum NPY_TYPES) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(enum NPY_TYPES) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(enum NPY_TYPES) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum NPY_TYPES) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(enum NPY_TYPES) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum NPY_TYPES) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(enum NPY_TYPES),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
    static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* PrintOne */
    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION < 3
static int __Pyx_PrintOne(PyObject* f, PyObject *o) {
    if (!f) {
        if (!(f = __Pyx_GetStdout()))
            return -1;
    }
    Py_INCREF(f);
    if (PyFile_SoftSpace(f, 0)) {
        if (PyFile_WriteString(" ", f) < 0)
            goto error;
    }
    if (PyFile_WriteObject(o, f, Py_PRINT_RAW) < 0)
        goto error;
    if (PyFile_WriteString("\n", f) < 0)
        goto error;
    Py_DECREF(f);
    return 0;
error:
    Py_DECREF(f);
    return -1;
    /* the line below is just to avoid C compiler
     * warnings about unused functions */
    return __Pyx_Print(f, NULL, 0);
}
#else
static int __Pyx_PrintOne(PyObject* stream, PyObject *o) {
    int res;
    PyObject* arg_tuple = PyTuple_Pack(1, o);
    if (unlikely(!arg_tuple))
        return -1;
    res = __Pyx_Print(stream, arg_tuple, 1);
    Py_DECREF(arg_tuple);
    return res;
}
#endif

/* CIntToPy */
    static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
    static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* CheckBinaryVersion */
    static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* ModuleImport */
    #ifndef __PYX_HAVE_RT_ImportModule
#define __PYX_HAVE_RT_ImportModule
static PyObject *__Pyx_ImportModule(const char *name) {
    PyObject *py_name = 0;
    PyObject *py_module = 0;
    py_name = __Pyx_PyIdentifier_FromString(name);
    if (!py_name)
        goto bad;
    py_module = PyImport_Import(py_name);
    Py_DECREF(py_name);
    return py_module;
bad:
    Py_XDECREF(py_name);
    return 0;
}
#endif

/* TypeImport */
    #ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,
    size_t size, int strict)
{
    PyObject *py_module = 0;
    PyObject *result = 0;
    PyObject *py_name = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    py_module = __Pyx_ImportModule(module_name);
    if (!py_module)
        goto bad;
    py_name = __Pyx_PyIdentifier_FromString(class_name);
    if (!py_name)
        goto bad;
    result = PyObject_GetAttr(py_module, py_name);
    Py_DECREF(py_name);
    py_name = 0;
    Py_DECREF(py_module);
    py_module = 0;
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (!strict && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility. Expected %zd, got %zd",
            module_name, class_name, basicsize, size);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    else if ((size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s has the wrong size, try recompiling. Expected %zd, got %zd",
            module_name, class_name, basicsize, size);
        goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(py_module);
    Py_XDECREF(result);
    return NULL;
}
#endif

/* InitStrings */
    static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if CYTHON_COMPILING_IN_CPYTHON && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
#if PY_VERSION_HEX < 0x03030000
        char* defenc_c;
        PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
        if (!defenc) return NULL;
        defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        {
            char* end = defenc_c + PyBytes_GET_SIZE(defenc);
            char* c;
            for (c = defenc_c; c < end; c++) {
                if ((unsigned char) (*c) >= 128) {
                    PyUnicode_AsASCIIString(o);
                    return NULL;
                }
            }
        }
#endif
        *length = PyBytes_GET_SIZE(defenc);
        return defenc_c;
#else
        if (__Pyx_PyUnicode_READY(o) == -1) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        if (PyUnicode_IS_ASCII(o)) {
            *length = PyUnicode_GET_LENGTH(o);
            return PyUnicode_AsUTF8(o);
        } else {
            PyUnicode_AsASCIIString(o);
            return NULL;
        }
#else
        return PyUnicode_AsUTF8AndSize(o, length);
#endif
#endif
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
  #else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
  #endif
#else
  res = PyNumber_Int(x);
#endif
  if (res) {
#if PY_MAJOR_VERSION < 3
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%.4s__ returned non-%.4s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(x);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
